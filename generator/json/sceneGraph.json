{
  "brightScriptXmlElement": {
    "attributes": {
      "initialFocus": {
        "required": false,
        "name": "initialFocus",
        "description": "Specifies the ID of a node declared in the XML file to have the initial remote control focus when the component is instantiated.",
        "descriptionHTML": "Specifies the\u0026nbsp;ID of a node declared in the XML file to have the initial remote control focus when the component is instantiated."
      },
      "extends": {
        "required": true,
        "name": "extends",
        "description": "Specifies the name of the built-in Scene Graph scene or node class whose functionality is extended by this component. For example, extends \u003d \"Group\" specifies the component has all of the functionality of the Group node class (it can have child nodes, has translation/scale/rotation fields, and so forth).",
        "descriptionHTML": "\u003cp\u003eSpecifies the name of the built-in Scene Graph scene or node class whose functionality is extended by this component. For example, \u003ccode\u003eextends \u003d \"Group\"\u003c/code\u003e specifies the component has all of the functionality of\u0026nbsp;the \u003cstrong\u003eGroup\u003c/strong\u003e node class (it\u0026nbsp;can have child nodes, has translation/scale/rotation fields, and so forth).\u003c/p\u003e"
      },
      "name": {
        "required": true,
        "name": "name",
        "description": "Specifies the name of the component. For example, if the name of the component is castmemberinfo, you could create instances of the component declaratively in an XML file node element (\u003ccastmemberinfo\u003e), or using BrightScript (createObject(\"roSGNode\",\"castmemberinfo\")).",
        "descriptionHTML": "Specifies the name of the component. For example, if the name of the component is \u003ccode\u003ecastmemberinfo\u003c/code\u003e, you could create instances of the component declaratively in an XML file \u003cstrong\u003enode\u003c/strong\u003e element\u0026nbsp;(\u003ccode\u003e\u0026lt;castmemberinfo\u0026gt;\u003c/code\u003e), or using BrightScript (\u003ccode\u003ecreateObject(\"roSGNode\",\"castmemberinfo\")\u003c/code\u003e)."
      },
      "version": {
        "required": false,
        "name": "version",
        "description": "Specifies the version of the Scene Graph API. The default is 1.0 if not specified.",
        "descriptionHTML": "Specifies the version of the Scene Graph API. The default is 1.0 if not specified."
      }
    },
    "contains": [
      {
        "contains": [
          {
            "attributes": {
              "onChange": {
                "required": false,
                "name": "onChange",
                "description": "Sets an observer call-back function to be added for the top-level field. The value of the attribute is a call-back function name in BrightScript code associated with the component. This attribute is provided as a quick way to set up an observer call-back function for top-level fields. It is equivalent to calling ObserveField() in BrightScript code associated with the component as follows:   m.top.ObserveField(field_name, function_name)",
                "descriptionHTML": "\u003cp\u003eSets an observer call-back function to be added for the top-level field. The value of the attribute is a call-back function name in BrightScript code associated with the component. This attribute is provided as a\u0026nbsp;quick way to set up an observer call-back function for top-level fields. It is equivalent to calling \u003ccode\u003eObserveField()\u003c/code\u003e\u0026nbsp;in BrightScript code associated with the component as follows:\u003c/p\u003e\u003cp\u003e\u0026nbsp; \u003ccode\u003em.top.ObserveField(\u003cem\u003efield_name\u003c/em\u003e, \u003cem\u003efunction_name\u003c/em\u003e)\u003c/code\u003e\u003c/p\u003e"
              },
              "alias": {
                "required": false,
                "name": "alias",
                "description": "Allows a top-level component field to be declared as an alias of a field in one of the component child nodes. This allows a field of an internal component node to be exposed to users of the component. The attribute is set to a string with format node.field, where node is the ID of a Scene Graph node element, and field is the name of one of the node fields. The type of the component child node field must match the type attribute.",
                "descriptionHTML": "Allows a top-level component field to be declared as an alias of a field in one of the component child nodes. This allows a field of an internal component\u0026nbsp;node to be exposed to users of the component. The attribute is set to a string with format \u003ccode\u003e\u003cem\u003enode\u003c/em\u003e.\u003cem\u003efield\u003c/em\u003e\u003c/code\u003e, where \u003cem\u003e\u003ccode\u003enode\u003c/code\u003e\u003c/em\u003e is the\u0026nbsp;ID of a Scene Graph node element, and \u003cem\u003e\u003ccode\u003efield\u003c/code\u003e\u003c/em\u003e is the name of one of the node fields. The type of the component child node field must match the \u003ccode\u003etype\u003c/code\u003e attribute."
              },
              "id": {
                "required": true,
                "name": "id",
                "description": "A string containing the name of the field",
                "descriptionHTML": "A string containing the name of the field"
              },
              "type": {
                "required": true,
                "name": "type",
                "description": "A string containing the type of the field. The allowable types are BrightScript fundamental types, aggregate types, and a Scene Graph node object reference, as follows: Type Description integer, int BrightScript integer type float BrightScript float type string, str BrightScript string type Boolean, bool BrightScript Boolean type vector2d X/Y coordinate array color Color type time Time type node Scene Graph node object reference floatarray Array of float intarray Array of integer boolarray Array of Boolean stringarray Array of string vector2darray Array of vector2d colorarray Array of color timearray Array of time nodearray Array of Scene Graph node object reference assocarray Associative array",
                "descriptionHTML": "\u003cp\u003eA string containing the type of the field. The allowable types are BrightScript fundamental types, aggregate types, and a Scene Graph node object reference, as follows:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eType\u003c/th\u003e\n   \u003cth\u003eDescription\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einteger, int\u003c/td\u003e\n   \u003ctd\u003eBrightScript integer type\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloat\u003c/td\u003e\n   \u003ctd\u003eBrightScript float type\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estring, str\u003c/td\u003e\n   \u003ctd\u003eBrightScript string type\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003eBoolean, bool\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eBrightScript Boolean type\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003evector2d\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eX/Y coordinate array\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003ecolor\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eColor type\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003etime\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eTime type\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003enode\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eScene Graph node object reference\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efloatarray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eArray of float\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003eintarray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eArray of integer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003eboolarray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eArray of Boolean\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003estringarray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eArray of string\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003evector2darray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eArray of vector2d\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003ecolorarray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eArray of color\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003etimearray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eArray of time\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003enodearray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eArray of Scene Graph node object reference\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003eassocarray\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eAssociative array\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
                "possibleValues": {
                  "floatarray": "Array of float",
                  "string": "BrightScript string type",
                  "bool": "BrightScript Boolean type",
                  "color": "Color type",
                  "timearray": "Array of time",
                  "nodearray": "Array of Scene Graph node object reference",
                  "vector2darray": "Array of vector2d",
                  "integer": "BrightScript integer type",
                  "float": "BrightScript float type",
                  "colorarray": "Array of color",
                  "assocarray": "Associative array",
                  "intarray": "Array of integer",
                  "int": "BrightScript integer type",
                  "boolarray": "Array of Boolean",
                  "str": "BrightScript string type",
                  "node": "Scene Graph node object reference",
                  "vector2d": "X/Y coordinate array",
                  "time": "Time type",
                  "Boolean": "BrightScript Boolean type",
                  "stringarray": "Array of string"
                },
                "possibleValuesNames": [
                  "integer",
                  "int",
                  "float",
                  "string",
                  "str",
                  "Boolean",
                  "bool",
                  "vector2d",
                  "color",
                  "time",
                  "node",
                  "floatarray",
                  "intarray",
                  "boolarray",
                  "stringarray",
                  "vector2darray",
                  "colorarray",
                  "timearray",
                  "nodearray",
                  "assocarray"
                ]
              },
              "alwaysNotify": {
                "required": false,
                "name": "alwaysNotify",
                "description": "A string with the value true or false that indicates whether the field observer functions should be notified every time the field value is set, or only when the field value changes. By default, the attribute is false, so the observer functions are only notified when the field value changes. Set this attribute to true if the observer function should be notified every time the field value is set even though it doesn\u0027t necessarily change.",
                "descriptionHTML": "A string with the value\u0026nbsp;\u003ccode\u003etrue\u003c/code\u003e or\u0026nbsp;\u003ccode\u003efalse\u003c/code\u003e that indicates whether the field observer functions\u0026nbsp;should be notified every time the field value is set, or only when the field value changes. By default, the attribute is false, so the observer functions are only notified when the field value changes. Set this attribute to \u003ccode\u003etrue\u003c/code\u003e if the observer function should be notified every time the field value is set even though it doesn\u0027t necessarily change."
              },
              "value": {
                "required": false,
                "name": "value",
                "description": "A string representing the initial value of the top-level field. If not specified, the default value for the field type is used (such as, zero for numeric fields, an empty string to string fields, and so forth).",
                "descriptionHTML": "A string representing the initial value of the top-level field. If not specified, the default value for the field type is used (such as, zero for numeric fields, an empty string to string fields, and so forth)."
              }
            },
            "elementOccurrence": "OPTIONAL_MANY",
            "name": "field",
            "attributeNames": [
              "id",
              "type",
              "alias",
              "value",
              "onChange",
              "alwaysNotify"
            ]
          }
        ],
        "elementOccurrence": "OPTIONAL_ONE",
        "name": "interface",
        "description": "",
        "descriptionHTML": "",
        "documentationURL": "http://sdkdocs.roku.com/pages/viewpage.action?pageId\u003d1608549",
        "documentationVersion": 16
      },
      {
        "attributes": {
          "type": {
            "required": true,
            "name": "type",
            "description": "A string defining the type of the script. This should be set to \"text/brightscript\" for BrightScript code.",
            "descriptionHTML": "A string defining the type of the script. This should be set to \u003ccode\u003e\"text/brightscript\"\u003c/code\u003e for BrightScript code."
          },
          "uri": {
            "required": false,
            "name": "uri",
            "description": "A string specifying an external file that contains script code associated with the component. This file must be located in the components directory of the application, and have the .brs extension for BrightScript code.",
            "descriptionHTML": "A string specifying an external file that contains script code associated with the component. This file must be located in the components directory of the application, and have the \u003ccode\u003e.brs\u003c/code\u003e extension for BrightScript code."
          }
        },
        "elementOccurrence": "OPTIONAL_MANY",
        "name": "script",
        "description": "",
        "descriptionHTML": "",
        "documentationURL": "http://sdkdocs.roku.com/pages/viewpage.action?pageId\u003d1608550",
        "attributeNames": [
          "type",
          "uri"
        ],
        "documentationVersion": 18
      },
      {
        "attributes": {},
        "elementOccurrence": "OPTIONAL_ONE",
        "name": "children",
        "description": "",
        "descriptionHTML": "",
        "documentationURL": "http://sdkdocs.roku.com/pages/viewpage.action?pageId\u003d1608551",
        "attributeNames": [],
        "documentationVersion": 11
      }
    ],
    "elementOccurrence": "REQUIRED_ONE",
    "name": "component",
    "description": "",
    "descriptionHTML": "",
    "documentationURL": "http://sdkdocs.roku.com/pages/viewpage.action?pageId\u003d1608292",
    "attributeNames": [
      "name",
      "extends",
      "initialFocus",
      "version"
    ],
    "documentationVersion": 41
  },
  "brightScriptNodes": {
    "Task": {
      "parentName": "Node",
      "isAbstract": false,
      "fields": {
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "functionName": {
          "type": "string",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "functionName",
          "description": "The name of the function in the enclosing component which will be executed when the state is changed to RUN.",
          "descriptionHTML": "The name of the function in the enclosing component which will be executed when the state is changed to \u003ccode\u003eRUN\u003c/code\u003e."
        },
        "control": {
          "type": "string",
          "defaultValue": "INIT",
          "accessPermission": "WRITE_ONLY",
          "name": "control",
          "description": "Write-Only Requests a change in the run state of the spawned task. The values are the same as for the state field.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eRequests\u0026nbsp;a change in the run state of the spawned task. The values are the same as for the \u003ccode\u003estate\u003c/code\u003e field.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "state": {
          "type": "string",
          "defaultValue": "INIT",
          "accessPermission": "READ_ONLY",
          "name": "state",
          "description": "Read-Only Inquires about the run state of the spawned task. Values are INIT, STOP, RUN, or DONE.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eInquires about the run state of the spawned task. Values are \u003ccode\u003eINIT\u003c/code\u003e, \u003ccode\u003eSTOP\u003c/code\u003e, \u003ccode\u003eRUN\u003c/code\u003e, or \u003ccode\u003eDONE\u003c/code\u003e."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        }
      },
      "name": "Task",
      "description": "The Task node class allows you to specify a function to be spawned in a different thread, and run asynchronously with respect to both the scene rendering thread and the main application thread. A Task node also allows you to run functions that cannot be run in Scene Graph node or component, typically BrightScript code functions involving operations such as reading data from servers and file system manipulation. (You also cannot, and should not, run functions in a Scene Graph application for operations that are functionally the same as Scene Graph nodes and components, such as playing videos.) A list of all the BrightScript functions and components that cannot be used in Scene Graph applications or can only be used in a Task node can be found in Scene Graph BrightScript Support.A Task node is typically used to read data from a server to create a ContentNode node to configure a Scene Graph node or component (see ). A Task node used for this purpose can be thought of as a content reader. Since ContentNode nodes are required to configure many components rendered in a scene, such as lists, panels, and grids, and you will generally want to read the data for those types of nodes from your server, you should create a Task node as a content reader for each of those components that you use in your scene. ",
      "descriptionHTML": "The \u003cstrong\u003eTask\u003c/strong\u003e\u0026nbsp;node class allows you to specify a function to be spawned in a different thread, and run asynchronously with respect to both the scene rendering thread and the main application thread. A \u003cstrong\u003eTask\u003c/strong\u003e\u0026nbsp;node also allows you to run functions that cannot be run in Scene Graph node or component, typically BrightScript code functions involving operations such as reading data from servers and file system manipulation. (You also cannot, and should not, run functions in a Scene Graph application for operations that are functionally the same as Scene Graph nodes and components, such as playing videos.) A list of all the BrightScript functions and components that cannot be used in Scene Graph applications or can only be used in a \u003cstrong\u003eTask\u003c/strong\u003e node can be found in \n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"Scene Graph BrightScript Support\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eScene Graph BrightScript Support\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e.A \u003cstrong\u003eTask\u003c/strong\u003e\u0026nbsp;node is typically used to read data from a server to create a \u003cstrong\u003eContentNode\u003c/strong\u003e node to configure a Scene Graph node or component (see \u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ContentNode\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e). A \u003cstrong\u003eTask\u003c/strong\u003e\u0026nbsp;node used for this purpose can be thought of as a \u003cem\u003econtent reader\u003c/em\u003e. Since \u003cstrong\u003eContentNode\u003c/strong\u003e nodes are required to configure many components rendered in a scene, such as lists, panels, and grids, and you will generally want to read the data for those types of nodes from your server, you should create a \u003cstrong\u003eTask\u003c/strong\u003e\u0026nbsp;node as a content reader for each of those components that you use in your scene.\u0026nbsp;",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Task",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "state",
        "control",
        "functionName"
      ],
      "documentationVersion": 39
    },
    "ScrollingLabel": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "color": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "color",
          "description": "Specifies the text color.",
          "descriptionHTML": "Specifies the text color."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "horizAlign": {
          "type": "option string",
          "defaultValue": "left",
          "accessPermission": "READ_WRITE",
          "name": "horizAlign",
          "description": "See Horizontal Alignment.",
          "descriptionHTML": "See \n\u003cac:link ac:anchor\u003d\"HorizontalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eHorizontal Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "scrollSpeed": {
          "type": "float",
          "defaultValue": "100",
          "accessPermission": "READ_WRITE",
          "name": "scrollSpeed",
          "description": "Specifies the horizontal scrolling speed in pixels per second",
          "descriptionHTML": "Specifies the horizontal scrolling speed in pixels per second"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "vertAlign": {
          "type": "option string",
          "defaultValue": "top",
          "accessPermission": "READ_WRITE",
          "name": "vertAlign",
          "description": "See Vertical Alignment.",
          "descriptionHTML": "See \n\u003cac:link ac:anchor\u003d\"VerticalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eVertical Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "text": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "text",
          "description": "Specifies the text to be displayed.",
          "descriptionHTML": "Specifies the text to be displayed."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "font": {
          "type": "Font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "font",
          "description": "Specifies the Font node to be used.",
          "descriptionHTML": "Specifies the \u003cstrong\u003eFont\u003c/strong\u003e node to be used."
        },
        "maxWidth": {
          "type": "float",
          "defaultValue": "500",
          "accessPermission": "READ_WRITE",
          "name": "maxWidth",
          "description": "Specifies the maximum width of the rendered text. If the rendered text exceeds the maximum width, the scrolling behavior is automatically triggered.",
          "descriptionHTML": "Specifies the maximum width of the rendered text. If the rendered text exceeds the maximum width, the scrolling behavior is automatically triggered."
        },
        "height": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the label. If set to zero, the actual height is determined by the value of the numLines field if it is greater than zero. See Vertical Alignment.",
          "descriptionHTML": "Specifies the height of the label. If set to zero, the actual height is determined by the value of the\u0026nbsp;\u003ccode\u003enumLines\u003c/code\u003e field if it is greater than zero. See \n\u003cac:link ac:anchor\u003d\"VerticalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eVertical Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e."
        },
        "repeatCount": {
          "type": "float",
          "defaultValue": "-1",
          "accessPermission": "READ_WRITE",
          "name": "repeatCount",
          "description": "If set to the default value of -1, the text scrolling behavior repeats continuously. If set to zero, the text will remain ellipsized and never scroll. If set to a value greater than zero, the text will scroll the specified number of times, at the end of which the text is rendered with an ellipsis at the end.",
          "descriptionHTML": "If set to the default value of -1, the text scrolling behavior repeats continuously. If set to zero, the text will remain ellipsized and never scroll. If set to a value greater than zero, the text will scroll the specified number of times, at the end of which the text is rendered with an ellipsis at the end."
        }
      },
      "name": "ScrollingLabel",
      "description": "The ScrollingLabel node class provides an automatic way to make a string scroll horizontally if it does not fit within the specified width. If the string can be drawn within the specified maximum width it is just drawn. If it does not fit within the specified maximum width, it is drawn with an ellipsis (...) at the end, then it transitions to the full string, clipped to the maximum width that scrolls left to right until the end of the string is visible, then transition back to the partial string with the ellipsis at the end. By default, this repeats continuously unless the repeatCount field is set to limit the number of times the scrolling occurs.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eScrollingLabel\u003c/strong\u003e\u0026nbsp;node class provides an automatic way to make a string scroll horizontally if it does not fit within the specified width. If the string can be drawn within the specified maximum width it is just drawn. If it does not fit within the specified maximum width, it is drawn with an ellipsis (...) at the end, then it transitions to the full string, clipped to the maximum width that scrolls left to right until the end of the string is visible, then transition back to the partial string with the ellipsis at the end. By default, this repeats continuously unless the\u0026nbsp;\u003ccode\u003erepeatCount\u003c/code\u003e field is set to limit the number of times the scrolling occurs.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ScrollingLabel",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "text",
        "color",
        "font",
        "maxWidth",
        "height",
        "scrollSpeed",
        "repeatCount",
        "horizAlign",
        "vertAlign"
      ],
      "documentationVersion": 16
    },
    "TextEditBox": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "cursorPosition": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "cursorPosition",
          "description": "By default, this is set to the length of the text field, indicating that the next character to be entered should be appended at the end of the string. When used internal to the Keyboard and MiniKeyboard nodes, those nodes use this field to move the text insertion point.",
          "descriptionHTML": "\u003cp\u003eBy default, this is set to the length of the text field, indicating that the next character to be entered should be appended at the end of the string.\u003c/p\u003e\u003cp\u003eWhen used internal to the \u003cstrong\u003eKeyboard \u003c/strong\u003eand \u003cstrong\u003eMiniKeyboard\u003c/strong\u003e nodes, those nodes use this field to move the text insertion point.\u003c/p\u003e"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "active": {
          "type": "boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "active",
          "description": "When active is set to true, the cursor is displayed. When set to false, the cursor is hidden. When used internal to the Keyboard and MiniKeyboard nodes, those nodes set this field to true when the keyboard has focus, and false when it does not.",
          "descriptionHTML": "\u003cp\u003eWhen active is set to true, the cursor is displayed. When set to false, the cursor is hidden.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eWhen used internal to the \u003c/span\u003e\u003cstrong\u003eKeyboard \u003c/strong\u003e\u003cspan\u003eand \u003c/span\u003e\u003cstrong\u003eMiniKeyboard\u003c/strong\u003e\u003cspan\u003e nodes, those nodes set this field to true when the keyboard has focus, and false when it does not.\u003c/span\u003e\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "textColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "textColor",
          "description": "Specifies the color of the text string displayed",
          "descriptionHTML": "\u003cp\u003eSpecifies the color of the text string displayed\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "maxTextLength": {
          "type": "integer",
          "defaultValue": "15",
          "accessPermission": "READ_WRITE",
          "name": "maxTextLength",
          "description": "Specifies the maximum length of the string that can be displayed. When used internal to the Keyboard node, maxTextLength is initialized to 75. When used in the MiniKeyboard node, maxTextLength is initialized to 25.",
          "descriptionHTML": "\u003cp\u003eSpecifies the maximum length of the string that can be displayed.\u003c/p\u003e\u003cp\u003eWhen used internal to the \u003cstrong\u003eKeyboard\u003c/strong\u003e node, \u003ccode\u003emaxTextLength\u003c/code\u003e is initialized to 75. When used in the \u003cstrong\u003eMiniKeyboard\u003c/strong\u003e node, \u003ccode\u003emaxTextLength\u003c/code\u003e is initialized to 25.\u003c/p\u003e"
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "hintText": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "hintText",
          "description": "Specifies a string to be displayed if the length of the text field string is zero. The typical usage of this field is to prompt the user about what to enter (such as, \"Enter your WiFi password\").",
          "descriptionHTML": "Specifies a string to be displayed if the length of the text field string is zero. The typical usage of this field is to prompt the user about what to enter (such as,\u0026nbsp;\"Enter your WiFi password\")."
        },
        "width": {
          "type": "float",
          "defaultValue": "-1.0",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of the TextEditBox node. When used internal to the Keyboard and MiniKeyboard nodes, those nodes set this field to match the width of the keyboard.",
          "descriptionHTML": "\u003cp\u003eSpecifies the width of the \u003cstrong\u003eTextEditBox\u003c/strong\u003e node.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eWhen used internal to the \u003c/span\u003e\u003cstrong\u003eKeyboard \u003c/strong\u003e\u003cspan\u003eand \u003c/span\u003e\u003cstrong\u003eMiniKeyboard\u003c/strong\u003e\u003cspan\u003e nodes, those nodes set this field to match the width of the keyboard.\u003c/span\u003e\u003c/p\u003e"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "text": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "text",
          "description": "Contains the string of characters being displayed.",
          "descriptionHTML": "Contains the string of characters being displayed."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "secureMode": {
          "type": "boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "secureMode",
          "description": "When set to true, the characters entered are briefly displayed, then replaced with an asterisk. When set to false, the characters entered are always displayed. When used internal to the Keyboard and MiniKeyboard nodes, you can access the keyboard textEditBox field to set its secureMode field. For example: myKeyboard.textEditBox.secureMode \u003d true",
          "descriptionHTML": "\u003cp\u003eWhen set to true, the characters entered are briefly displayed, then replaced with an asterisk. When set to false, the characters entered are always displayed.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eWhen used internal to the \u003c/span\u003e\u003cstrong\u003eKeyboard \u003c/strong\u003e\u003cspan\u003eand \u003c/span\u003e\u003cstrong\u003eMiniKeyboard\u003c/strong\u003e\u003cspan\u003e nodes, you can access the keyboard \u003ccode\u003etextEditBox\u003c/code\u003e field to set its \u003ccode\u003esecureMode\u003c/code\u003e field. For example:\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003e\u003cspan\u003e myKeyboard.textEditBox.secureMode \u003d true\u003c/span\u003e\u003c/code\u003e\u003c/p\u003e"
        },
        "hintTextColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "hintTextColor",
          "description": "Specifies the color of the hint text string",
          "descriptionHTML": "Specifies the color of the hint text string"
        },
        "backgroundUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "backgroundUri",
          "description": "Specifies the URI of the image rendered as the background of the TextEditBox node.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the URI of the image rendered as the background of the \u003c/span\u003e\u003cstrong\u003eTextEditBox\u003c/strong\u003e node."
        }
      },
      "name": "TextEditBox",
      "description": "The TextEditBox node class is intended to display a string of characters as they are typed. When focused, it displays a flashing cursor to indicate the text insertion position.TextEditBox nodes are automatically included in the Keyboard and MiniKeyboard node classes.The default appearance of the TextEditBox is very transparent, allowing it to pick up most of its color from what is rendered underneath it. The appearance can be customized by changing the backgroundUri and other fields.",
      "descriptionHTML": "The \u003cstrong\u003eTextEditBox\u003c/strong\u003e\u0026nbsp;node class is intended to display a string of characters as they are typed. When focused, it displays a flashing cursor to indicate the text insertion position.\u003cstrong\u003eTextEditBox\u003c/strong\u003e nodes are automatically included in the\u0026nbsp;\n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"Keyboard\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eKeyboard\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e and\u0026nbsp;\n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"MiniKeyboard\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eMiniKeyboard\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e node classes.The default appearance of the\u003cstrong\u003e\u0026nbsp;TextEditBox\u0026nbsp;\u003c/strong\u003eis very transparent, allowing it to pick up most of its color from what is rendered underneath it. The appearance can be customized by changing the \u003ccode\u003ebackgroundUri\u003c/code\u003e and other fields.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/TextEditBox",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "text",
        "hintText",
        "maxTextLength",
        "cursorPosition",
        "active",
        "secureMode",
        "textColor",
        "hintTextColor",
        "width",
        "backgroundUri"
      ],
      "documentationVersion": 14
    },
    "KeyboardDialog": {
      "parentName": "Dialog",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "bulletTextFont": {
          "type": "Font",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "bulletTextFont",
          "description": "When set, the font of the bullet point text",
          "descriptionHTML": "When set, the font of the bullet point text"
        },
        "title": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "title",
          "description": "Title of the dialog box",
          "descriptionHTML": "Title of the dialog box"
        },
        "buttonFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonFocused",
          "description": "Read-Only Set to the index of the focused button whenever a button in the group receives the key focus.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eSet to the index of the focused button whenever a button in the group receives the key focus.\u003c/span\u003e"
        },
        "messageColor": {
          "type": "color",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "messageColor",
          "description": "When set, the color of the message text",
          "descriptionHTML": "When set, the color of the message text"
        },
        "messageFont": {
          "type": "Font",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "messageFont",
          "description": "When set, the font of the message text",
          "descriptionHTML": "When set, the font of the message text"
        },
        "text": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "text",
          "description": "Can be used to explicitly set the internal Keyboard node text string, as well as to access the string entered by the user.",
          "descriptionHTML": "Can be used to explicitly set the internal \u003cstrong\u003eKeyboard\u003c/strong\u003e node text string, as well as to access the string entered by the user."
        },
        "graphicUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "graphicUri",
          "description": "Specifies a bitmap to be displayed in the dialog. The bitmap is displayed below the bullet text region and above the buttons. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed in the dialog. The bitmap is displayed below the\u0026nbsp;bullet text\u0026nbsp;region and above the buttons. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "close": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "WRITE_ONLY",
          "name": "close",
          "description": "Write-Only Causes the dialog to be dismissed. The dialog is dismissed whenever the close field is set, regardless of whether the field is set to true or false.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eCauses the dialog to be dismissed. The dialog is dismissed whenever the \u003ccode\u003eclose\u003c/code\u003e field is set, regardless of whether the field is set to \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e."
        },
        "iconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "iconUri",
          "description": "Specifies a bitmap to be displayed as a small icon next to the dialog title. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed as a small icon next to the dialog title. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "keyboard": {
          "type": "Keyboard node",
          "defaultValue": "system default",
          "accessPermission": "READ_ONLY",
          "name": "keyboard",
          "description": "Read-Only Provides access to the internal Keyboard node. The field is read-only, but the fields of the Keyboard node it refers to can be read and written, allowing you to fully customize the Keyboard node appearance and behavior.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003e\u003cspan\u003eProvides access to the \u003c/span\u003e\u003cspan\u003einternal \u003cstrong\u003eKeyboard\u003c/strong\u003e node. The field is read-only, but the fields of the \u003cstrong\u003eKeyboard\u003c/strong\u003e node it refers to can be read and written, allowing you to fully customize the \u003cstrong\u003eKeyboard\u003c/strong\u003e node appearance and behavior.\u003c/span\u003e\u003c/p\u003e"
        },
        "focusButton": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "focusButton",
          "description": "Write-Only  Causes the button with the specified index to receive the focus when the ButtonGroup node has the key focus. Note that if the ButtonGroup node does not have the key focus when the focusButton field is set, the specified button will display the focus footprint as its background.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eWrite-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003eCauses the button with the specified index to receive the focus when the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node has the key focus. Note that if the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node does not have the key focus when the \u003ccode\u003efocusButton\u003c/code\u003e field is set, the specified button will display the focus footprint as its background.\u003c/span\u003e"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "buttons": {
          "type": "array of string",
          "defaultValue": "[ ]",
          "accessPermission": "WRITE_ONLY",
          "name": "buttons",
          "description": "Write-Only Allows a set of Button nodes to be easily created by providing an array of Button labels. Each string in the array will result in a Button node to be added to the ButtonGroup, using the string as the Button label.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eAllows a set of \u003cstrong\u003eButton\u003c/strong\u003e nodes to be easily created by providing an array of \u003cstrong\u003eButton\u003c/strong\u003e labels. Each string in the array will result in a \u003cstrong\u003eButton\u003c/strong\u003e node to be added to the \u003cstrong\u003eButtonGroup\u003c/strong\u003e, using the string as the \u003cstrong\u003eButton\u003c/strong\u003e label.\u003c/span\u003e"
        },
        "buttonGroup": {
          "type": "ButtonGroup",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "buttonGroup",
          "description": "The dialog internal ButtonGroup node. This allows the appearance attributes of all the Button nodes in the dialog to be easily modified. Since the ButtonGroup node class is derived from the LayoutGroup node class, additional non-Button node children can also be added.",
          "descriptionHTML": "The dialog internal \u003cstrong\u003eButtonGroup\u003c/strong\u003e node. This allows the appearance attributes of all the \u003cstrong\u003eButton\u003c/strong\u003e nodes in the dialog to be easily modified. Since the\u0026nbsp;\u003cstrong\u003eButtonGroup\u003c/strong\u003e node class is derived from the\u0026nbsp;\u003cstrong\u003eLayoutGroup\u003c/strong\u003e node class, additional non-\u003cstrong\u003eButton\u003c/strong\u003e node children can also be added."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "buttonSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonSelected",
          "description": "Read-Only Set to the index of the selected button whenever the user selects a button in the group.",
          "descriptionHTML": "\u003cspan\u003e \u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003c/span\u003e \u003cbr\u003eSet to the index of the selected button whenever the user selects a button in the group.\u003c/span\u003e"
        },
        "optionsDialog": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "optionsDialog",
          "description": "If set to true, the dialog is automatically dismissed when the Options key is pressed.",
          "descriptionHTML": "If set to true, the dialog is automatically dismissed when the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eOptions\u003c/strong\u003e\u003c/span\u003e key is pressed."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "bulletText": {
          "type": "array of string",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "bulletText",
          "description": "An array of strings to be displayed as a list of bullet points.",
          "descriptionHTML": "An array of strings to be displayed as a list of bullet points."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "message": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "message",
          "description": "The string to be displayed in the message region of the dialog. Newline and carriage return characters in the string result in the message being displayed as several lines of text. In BrightScript, to include a newline in a string, use chr(10). For example: message \u003d \"First line\" + chr(10) + \"Second line\"",
          "descriptionHTML": "\u003cp\u003eThe string to be displayed in the message region of the dialog. Newline and carriage return characters in the string result in the message being displayed as several lines of text. In BrightScript, to include a newline in a string, use chr(10). For example:\u003c/p\u003e\u003cp\u003e\u003ccode\u003emessage \u003d \"First line\" + chr(10) + \"Second line\" \u003c/code\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "dividerUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "dividerUri",
          "description": "Specifies a bitmap to be displayed as the divider between the title region and the remainder of the dialog. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed as the divider between the title region and the remainder of the dialog. \u003cspan\u003eUsually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "bulletTextColor": {
          "type": "color",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "bulletTextColor",
          "description": "When set, the color of the bullet point text",
          "descriptionHTML": "When set, the color of the bullet point text"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "wasClosed": {
          "type": "Event",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "wasClosed",
          "description": "Observe-Only Set when the dialog has been closed. The field is set when the dialog close field is set, when the Back or Home key has been pressed, when the Options key has been pressed if the optionsDialog field is set to true, and when the dialog is dismissed because another dialog was displayed.",
          "descriptionHTML": "\u003cstrong\u003eObserve-Only\u003c/strong\u003e \u003cbr\u003eSet when the dialog has been closed. The field is set when the dialog \u003ccode\u003eclose\u003c/code\u003e field is set, when the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e or \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eHome\u003c/strong\u003e\u003c/span\u003e key has been pressed, when the \u003cstrong\u003eOptions\u003c/strong\u003e key has been pressed if the \u003ccode\u003eoptionsDialog\u003c/code\u003e field is set to true, and when the dialog is dismissed because another dialog was displayed."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "backgroundUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "backgroundUri",
          "description": "Specifies the bitmap to be displayed as the dialog background. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap to be displayed as the dialog background. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        }
      },
      "name": "KeyboardDialog",
      "description": "The KeyboardDialog node class is a special type of Dialog node that prompts the user to enter an alphanumeric text string. The KeyboardDialog node class includes an interrnal Keyboard node to allow the user to enter the string.The KeyboardDialog allows you to add a title (by setting the Dialog title field), a help message (by setting the Dialog message field), and a set of action buttons (by setting the Dialog node buttons field). The bulletText and graphicUrl fields of the Dialog node should not be set. If those Dialog node fields are set, the layout of the dialog will likely not look correct.Also, the KeyboardDialog node class inherits the behavior of the interrnal Keyboard node when the Options remote key is pressed. The Keyboard node class toggles between uppercase and lowercase letters when the Options remote key is pressed, to speed the entry of mixed-case strings by the user. Therefore, the optionsDialog field of the Dialog node class should not be set to true.Typically, you will want to set the KeyboardDialog node title field to prompt the user to enter the string, and add \"OK\" and \"Cancel\" buttons by setting the Dialog node buttons field to [ \"OK\", \"Cancel\" ], then observe the Dialog node class buttonSelected field to react when the user presses one of those buttons. At any time, the text field can be accessed to obtain the string entered by the user.Another typical usage of the KeyboardDialog node class adds a \"Hide Text\" button, with an observer function set up to toggle the secureMode field of the Keyboard node internal TextEditBox node (that is, by toggling the value of the keyboard.textEditBox.secureMode field).",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eKeyboardDialog\u003c/strong\u003e\u0026nbsp;node class is a special type of\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e\u0026nbsp;node that prompts the user to enter an alphanumeric text string. The\u0026nbsp;\u003cstrong\u003eKeyboardDialog\u003c/strong\u003e\u0026nbsp;node class includes an interrnal \u003cstrong\u003eKeyboard\u003c/strong\u003e\u0026nbsp;node to allow the user to enter the string.The\u0026nbsp;\u003cstrong\u003eKeyboardDialog\u0026nbsp;\u003c/strong\u003eallows you to add a title (by setting the\u0026nbsp;\u003cstrong\u003eDialog\u0026nbsp;\u003c/strong\u003e\u003ccode\u003etitle\u003c/code\u003e\u0026nbsp;field), a help message (by setting the\u0026nbsp;\u003cstrong\u003eDialog\u0026nbsp;\u003c/strong\u003e\u003ccode\u003emessage\u003c/code\u003e\u0026nbsp;field), and a set of action buttons (by setting the\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e node\u0026nbsp;\u003ccode\u003ebuttons\u003c/code\u003e\u0026nbsp;field). The\u0026nbsp;\u003ccode\u003ebulletText\u003c/code\u003e\u0026nbsp;and\u0026nbsp;\u003ccode\u003egraphicUrl\u003c/code\u003e\u0026nbsp;fields of the\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e\u0026nbsp;node should not be set. If those \u003cstrong\u003eDialog\u003c/strong\u003e node fields are set, the layout of the dialog will likely not look correct.Also, the \u003cstrong\u003eKeyboardDialog\u003c/strong\u003e\u0026nbsp;node class inherits the behavior of the interrnal \n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"Keyboard\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eKeyboard\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e\u0026nbsp;node when the \u003cstrong\u003e\u003cspan style\u003d\"color: rgb(153,51,102);\"\u003eOptions\u003c/span\u003e\u003c/strong\u003e remote key is pressed. The \u003cstrong\u003eKeyboard\u003c/strong\u003e\u0026nbsp;node class toggles between uppercase and lowercase letters when the \u003cstrong\u003e\u003cspan style\u003d\"color: rgb(153,51,102);\"\u003eOptions\u003c/span\u003e\u003c/strong\u003e remote key is pressed, to speed the entry of mixed-case strings by the user. Therefore, the \u003ccode\u003eoptionsDialog\u003c/code\u003e field of the \u003cstrong\u003eDialog\u003c/strong\u003e node class should \u003cem\u003enot\u003c/em\u003e be set to true.Typically, you will want to set the\u0026nbsp;\u003cstrong\u003eKeyboardDialog\u003c/strong\u003e\u0026nbsp;node \u003ccode\u003etitle\u003c/code\u003e\u0026nbsp;field to prompt the user to enter the string,\u0026nbsp;and add \"OK\" and \"Cancel\" buttons by setting the\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e node\u0026nbsp;\u003ccode\u003ebuttons\u003c/code\u003e\u0026nbsp;field to\u0026nbsp;\u003ccode\u003e[ \"OK\", \"Cancel\"\u0026nbsp;]\u003c/code\u003e, then observe the\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e\u0026nbsp;node class \u003ccode\u003ebuttonSelected\u003c/code\u003e\u0026nbsp;field to react when the user presses one of those buttons. At any time, the\u0026nbsp;\u003ccode\u003etext\u003c/code\u003e\u0026nbsp;field can be accessed to obtain the string entered by the user.Another typical usage of the\u0026nbsp;\u003cstrong\u003eKeyboardDialog\u003c/strong\u003e node class adds a \"Hide Text\" button, with an observer function set up to toggle the\u0026nbsp;\u003ccode\u003esecureMode\u003c/code\u003e field of the \u003cstrong\u003eKeyboard\u003c/strong\u003e node internal\u0026nbsp;\u003cstrong\u003eTextEditBox\u003c/strong\u003e node (that is, by toggling the value of the\u0026nbsp;\u003ccode\u003ekeyboard.textEditBox.secureMode\u003c/code\u003e field).",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/KeyboardDialog",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "title",
        "message",
        "messageColor",
        "messageFont",
        "bulletText",
        "bulletTextColor",
        "bulletTextFont",
        "buttons",
        "buttonGroup",
        "graphicUri",
        "buttonSelected",
        "buttonFocused",
        "focusButton",
        "optionsDialog",
        "backgroundUri",
        "iconUri",
        "dividerUri",
        "close",
        "wasClosed",
        "text",
        "keyboard"
      ],
      "documentationVersion": 15
    },
    "Node": {
      "parentName": "",
      "isAbstract": true,
      "fields": {
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        }
      },
      "name": "Node",
      "description": "The abstract base class of all Scene Graph nodes. Node class objects do not draw anything and are skipped in the render traversal of the Scene Graph node tree. The Node class provides the core parenting and key focus management functionality used by all nodes.",
      "descriptionHTML": "\u003cspan\u003eThe abstract base class of all Scene Graph nodes. \u003c/span\u003e\u003cstrong\u003eNode\u003c/strong\u003e\u003cspan\u003e class objects do not draw anything and are skipped in the render traversal of the Scene Graph node tree. The \u003c/span\u003e\u003cstrong\u003eNode\u003c/strong\u003e\u003cspan\u003e class provides the core parenting and key focus management functionality used by all nodes. \u003c/span\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Node",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable"
      ],
      "documentationVersion": 44
    },
    "OverhangPanelSetScene": {
      "parentName": "Scene",
      "isAbstract": false,
      "fields": {
        "backgroundColor": {
          "type": "color",
          "defaultValue": "0x000000FF",
          "accessPermission": "READ_WRITE",
          "name": "backgroundColor",
          "description": "Specifies a background color for the scene. This color is only used if backgroundURI is set to the empty string. For example: scene.backgroundColor\u003d0xff0000ff scene.backgroundUri \u003d \"\"",
          "descriptionHTML": "\u003cp\u003eSpecifies a background color for the scene. This color is only used if backgroundURI is set to the empty string. For example:\u003c/p\u003e\u003cp\u003escene.backgroundColor\u003d0xff0000ff\u003c/p\u003e\u003cp\u003escene.backgroundUri \u003d \"\"\u003c/p\u003e"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "panelSet": {
          "type": "PanelSet",
          "defaultValue": "A PanelSet node",
          "accessPermission": "READ_ONLY",
          "name": "panelSet",
          "description": "Read-Only  Provides access to the PanelSet node created for this scene. The RoSGNode child APIs can be used to add panels to the panel set. Be careful to follow the restrictions on using the child APIs that are described in the PanelSet documentation. Fields of the PanelSet node can also be set to custom the panel set.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003eProvides access to the \u003cstrong\u003ePanelSet\u003c/strong\u003e node created for this scene. The \u003cstrong\u003eRoSGNode\u003c/strong\u003e child APIs can be used to add panels to the panel set. Be careful to follow the restrictions on using the child APIs that are described in the\u003cstrong\u003e PanelSet\u003c/strong\u003e documentation.\u003c/p\u003e\u003cp\u003eFields of the \u003cstrong\u003ePanelSet\u003c/strong\u003e node can also be set to custom the panel set.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "dialog": {
          "type": "Dialog",
          "defaultValue": "invalid",
          "accessPermission": "READ_WRITE",
          "name": "dialog",
          "description": "Setting this field to a node extended from the Dialog node causes the dialog to be displayed",
          "descriptionHTML": "Setting this field to a node extended from the \u003cstrong\u003eDialog\u003c/strong\u003e node causes the dialog to be displayed"
        },
        "overhang": {
          "type": "Overhang",
          "defaultValue": "An Overhang node",
          "accessPermission": "READ_ONLY",
          "name": "overhang",
          "description": "Read-Only  Provides access to the Overhang node created for this scene. Fields of the Overhang node can be set to custom the overhang.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;\u003cbr\u003e\u003c/span\u003e\u003cspan\u003eProvides access to the \u003c/span\u003e\u003cstrong\u003eOverhang\u003c/strong\u003e\u003cspan\u003e node created for this scene. Fields of the \u003c/span\u003e\u003cstrong\u003eOverhang\u003c/strong\u003e\u003cspan\u003e node can be set to custom the overhang.\u003c/span\u003e\u003c/p\u003e"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "backgroundURI": {
          "type": "URI string",
          "defaultValue": "invalid",
          "accessPermission": "READ_WRITE",
          "name": "backgroundURI",
          "description": "Specifies a graphic image file to be used for the Scene node background.",
          "descriptionHTML": "Specifies a graphic image file to be used for the \u003cstrong\u003eScene\u003c/strong\u003e node background."
        },
        "backExitsScene": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "backExitsScene",
          "description": "If true, then a Back key press will cause the scene to exit. If false, then Back key presses do not cause the scene to exit.",
          "descriptionHTML": "If true, then a \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e key press will cause the scene to exit. If false, then \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e key presses do not cause the scene to exit."
        }
      },
      "name": "OverhangPanelSetScene",
      "description": "The OverhangPanelSetScene node class provides a convenient was to create a Scene node that has set with default Overhang and PanelSet nodes. The layout of the Overhang and PanelSet use the default sizes for SDK2 channels. The node provides access to the PanelSet and Overhang via fields that contain the node objects.scene \u003d screen.CreateScene(\"OverhangPanelSetScene\")",
      "descriptionHTML": "The \u003cstrong\u003eOverhangPanelSetSc\u003c/strong\u003e\u003cstrong\u003eene\u003c/strong\u003e\u0026nbsp;node class provides a convenient was to create a\u0026nbsp;\u003cstrong\u003eScene\u003c/strong\u003e node that has set with default \u003cstrong\u003eOverhang\u003c/strong\u003e and \u003cstrong\u003ePanelSet\u003c/strong\u003e nodes. The layout of the \u003cstrong\u003eOverhang\u003c/strong\u003e and \u003cstrong\u003ePanelSet\u003c/strong\u003e use the default sizes for SDK2 channels. The node provides access to the \u003cstrong\u003ePanelSet\u003c/strong\u003e and \u003cstrong\u003eOverhang\u003c/strong\u003e via fields that contain the node objects.\u003cac:plain-text-body\u003e\n scene \u003d screen.CreateScene(\"OverhangPanelSetScene\")\n\u003c/ac:plain-text-body\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/OverhangPanelSetScene",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "backgroundURI",
        "backgroundColor",
        "dialog",
        "backExitsScene",
        "overhang",
        "panelSet"
      ],
      "documentationVersion": 9
    },
    "Label": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "numLines": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numLines",
          "description": "If the height field value is zero, provides an alternate way to specify the height of the bounding rectangle of the label. See Vertical Alignment and for more details.",
          "descriptionHTML": "If the \u003ccode\u003eheight\u003c/code\u003e field value is zero, provides an alternate way to specify the height of the bounding rectangle of the label. See \n\u003cac:link ac:anchor\u003d\"VerticalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eVertical Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e and \u003cstrong\u003e\n \u003cac:link ac:anchor\u003d\"Wrapping\" /\u003e\u003c/strong\u003e for more details."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "color": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "color",
          "description": "Specifies the text color.",
          "descriptionHTML": "Specifies the text color."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "horizAlign": {
          "type": "string",
          "defaultValue": "left",
          "accessPermission": "READ_WRITE",
          "name": "horizAlign",
          "description": "See Horizontal Alignment.",
          "descriptionHTML": "See \n\u003cac:link ac:anchor\u003d\"HorizontalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eHorizontal Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e."
        },
        "wordBreakChars": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wordBreakChars",
          "description": "By default, space and hyphen characters are used to determine where lines can be divided. In addition, this field can specify additional characters to be used to determine where the text can be broken into lines.",
          "descriptionHTML": "By default, space and hyphen characters are used to determine where lines can be divided. In addition, this field can specify additional characters to be used to determine where the text can be broken into lines."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "lineSpacing": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "lineSpacing",
          "description": "If the text is displayed on more than one line, specifies the amount of additional space added between lines.",
          "descriptionHTML": "If the text is displayed on more than one line, specifies the amount of additional space added between lines."
        },
        "ellipsizeOnBoundary": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "ellipsizeOnBoundary",
          "description": "If the width field value is greater than zero, controls whether or not the last line of text displayed should be ellipsized if it extends beyonds the specified width. It is ignored if the truncateOnDelimiter field value is set to a non-empty string.",
          "descriptionHTML": "If the \u003ccode\u003ewidth\u003c/code\u003e field value is greater than zero, controls whether or not the last line of text displayed should be ellipsized if it extends beyonds the specified width. It is ignored if the \u003ccode\u003etruncateOnDelimiter\u003c/code\u003e field value is set to a non-empty string."
        },
        "displayPartialLines": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "displayPartialLines",
          "description": "If the height field value is greater than zero, used to determine whether or not the last line of visible text is displayed if it would be clipped vertically.",
          "descriptionHTML": "\u003cp\u003eIf the \u003ccode\u003eheight\u003c/code\u003e field value is greater than zero, used to determine whether or not the last line of visible text is displayed if it would be clipped vertically.\u003c/p\u003e"
        },
        "truncateOnDelimiter": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "truncateOnDelimiter",
          "description": "If the width field value is greater than zero, provides a set of characters that are used to determine how to truncate the last line of text that is displayed if it extends beyond the specified width. If none of the characters in the last line of text are included in the truncateOnDelimiter field value string, the entire last line is not displayed. When the value is set to a non-empty string, the ellipsizeOnBoundary field value is ignored.",
          "descriptionHTML": "If the \u003ccode\u003ewidth\u003c/code\u003e field value is greater than zero, provides a set of characters that are used to determine how to truncate the last line of text that is displayed if it extends beyond the specified width. If none of the characters in the last line of text are included in the \u003ccode\u003etruncateOnDelimiter\u003c/code\u003e field value string, the entire last line is not displayed. When the value is set to a non-empty string, the \u003ccode\u003eellipsizeOnBoundary\u003c/code\u003e field value is ignored."
        },
        "text": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "text",
          "description": "Specifies the text to be displayed.",
          "descriptionHTML": "Specifies the text to be displayed."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "height": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the label. If set to zero, the actual height is determined by the value of the numLines field if it is greater than zero. See Vertical Alignment and for more details.",
          "descriptionHTML": "Specifies the height of the label. If set to zero, the actual height is determined by the value of the\u0026nbsp;\u003ccode\u003enumLines\u003c/code\u003e field if it is greater than zero. See \n\u003cac:link ac:anchor\u003d\"VerticalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eVertical Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e and \u003cstrong\u003e\n \u003cac:link ac:anchor\u003d\"Wrapping\" /\u003e\u003c/strong\u003e for more details."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "ellipsisText": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "ellipsisText",
          "description": "By default, three dots (...) are used to ellipsize the last line of text that extends beyond the bounding rectangle. This field specifies alternate characters to be displayed when the last line of text is ellipsized.",
          "descriptionHTML": "By default, three dots (...) are used to ellipsize the last line of text that extends beyond the bounding rectangle. This field specifies alternate characters to be displayed when the last line of text is ellipsized."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "isTextEllipsized": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_ONLY",
          "name": "isTextEllipsized",
          "description": "Read-Only Indicates whether the last line of text has been ellipsized.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eIndicates whether the last line of text has been ellipsized."
        },
        "vertAlign": {
          "type": "string",
          "defaultValue": "top",
          "accessPermission": "READ_WRITE",
          "name": "vertAlign",
          "description": "See Vertical Alignment.",
          "descriptionHTML": "See \n\u003cac:link ac:anchor\u003d\"VerticalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eVertical Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e."
        },
        "width": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of the label. If set to zero, the text is always displayed as a single line.",
          "descriptionHTML": "Specifies the width of the label. If set to zero, the text is always displayed as a single line."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "maxLines": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "maxLines",
          "description": "If the height and numLines field values are both zero, specifies the maximum number of lines of text to be displayed. See Vertical Alignment and for more details.",
          "descriptionHTML": "If the \u003ccode\u003eheight\u003c/code\u003e\u0026nbsp;and \u003ccode\u003enumLines\u003c/code\u003e field values are both zero, specifies the maximum number of lines of text to be displayed. See \u003cstrong\u003e\n \u003cac:link ac:anchor\u003d\"VerticalAlignment\"\u003e\n  \u003cac:plain-text-link-body\u003e\n   Vertical Alignment\n  \u003c/ac:plain-text-link-body\u003e\n \u003c/ac:link\u003e \u003c/strong\u003eand \u003cstrong\u003e\n \u003cac:link ac:anchor\u003d\"Wrapping\" /\u003e\u003c/strong\u003e for more details."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "wrap": {
          "type": "boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "wrap",
          "description": "See .",
          "descriptionHTML": "See \u003cstrong\u003e\n \u003cac:link ac:anchor\u003d\"Wrapping\" /\u003e.\u003c/strong\u003e"
        },
        "font": {
          "type": "Font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "font",
          "description": "Specifies the Font node to be used.",
          "descriptionHTML": "Specifies the \u003cstrong\u003eFont\u003c/strong\u003e node to be used."
        }
      },
      "name": "Label",
      "description": "The Label node class is used to display a string of text. The Label node class supports many options including:Specifying the color of the font Specifying the font to be used by specifying a TrueType/OpenType font file Single line and multi-line text Horizontal and vertical alignment Justification Automatic ellipsizing of the text based on the specified width and number of linesAlignmentThe Label node class uses the horizAlign and vertAlign fields to allow you to position the rendered text relative to a specified bounding rectangle.Horizontal AlignmentThe horizAlign field allows you to position text horizontally relative to the computed width of the label. The computed width is determined in one of two ways:If the width field is greater than zero, the computed width is the value of the width field. If the width field is equal to zero, the computed width is the rendered width of the text.There are three possible values for the horizAlign field:left The left edge of the text is drawn at the 0 x-coordinate position of the Label node local coordinate system. center The horizontal center of each line of text is positioned at the x-coordinate corresponding to half the computed width of the Label node local coordinate system. right The right edge of each line of text is positioned at x-coordinate position corresponding to the computed width of the Label node local coordinate system.Note that if the width field is equal to zero, a single line of text will be rendered (see  for more details). In that case, all three values of the horizAlign field have the same result, since the computed width equals the rendered width of the text. Vertical AlignmentThe vertAlign field allows you to position text vertically relative to the computed height of the label. The computed height is determined in one of four ways, which in some cases depend on the values set in the numLines and maxLines fields:If the height field is greater than zero, the computed height is the value of the height field. In this case, the numLines and maxLines field values are ignored. If the height field is zero and the numLines field is greater than zero, the computed height is the height required to render the number of lines specified by the numLines field value. Note that the computed height is set to the height required to render the number of lines even if the rendered text contains fewer lines. For example, if the numLines field value is 4, and the rendered text only occupies two lines, the computed height is still equal to the height required to render four lines. In this case, the value of the maxLines field is ignored. If both the height and numLines field values are set to zero, and the maxLines field value is greater than zero, the rendered text will be limited to the number of lines set in the maxLines field value. In this case, the computed height is the height of the rendered text, but that text will be limited to no more than the number of lines set in the maxLines field value. For example, if the maxLines field value is 3, and the rendered text only occupies two lines, the computed height is the height required to render two lines of text. If the maxLines field value is 3, and the rendered text would occupy five lines, only three lines are drawn, and the computed height is the height required to render those three lines. If the height, numLines and maxLines field values are all zero, the computed height is the height of the rendered text.There are three possible values for the vertAlign field:top The top edge of the text is drawn at 0 y-coordinate position of the Label node local coordinate system. center The vertical center of the rendered text is positioned at y-coordinate position corresponding to half the computed height of the Label node local coordinate system. bottom The text is drawn so that bottom edge of the rendered text is positioned at the y-coordinate position corresponding to the computed height of the Label node local coordinate system.Note that if the computed height equals the actual height of the rendered text (such as when the height and numLines field values are both zero), all three values of the vertAlign field have the same result, since the computed height equals the rendered height of the text. Alignment ExampleThe following image shows a Rectangle node with a width of 1000 pixels and a height of 500 pixels. The Rectangle node has nine Label child nodes. Each Label child node has its width field value set to 1000 and its height field value set to 500. All nine combinations of the horizAlign and vertAlign fields are used to position the labels relative to the 1000x500 bounding rectangle.WrappingThe wrap field is used to control how the text is broken into multiple lines. The two possible field values are true and false. wrap \u003d falseIn this case, a single line of text will be displayed.If the width field value is zero, and the text does not contain any newline characters, the entire text string is rendered. If the text contains newline characters, the part of the text up to the first newline character is rendered.If the width field value is greater than zero, the text is truncated or ellipsized so only the portion of text is rendered that fits within the specified width. wrap \u003d trueIn this case, if the width field value is greater than zero, the text is broken into several lines, each of which has width no larger than the computed width. Each newline character in the text results in a new line of text. Also, the text is broken into lines at any space or hyphen character. If any word in the text exceeds the computed width, it is broken into lines arbitrarily.If the width field value is zero and the wrap field value is true, no text is rendered.The actual numbers of lines displayed is dependent upon the values set in the height, numLines and maxLines fields.If the height field value is greater than zero, the text is broken into lines based on the value of the width field, but only the number of lines that fit into the specified height are rendered. If the displayPartialLines field value is set to true (the default), only full lines of text are rendered. If the displayPartialLines field value is false, the top or bottom line of text may be clipped vertically.If the height field value is zero, and the numLines field value is greater than zero, the text is broken into lines based on the value of the width field, and up to the number of lines of text set in the numLines field value are rendered.If both the height and numLines field values are zero, and the maxLines field value is greater than zero, the text is broken into lines based on the value of the width field, and no more than the number of lines of text set in the maxLines field value are rendered. ",
      "descriptionHTML": "The \u003cstrong\u003eLabel\u003c/strong\u003e node class is used to display a string of text. The \u003cstrong\u003eLabel\u003c/strong\u003e node class supports many options including:\u003cli\u003eSpecifying the color of the font\u003c/li\u003e\n\u003cli\u003eSpecifying the font to be used by specifying a TrueType/OpenType font file\u003c/li\u003e\n\u003cli\u003eSingle line\u0026nbsp;and\u0026nbsp;multi-line text\u003c/li\u003e\n\u003cli\u003eHorizontal and vertical alignment\u003c/li\u003e\n\u003cli\u003eJustification\u003c/li\u003e\n\u003cli\u003eAutomatic ellipsizing of the text\u0026nbsp;based on the specified width and number of lines\u003c/li\u003eAlignmentThe \u003cstrong\u003eLabel\u003c/strong\u003e node class uses the \u003ccode\u003ehorizAlign\u003c/code\u003e and \u003ccode\u003evertAlign\u003c/code\u003e fields to allow you to position the rendered text relative to a specified bounding rectangle.Horizontal AlignmentThe \u003ccode\u003ehorizAlign\u003c/code\u003e field allows you to position text horizontally relative to the computed width of the label. The computed width is determined in one of two ways:\u003cli\u003eIf the \u003ccode\u003ewidth\u003c/code\u003e field is greater than zero, the computed width\u0026nbsp;is the value of the \u003ccode\u003ewidth\u003c/code\u003e field.\u003c/li\u003e\n\u003cli\u003eIf the \u003ccode\u003ewidth\u003c/code\u003e field is equal to zero, the computed width\u0026nbsp;is the rendered width of the text.\u003c/li\u003eThere are three possible values for the \u003ccode\u003ehorizAlign\u003c/code\u003e field:\u003cli\u003e\u003ccode\u003eleft\u003c/code\u003e\u003cbr\u003eThe left edge of the text is drawn at the 0 x-coordinate position of the \u003cstrong\u003eLabel\u003c/strong\u003e node local coordinate system.\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e\u003cbr\u003eThe horizontal center of each line of text is positioned at the x-coordinate corresponding to half the computed width of the \u003cstrong\u003eLabel\u003c/strong\u003e node\u0026nbsp;local coordinate system.\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eright\u003c/code\u003e\u003cbr\u003eThe right edge of each line of text is positioned at x-coordinate position corresponding to the computed width of the \u003cstrong\u003eLabel\u003c/strong\u003e node local coordinate system.\u003c/li\u003eNote that if the \u003ccode\u003ewidth\u003c/code\u003e field is equal to zero, a single line of text will be rendered (see\u0026nbsp;\u003cstrong\u003e\n \u003cac:link ac:anchor\u003d\"Wrapping\" /\u003e\u003c/strong\u003e\u0026nbsp;for more details). In that case, all three values of the \u003ccode\u003ehorizAlign\u003c/code\u003e field have the same result, since the computed width equals the rendered width of the text.\u0026nbsp;Vertical AlignmentThe \u003ccode\u003evertAlign\u003c/code\u003e field allows you to position text vertically relative to the computed height of the label. The computed height is determined in one of four ways, which in some cases depend on the values set in the \u003ccode\u003enumLines\u003c/code\u003e and \u003ccode\u003emaxLines\u003c/code\u003e fields:\u003cli\u003eIf the \u003ccode\u003eheight\u003c/code\u003e field is greater than zero, the computed height is the value of the \u003ccode\u003eheight\u003c/code\u003e field. In this case, the \u003ccode\u003enumLines\u003c/code\u003e and \u003ccode\u003emaxLines\u003c/code\u003e field values are ignored. \u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003eIf the \u003ccode\u003eheight\u003c/code\u003e field is zero and the \u003ccode\u003enumLines\u003c/code\u003e field is greater than zero, the computed height is the height required to render the number of lines specified\u0026nbsp;by the\u0026nbsp;\u003ccode\u003enumLines\u003c/code\u003e field value. Note that the computed height is set to the height\u0026nbsp;required to render the number of lines\u0026nbsp;even if the rendered text contains fewer lines. For example, if the \u003ccode\u003enumLines\u003c/code\u003e field value is \u003ccode\u003e4\u003c/code\u003e, and the rendered text only occupies\u0026nbsp;two lines,\u0026nbsp;the computed height\u0026nbsp;is still equal to the height required to render\u0026nbsp;four lines. In this case, the value of the \u003ccode\u003emaxLines\u003c/code\u003e field is ignored. \u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003eIf both the\u0026nbsp;\u003ccode\u003eheight\u003c/code\u003e and \u003ccode\u003enumLines\u003c/code\u003e field values are set to zero, and the \u003ccode\u003emaxLines\u003c/code\u003e field value is greater than zero, the rendered text will be limited to the number of lines set in the\u0026nbsp;\u003ccode\u003emaxLines\u003c/code\u003e field value. In this case, the computed height\u0026nbsp;is the height of the rendered text, but that text will be limited to no more than the number of lines set\u0026nbsp;in the\u0026nbsp;\u003ccode\u003emaxLines\u003c/code\u003e field value. For example, if the\u0026nbsp;\u003ccode\u003emaxLines\u003c/code\u003e field value is \u003ccode\u003e3\u003c/code\u003e, and the rendered text only occupies\u0026nbsp;two lines,\u0026nbsp;the computed height\u0026nbsp;is the height required to render two lines of text. If the \u003ccode\u003emaxLines\u003c/code\u003e field value is \u003ccode\u003e3\u003c/code\u003e, and the rendered text would occupy\u0026nbsp;five lines, only three lines are drawn, and the computed height is the height required to render those three lines.\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003eIf the\u0026nbsp;\u003ccode\u003eheight\u003c/code\u003e, \u003ccode\u003enumLines\u003c/code\u003e and \u003ccode\u003emaxLines\u003c/code\u003e field values are all zero, the computed height\u0026nbsp;is the height of the rendered text.\u003c/li\u003eThere are three possible values for the \u003ccode\u003evertAlign\u003c/code\u003e field:\u003cli\u003e\u003ccode\u003etop\u003c/code\u003e \u003cbr\u003eThe top edge of the text is drawn at 0 y-coordinate position of the \u003cstrong\u003eLabel\u003c/strong\u003e node\u0026nbsp;local coordinate system.\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e \u003cbr\u003eThe vertical center of the rendered text is positioned at y-coordinate position corresponding to half the computed height of the \u003cstrong\u003eLabel\u003c/strong\u003e node\u0026nbsp;local coordinate system.\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebottom\u003c/code\u003e \u003cbr\u003eThe text is drawn so that bottom edge of the rendered text is positioned at the y-coordinate position corresponding to the computed height of the \u003cstrong\u003eLabel\u003c/strong\u003e node local coordinate system.\u003c/li\u003eNote that if the computed height equals the actual height of the rendered text (such as when the\u0026nbsp;\u003ccode\u003eheight\u003c/code\u003e and \u003ccode\u003enumLines\u003c/code\u003e field values are both zero), all three values of the \u003ccode\u003evertAlign\u003c/code\u003e field have the same result, since the computed height equals the rendered height of the text.\u0026nbsp;Alignment ExampleThe following image shows a \u003cstrong\u003eRectangle\u003c/strong\u003e node with a width of 1000 pixels and a height of 500 pixels. The \u003cstrong\u003eRectangle\u003c/strong\u003e node has nine \u003cstrong\u003eLabel\u003c/strong\u003e child nodes. Each \u003cstrong\u003eLabel\u003c/strong\u003e child node has its \u003ccode\u003ewidth\u003c/code\u003e field value set to 1000 and its \u003ccode\u003eheight\u003c/code\u003e field value set to 500. All nine combinations of the \u003ccode\u003ehorizAlign\u003c/code\u003e and \u003ccode\u003evertAlign\u003c/code\u003e fields are used to position the labels relative to the 1000x500 bounding rectangle.\u003cac:image\u003e\n \u003cri:attachment ri:filename\u003d\"TextAlign.png\" /\u003e\n\u003c/ac:image\u003eWrappingThe \u003ccode\u003ewrap\u003c/code\u003e field is used to control how the text is broken into multiple lines. The two possible field values are \u003ccode\u003etrue\u003c/code\u003e and \u003ccode\u003efalse\u003c/code\u003e.\u0026nbsp;wrap \u003d falseIn this case, a single line of text will be displayed.If the \u003ccode\u003ewidth\u003c/code\u003e field value is zero, and the text does not contain any newline characters, the entire text string is rendered. If the text contains newline characters, the part of the text up to the first newline character is rendered.If the \u003ccode\u003ewidth\u003c/code\u003e field value is greater than zero, the text is truncated or ellipsized so only the portion of text is rendered that fits within the specified width.\u0026nbsp;wrap \u003d trueIn this case, if the \u003ccode\u003ewidth\u003c/code\u003e field value is greater than zero, the text is broken into several lines, each of which has width no larger than the computed width. Each newline character in the text results in a new line of text. Also, the text is broken into lines at any space or hyphen character. If any word in the text exceeds the computed width, it is broken into lines arbitrarily.If the \u003ccode\u003ewidth\u003c/code\u003e field value is zero and the\u0026nbsp;\u003ccode\u003ewrap\u003c/code\u003e field value is true, no text is rendered.The actual numbers of lines displayed is dependent upon the values set in the\u0026nbsp;\u003ccode\u003eheight\u003c/code\u003e, \u003ccode\u003enumLines\u003c/code\u003e and \u003ccode\u003emaxLines\u003c/code\u003e fields.If the\u0026nbsp;\u003ccode\u003eheight\u003c/code\u003e field value is greater than zero, the text is broken into lines based on the value of the\u0026nbsp;\u003ccode\u003ewidth\u003c/code\u003e field, but only the number of lines that fit into the specified height are rendered. If the \u003ccode\u003edisplayPartialLines\u003c/code\u003e field value is set to true (the default), only full lines of text are rendered. If the\u0026nbsp;\u003ccode\u003edisplayPartialLines\u003c/code\u003e field value is false, the top or bottom line of text may be clipped vertically.If the\u0026nbsp;\u003ccode\u003eheight\u003c/code\u003e field value is zero, and the\u0026nbsp;\u003ccode\u003enumLines\u003c/code\u003e field value is greater than zero, the text is broken into lines based on the value of the\u0026nbsp;\u003ccode\u003ewidth\u003c/code\u003e field, and up to the number of lines of text set in the\u0026nbsp;\u003ccode\u003enumLines\u003c/code\u003e field value are rendered.If both the \u003ccode\u003eheight\u003c/code\u003e and \u003ccode\u003enumLines\u003c/code\u003e field values are zero, and the\u0026nbsp;\u003ccode\u003emaxLines\u003c/code\u003e field value is greater than zero, the text is broken into lines based on the value of the\u0026nbsp;\u003ccode\u003ewidth\u003c/code\u003e field, and no more than the number of lines of text set in the\u0026nbsp;\u003ccode\u003emaxLines\u003c/code\u003e field value are rendered.\u0026nbsp;",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Label",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "text",
        "color",
        "font",
        "horizAlign",
        "vertAlign",
        "width",
        "height",
        "numLines",
        "maxLines",
        "wrap",
        "lineSpacing",
        "displayPartialLines",
        "ellipsizeOnBoundary",
        "truncateOnDelimiter",
        "wordBreakChars",
        "ellipsisText",
        "isTextEllipsized"
      ],
      "documentationVersion": 44
    },
    "Rectangle": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "color": {
          "type": "color (string containing hex value)",
          "defaultValue": "0xFFFFFFFF",
          "accessPermission": "READ_WRITE",
          "name": "color",
          "description": "Specifies the color of the rectangle.",
          "descriptionHTML": "Specifies the color of the rectangle."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "width": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of rectangle in local coordinates.",
          "descriptionHTML": "Specifies the width of rectangle in local coordinates."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "height": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of rectangle in local coordinates.",
          "descriptionHTML": "Specifies the height of rectangle in local coordinates."
        }
      },
      "name": "Rectangle",
      "description": "The Rectangle node class draws a solid color rectangle with the top/left corner of the rectangle drawn at the origin of the node local coordinate system. Because the Rectangle node class extends the Group node class, it can have child nodes. For example, a Rectangle node might have a child Label node, resulting in text being drawn inside of a box.",
      "descriptionHTML": "The \u003cstrong\u003eRectangle\u003c/strong\u003e node class draws a solid color rectangle with the top/left corner of the rectangle drawn at the origin of the node local coordinate system. Because the\u0026nbsp;\u003cstrong\u003eRectangle\u003c/strong\u003e node class extends the \u003cstrong\u003eGroup\u003c/strong\u003e node class, it can have child nodes. For example, a \u003cstrong\u003eRectangle\u003c/strong\u003e node might have a child \u003cstrong\u003eLabel\u003c/strong\u003e node, resulting in text being drawn inside of a box.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Rectangle",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "width",
        "height",
        "color"
      ],
      "documentationVersion": 27
    },
    "PosterGrid": {
      "parentName": "ArrayGrid",
      "isAbstract": false,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e\u003cbr\u003eWhen set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position."
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Specifies whether or not the focus indicator bitmap is displayed",
          "descriptionHTML": "\u003cspan\u003eSpecifies whether or not the focus indicator bitmap is displayed\u003c/span\u003e"
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "A vector specifying the horizontal spacing between columns and the vertical spacing between rows in the grid.",
          "descriptionHTML": "A vector specifying the horizontal spacing between columns and the vertical spacing between rows in the grid."
        },
        "loadingBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "loadingBitmapUri",
          "description": "Specifies a bitmap file to display while a grid item\u0027s poster is loading.",
          "descriptionHTML": "Specifies a bitmap file to display while a grid item\u0027s poster is loading."
        },
        "caption1NumLines": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "caption1NumLines",
          "description": "Specifies the number of lines to render for the grid item first caption",
          "descriptionHTML": "Specifies the number of lines to render for the grid item first caption"
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "Specifies the bitmap file to use as a visual separator between the last and first list items when the list wraps. In most case, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use as a visual separator between the last and first list items when the list wraps. In most case, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "Specifies the font for section divider labels",
          "descriptionHTML": "Specifies the font for section divider labels"
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When a list item gains the key focus, itemFocused is set to the index of the focused item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list item gains the key focus, itemFocused is set to the index of the focused item."
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "When specified, the columnSpacings field specifies the spacing after each column of the grid. This allows the spacing between columns to vary from column to column. The columnSpacings values override the horizontal spacing specified in element 0 of the itemSpacing field. If the columnSpacings array contains fewer elements than the number of columns specified by the numColumns field, element 0 of the itemSpacing field is used as the spacing after the excess columns.",
          "descriptionHTML": "\u003cp\u003eWhen specified, the columnSpacings field specifies the spacing after each column of the grid. This allows the spacing between columns to vary from column to column.\u003c/p\u003e\u003cp\u003eThe columnSpacings values override the horizontal spacing specified in element 0 of the itemSpacing field. If the columnSpacings array contains fewer elements than the number of columns specified by the numColumns field, element 0 of the itemSpacing field is used as the spacing after the excess columns.\u003c/p\u003e"
        },
        "captionBackgroundBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "captionBackgroundBitmapUri",
          "description": "Specifies a bitmap file to render as a background for the grid item captions",
          "descriptionHTML": "Specifies a bitmap file to render as a background for the grid item captions"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of each item in the list or grid. For list or grid items that are posters, itemSize is the value of a basePosterSize field and any sub-elements included with the poster.",
          "descriptionHTML": "Specifies the width and height of each item in the list or grid. For list or grid items that are posters, \u003ccode\u003eitemSize\u003c/code\u003e is the value of a \u003ccode\u003ebasePosterSize\u003c/code\u003e field and any sub-elements included with the poster."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "Specifies the text color for section divider labels",
          "descriptionHTML": "Specifies the text color for section divider labels"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "caption2Color": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "caption2Color",
          "description": "Specifies the color for the grid item second caption",
          "descriptionHTML": "\u003cspan\u003eSpecifies the color for the grid item second caption\u003c/span\u003e"
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items",
          "descriptionHTML": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items"
        },
        "failedBitmapOpacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "failedBitmapOpacity",
          "description": "Specifies an opacity value used to render the failed bitmap",
          "descriptionHTML": "Specifies an opacity value used to render the failed bitmap"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list or a column of grid items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect floatingFocus Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible. fixedFocusWrap Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down. fixedFocus Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list or a column\u0026nbsp;of grid items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efixedFocus\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eCauses the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible.",
            "fixedFocusWrap": "Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down.",
            "fixedFocus": "Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap",
            "fixedFocus"
          ]
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "sectionDividerBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "Specifies the bitmap file to use as visual separator between sections of the grid. The section dividers can include an icon and a label in addition to the section divider bitmap. Note that for sections that do not contain an icon or a title, the wrapDividerBitmapUri is used for the section dividers instead.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as visual separator between sections of the grid. The section dividers can include an icon and a label in addition to the section divider bitmap.\u003c/p\u003e\u003cp\u003eNote that for sections that do not contain an icon or a title, the wrapDividerBitmapUri is used for the section dividers instead.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "117",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width.",
          "descriptionHTML": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "captionHorizAlignment": {
          "type": "string",
          "defaultValue": "center",
          "accessPermission": "READ_WRITE",
          "name": "captionHorizAlignment",
          "description": "Specifies the horizontal positioning of the grid item captions. Possible values are: Value Meaning left Left-justify the caption relative to the grid item poster center Center-justify the caption relative to the grid item poster right Right-justify the caption relative to the grid item poster",
          "descriptionHTML": "\u003cp\u003eSpecifies the horizontal positioning of the grid item captions. Possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eleft\u003c/td\u003e\n   \u003ctd\u003eLeft-justify the caption relative to the grid item poster\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ecenter\u003c/td\u003e\n   \u003ctd\u003eCenter-\u003cspan\u003ejustify the caption relative to the grid item poster\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eright\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eRight-\u003cspan\u003ejustify the caption relative to the grid item poster\u003c/span\u003e\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "left": "Left-justify the caption relative to the grid item poster",
            "center": "Center-justify the caption relative to the grid item poster",
            "right": "Right-justify the caption relative to the grid item poster"
          },
          "possibleValuesNames": [
            "left",
            "center",
            "right"
          ]
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When a list item is selected, itemSelected is set to the index of the selected item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list item is selected, itemSelected is set to the index of the selected item."
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "When specified, the columnWidths field specifies the widths of the poster for each column of the grid. This allows the width of each column of the grid to vary from column to column. The columnWidths values override the width specified in element 0 of the basePosterSize field. If the columnWidths array contains fewer elements than the number of columns specified by the numColumns field, element 0 of the basePosterSize field is used as the width of the excess columns.",
          "descriptionHTML": "\u003cp\u003e\u003cspan\u003eWhen specified, the columnWidths field specifies the widths of the poster for each column of the grid. \u003cspan\u003eThis allows the width of each column of the grid to vary from column to column.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe columnWidths values override the width specified in element 0 of the basePosterSize field. If the columnWidths array contains fewer elements than the number of columns specified by the numColumns field, element 0 of the basePosterSize field is used as the width of the excess columns.\u003c/span\u003e\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "useAtlas": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "useAtlas",
          "description": "Enables a performance optimization when most of the poster items displayed in the grid have the same size. The field value toggles the use of a texture atlas that stores the posters in the grid. The default is true, since in many cases, most of the posters in the grid have the same size as determined by the basePosterSize field value. In this case, using the texture atlas can provide a rendering performance benefit. For grids that have more complicated layouts, that include several posters that have sizes that differ from the value of basePosterSize, or for grids where there are only a few large posters (about five to eight, or posters that are about a quarter of the screen height or width) displayed at the same time, it is best for this field to be set to false.",
          "descriptionHTML": "\u003cp\u003eEnables a performance optimization when most of the poster items displayed in the grid have the same size. The field value toggles the use of a texture atlas that stores the posters in the grid. The default is \u003ccode\u003etrue\u003c/code\u003e, since in many cases, most of the posters in the grid have the same size as determined by the \u003ccode\u003ebasePosterSize\u003c/code\u003e field value. In this case, using the texture atlas can provide a rendering performance benefit. For grids that have more complicated layouts, that include several posters that have sizes that differ from the value of \u003ccode\u003ebasePosterSize\u003c/code\u003e, or for grids where there are only a few large posters (about five to eight, or posters that are about a quarter of the screen height or width) displayed at the same time, it is best for this field to be set to \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e"
        },
        "caption2Font": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "caption2Font",
          "description": "Specifies the font for the grid item second caption",
          "descriptionHTML": "\u003cspan\u003eSpecifies the font for the grid item second caption\u003c/span\u003e"
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows in the grid. Note that the actual number of rows may be more or less than the number of visible rows depending on the number of items in the grid\u0027s content.",
          "descriptionHTML": "Specifies the number of visible rows in the grid. Note that the actual number of rows may be more or less than the number of visible rows depending on the number of items in the grid\u0027s content."
        },
        "captionLineSpacing": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "captionLineSpacing",
          "description": "Specifies the spacing in pixels between lines of the caption",
          "descriptionHTML": "Specifies the spacing in pixels between lines of the caption"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "36",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "Specifies the height of the section dividers. The width of the section dividers is determined by the width of the list items (such as itemSize[0]) and the sectionDividerLeftOffset field.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the section dividers.\u003c/p\u003e\u003cp\u003eThe width of the section dividers is determined by the width of the list items (such as itemSize[0]) and the sectionDividerLeftOffset field.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "loadingBitmapOpacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "loadingBitmapOpacity",
          "description": "Specifies an opacity value used to render the loading bitmap",
          "descriptionHTML": "Specifies an opacity value used to render the loading bitmap"
        },
        "caption1Font": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "caption1Font",
          "description": "Specifies the font for the grid item first caption",
          "descriptionHTML": "Specifies the font for the grid item first caption"
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content for the list. See Data Bindings below for more details. If the data contains section markers, section dividers will be drawn between each section. These section dividers may contain an icon and/or a string. ",
          "descriptionHTML": "Specifies the content for the list. See \n\u003cac:link ac:anchor\u003d\"DataBindings\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eData Bindings\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below for more details. If the data contains section markers, section dividers will be drawn between each section. These section dividers may contain an icon and/or a string.\u0026nbsp;"
        },
        "captionVertAlignment": {
          "type": "string",
          "defaultValue": "below",
          "accessPermission": "READ_WRITE",
          "name": "captionVertAlignment",
          "description": "Specifies the horizontal positioning of the grid item captions. Possible values are: Value Meaning above Position the caption so the bottom of the caption lies just above the grid item poster top Align the top of the caption with the top edge of the grid item poster center Align the vertical center of the caption with the vertical center of the of the grid item poster bottom Align the bottom of the caption with the bottom edge of the grid item poster below  Position the caption so the top of the caption lies just below the grid item poster",
          "descriptionHTML": "\u003cp\u003eSpecifies the horizontal positioning of the grid item captions. Possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eabove\u003c/td\u003e\n   \u003ctd\u003ePosition the caption so the bottom of the caption lies just above the grid item poster\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003etop\u003c/td\u003e\n   \u003ctd\u003eAlign the top of the caption with the top edge of the grid item poster\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ecenter\u003c/td\u003e\n   \u003ctd\u003eAlign the vertical center of the caption with the vertical center of the of the grid item poster\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ebottom\u003c/td\u003e\n   \u003ctd\u003eAlign the bottom of the caption with the bottom edge of the grid item poster\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ebelow\u0026nbsp;\u003c/td\u003e\n   \u003ctd\u003ePosition the caption so the top of the caption lies just below the grid item poster\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "top": "Align the top of the caption with the top edge of the grid item poster",
            "below": "Position the caption so the top of the caption lies just below the grid item poster",
            "bottom": "Align the bottom of the caption with the bottom edge of the grid item poster",
            "center": "Align the vertical center of the caption with the vertical center of the of the grid item poster",
            "above": "Position the caption so the bottom of the caption lies just above the grid item poster"
          },
          "possibleValuesNames": [
            "above",
            "top",
            "center",
            "bottom",
            "below"
          ]
        },
        "showBackgroundForEmptyCaptions": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "showBackgroundForEmptyCaptions",
          "description": "If a caption background is specified, this field specifies whether or not to display the caption background when the caption text is empty",
          "descriptionHTML": "If a caption background is specified, this field specifies whether or not to display the caption background when the caption text is empty"
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items.",
          "descriptionHTML": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items."
        },
        "imageWellBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "imageWellBitmapUri",
          "description": "Specifies the bitmap file to use to suggest where images would appear for empty grids and empty sections of grids. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use to suggest where images would appear for empty grids and empty sections of grids. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "caption2NumLines": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "caption2NumLines",
          "description": "Specifies the number of lines to render for the grid item second caption",
          "descriptionHTML": "\u003cspan\u003eSpecifies the number of lines to render for the grid item second caption\u003c/span\u003e"
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "When fixedLayout is false, the PosterGrid assigns each item in the data model to sequential cells in the grid (or the section if the data model includes section information). When fixedLayout is false, the data models using the X, Y, W and H attributes to specify which cells of the grid each item should occupy, where X is the column number, Y is the row number, W is the number of columns the item occupies and H is the number of rows the item occupies. Fixed layout should only be set to true for cases where one or more items in the grid should span multiple rows or columns.",
          "descriptionHTML": "\u003cp\u003eWhen fixedLayout is false, the PosterGrid assigns each item in the data model to sequential cells in the grid (or the section if the data model includes section information). When fixedLayout is false, the data models using the X, Y, W and H attributes to specify which cells of the grid each item should occupy, where X is the column number, Y is the row number, W is the number of columns the item occupies and H is the number of rows the item occupies.\u003c/p\u003e\u003cp\u003eFixed layout should only be set to true for cases where one or more items in the grid should span multiple rows or columns.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "basePosterSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "basePosterSize",
          "description": "Specifies the width and height of the posters in the grid.",
          "descriptionHTML": "Specifies the width and height of the posters in the grid."
        },
        "caption1Color": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "caption1Color",
          "description": "Specifies the color for the grid item first caption",
          "descriptionHTML": "Specifies the color for the grid item first caption"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "When specified, the rowHeights field specifies the heights of the poster for each row of the grid. This allows the height of each row of the grid to vary from row to row. The rowHeights values override the height specified in element 1 of the basePosterSize field. If the rowHeights array contains fewer elements than the number of rows needed to display all the items in the grid, element 1 of the basePosterSize field is used as the height of the excess rows.",
          "descriptionHTML": "\u003cp\u003eWhen specified, the rowHeights field specifies the heights of the poster for each row of the grid. This allows the height of each row of the grid to vary from row to row.\u003c/p\u003e\u003cp\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eThe rowHeights values override the height specified in element 1 of the basePosterSize field. If the rowHeights array contains fewer elements than the number of rows needed to display all the items in the grid, element 1 of the basePosterSize field is used as the height of the excess rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "failedBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "failedBitmapUri",
          "description": "Specifies a bitmap file to display when a grid item poster fails to load",
          "descriptionHTML": "Specifies a bitmap file to display when a grid item poster fails to load"
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When a list item loses the key focus, itemFocused is set to the index of the unfocused item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list item loses the key focus, itemFocused is set to the index of the unfocused item."
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "When specified, the rowSpacings field specifies the spacing after each row of the grid. This allows the spacing between rows to vary from row to row. The rowSpacings values override the vertical spacing specified in element 1 of the itemSpacing field. If the rowSpacings array contains fewer elements than the number of rows needed to display all the items in the grid, element 1 of the itemSpacing field is used as the spacing after the excess rows.",
          "descriptionHTML": "\u003cp\u003eWhen specified, the rowSpacings field specifies the spacing after each row of the grid. This allows the spacing between rows to vary from row to row.\u003c/p\u003e\u003cp\u003eThe rowSpacings values override the vertical spacing specified in element 1 of the itemSpacing field. If the rowSpacings array contains fewer elements than the number of rows needed to display all the items in the grid, element 1 of the itemSpacing field is used as the spacing after the excess rows.\u003c/p\u003e"
        },
        "enableCaptionScrolling": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "enableCaptionScrolling",
          "description": "Specifies whether or not to scroll single line captions when it is necessary to ellipsize the caption because it is wider the column containing the grid item",
          "descriptionHTML": "Specifies whether or not to scroll single line captions when it is necessary to ellipsize the caption because it is wider the column containing the grid item"
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "36",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "Specifies the height of the divider. The wrapDividerBitmap will be scaled to this height. The width of the wrap divider is set to the width of the list items (i.e. itemSize[0]) ",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the divider. The wrapDividerBitmap will be scaled to this height.\u003c/p\u003e\u003cp\u003eThe width of the wrap divider is set to the width of the list items (i.e. itemSize[0])\u0026nbsp;\u003c/p\u003e"
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "10",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "Specifies the spacing between the items appearing in the section divider (e.g. the spacing between the section divider icon, the section divider label, and the section divider bitmap). Note the section divider does not always include an icon and/or a title.",
          "descriptionHTML": "Specifies the spacing between the items appearing in the section divider (e.g. the spacing between the section divider icon, the section divider label, and the section divider bitmap). Note the section divider does not always include an icon and/or a title."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in the grid",
          "descriptionHTML": "Specifies the number of columns in the grid"
        }
      },
      "name": "PosterGrid",
      "description": "The PosterGrid node is a simple grid class that can be used to display two-dimensional grids of posters. In addition to the poster, each item in the grid can include up to two lines of captions.The number of columns in the PosterGrid is fixed and the number of rows varies. The items in the grid fill each row from left to right, then top to bottom. For example, if the grid data contains 8 items and the number of columns is set to 3, then items 1, 2 and 3 will be in the first row. Items 4, 5 and 6 will be in the second row. The third row will contain items 7 and 8 in the leftmost two columns and blank space in the right column.The layout of rows and columns in the grid is very flexible. Possible layouts include:a simple layout with all posters in the grid having the same size a layout with the posters in some rows having varying heights and/or the posters in some columns having varying widths a layout with varying width rows and columns and items that occupy one or more rows and columnsThe grid items can be organized into sections that are demarcated by labelled horizontal divider lines between the sections.",
      "descriptionHTML": "The \u003cstrong\u003ePosterGrid\u003c/strong\u003e\u0026nbsp;node is a simple grid class that can be used to display two-dimensional grids of posters. In addition to the poster, each item in the grid can include up to two lines of captions.The number of columns in the PosterGrid is fixed and the number of rows varies. The items in the grid fill each row from left to right, then top to bottom. For example, if the grid data contains 8 items and the number of columns is set to 3, then items 1, 2 and 3 will be in the first row. Items 4, 5 and 6 will be in the second row. The third row will contain items 7 and 8 in the leftmost two columns and blank space in the right column.The layout of rows and columns in the grid is very flexible. Possible layouts include:\u003cli\u003ea simple layout with all posters in the grid having the same size\u003c/li\u003e\n\u003cli\u003ea layout with the posters in some rows having varying heights and/or the posters in some columns having varying widths\u003c/li\u003e\n\u003cli\u003ea layout with varying width rows and columns and items that occupy one or more rows and columns\u003c/li\u003e\u003cspan\u003eThe grid items can be organized into sections that are demarcated by labelled horizontal divider lines between the sections.\u003c/span\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/PosterGrid",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "itemSize",
        "focusRow",
        "focusColumn",
        "horizFocusAnimationStyle",
        "vertFocusAnimationStyle",
        "wrapDividerWidth",
        "numRenderPasses",
        "sectionDividerWidth",
        "content",
        "basePosterSize",
        "useAtlas",
        "itemSpacing",
        "numColumns",
        "numRows",
        "rowHeights",
        "columnWidths",
        "rowSpacings",
        "columnSpacings",
        "fixedLayout",
        "imageWellBitmapUri",
        "loadingBitmapUri",
        "loadingBitmapOpacity",
        "failedBitmapUri",
        "failedBitmapOpacity",
        "caption1Font",
        "caption1Color",
        "caption1NumLines",
        "caption2Font",
        "caption2Color",
        "caption2NumLines",
        "captionBackgroundBitmapUri",
        "captionHorizAlignment",
        "captionVertAlignment",
        "captionLineSpacing",
        "showBackgroundForEmptyCaptions",
        "enableCaptionScrolling",
        "drawFocusFeedback",
        "drawFocusFeedbackOnTop",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "wrapDividerBitmapUri",
        "wrapDividerHeight",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem"
      ],
      "documentationVersion": 46
    },
    "Overhang": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "color": {
          "type": "Color",
          "defaultValue": "0x232323ff",
          "accessPermission": "READ_WRITE",
          "name": "color",
          "description": "Specifies that the area occupied by the Overhang should be filled with the specified color. The color field and the backgroundUri field are \"last one wins\" fields. Whichever of these fields is set later overrides the other one.",
          "descriptionHTML": "\u003cp\u003eSpecifies that the area occupied by the Overhang should be filled with the specified color.\u003c/p\u003e\u003cp\u003eThe color field and the backgroundUri field are \"last one wins\" fields. Whichever of these fields is set later overrides the other one.\u003c/p\u003e"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "optionsDimColor": {
          "type": "Color",
          "defaultValue": "0xdddddd44",
          "accessPermission": "READ_WRITE",
          "name": "optionsDimColor",
          "description": "Specifies the color of the options indicator when the options key is not available (i.e. the showOptions field is set to false)",
          "descriptionHTML": "Specifies the color of the options indicator \u003cspan\u003ewhen the options key is not available (i.e. the showOptions field is set to false)\u003c/span\u003e"
        },
        "showOptions": {
          "type": "boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "showOptions",
          "description": "Specifies whether or not the Options prompt is displayed in as part of the annotations that appear on the right side of the Overhang. If both the clock and the options prompt are shown, the clock will be displayed to the left of the options prompt, separated by a vertical divider.",
          "descriptionHTML": "\u003cp\u003eSpecifies whether or not the Options prompt is displayed in as part of the annotations that appear on the right side of the Overhang.\u003c/p\u003e\u003cp\u003eIf both the clock and the options prompt are shown, the clock will be displayed to the left of the options prompt,\u0026nbsp;separated by a vertical divider.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "title": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "title",
          "description": "Specifies a string to be displayed on the left side of the overhang. It will be drawn to the right of the logo, if a logo is specified.  If both a logo and a title are specified, the logo will be displayed to the left of the title, separated by a vertical divider.",
          "descriptionHTML": "\u003cp\u003eSpecifies a string to be displayed on the left side of the overhang. It will be drawn to the right of the logo, if a logo is specified.\u0026nbsp;\u003c/p\u003e\u003cp\u003e\u003cspan\u003eIf both a logo and a title are specified, the logo will be displayed to the left of the title, separated by a vertical divider.\u003c/span\u003e\u003c/p\u003e"
        },
        "titleColor": {
          "type": "Color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "titleColor",
          "description": "Specifies the color of the title text",
          "descriptionHTML": "Specifies the color of the title text"
        },
        "optionsIconDimColor": {
          "type": "Color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "optionsIconDimColor",
          "description": "Specifies a color to tint the neutral colored options icon displayed in the overhang when the options key is not available (i.e. the showOptions field is set to false). If no color is specified, the options icon will be pale gray.",
          "descriptionHTML": "\u003cspan\u003eSpecifies a color to tint the neutral colored options icon displayed in the overhang when the options key is not available (i.e. the showOptions field is set to false). If no color is specified, the options icon will be pale gray.\u003c/span\u003e"
        },
        "leftDividerUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "leftDividerUri",
          "description": "Specifies the URI of the bitmap to be used as the divider between the logo and the title on the left side of the overhang",
          "descriptionHTML": "Specifies the URI of the bitmap to be used as the divider between the logo and the title on the left side of the overhang"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "clockColor": {
          "type": "Color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "clockColor",
          "description": "Specifies the color of the clock text",
          "descriptionHTML": "Specifies the color of the clock text"
        },
        "clockText": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "clockText",
          "description": "Specifies an alternate string to display in the clock location on the right side of the overhang. If the clockText field is set to a non-empty string, that string will replace the clock display. Setting the clockText field back to an empty string will restore the display of the clock.",
          "descriptionHTML": "Specifies an alternate string to display in the clock location on the right side of the overhang.\u0026nbsp;If the clockText field is set to a non-empty string, that string will replace the clock display. Setting the clockText field back to an empty string will restore the display of the clock."
        },
        "height": {
          "type": "float",
          "defaultValue": "115",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the Overhang region. Typically this value is not overridden.",
          "descriptionHTML": "Specifies the height of the Overhang region. Typically this value is not overridden."
        },
        "logoBaselineOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "logoBaselineOffset",
          "description": "Specifies a vertical adjustment to be applied to the logo to adjust its alignment relative to the overall overhang. The logo is positioned so that its baseline (as specified by this field) aligns with the baseline of the options prompt on the right side of the overhang",
          "descriptionHTML": "Specifies a vertical adjustment to be applied to the logo to adjust its alignment relative to the overall overhang. The logo is positioned so that its baseline (as specified by this field) aligns with the baseline of the options prompt on the right side of the overhang"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "optionsIconColor": {
          "type": "Color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "optionsIconColor",
          "description": "Specifies a color to tint the neutral colored options icon displayed in the overhang when the options key is available (i.e. the showOptions field is set to true). If no color is specified, the options icon will be white.",
          "descriptionHTML": "Specifies a color to tint the neutral colored options icon displayed in the overhang when the options key is available (i.e. the showOptions field is set to true). If no color is specified, the options icon will be white."
        },
        "rightDividerVertOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "rightDividerVertOffset",
          "description": "Specifies a vertical offset to add to the position of the divider between the clock and the options prompt on the left side of the overhang. By default, the vertical center of the divider bitmap is aligned to the vertical center of the options prompt.",
          "descriptionHTML": "\u003cspan\u003eSpecifies a vertical offset to add to the position of the divider between the clock and the options prompt on the left side of the overhang. By default, the vertical center of the divider bitmap is aligned to the vertical center of the options prompt.\u003c/span\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "rightDividerUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "rightDividerUri",
          "description": "Specifies the URI of the bitmap to be used as the divider between the clock and the options prompt on the right side of the overhang",
          "descriptionHTML": "\u003cspan\u003eSpecifies the URI of the bitmap to be used as the divider between the clock and the options prompt on the right side of the overhang\u003c/span\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "logoUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "logoUri",
          "description": "Specifies the URI of a bitmap to be drawn on the left side of the overhang. If both a logo and a title are specified, the logo will be displayed to the left of the title, separated by a vertical divider.",
          "descriptionHTML": "\u003cp\u003eSpecifies the URI of a bitmap to be drawn on the left side of the overhang.\u003c/p\u003e\u003cp\u003eIf both a logo and a title are specified, the logo will be displayed to the left of the title, separated by a vertical divider.\u003c/p\u003e"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "showClock": {
          "type": "boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "showClock",
          "description": "Specifies whether or not the Clock is displayed as part of the annotations that appear on the right side of the Overhang.If both the clock and the options prompt are shown, the clock will be displayed to the left of the options prompt, separated by a vertical divider ",
          "descriptionHTML": "\u003cp\u003eSpecifies whether or not the Clock is displayed as part of the annotations that appear on the right side of the Overhang.\u003c/p\u003e\u003cspan\u003eIf both the clock and the options prompt are shown, the clock will be displayed to the left of the options prompt, separated by a vertical divider\u003c/span\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003e\u0026nbsp;\u003c/span\u003e"
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "optionsColor": {
          "type": "Color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "optionsColor",
          "description": "Specifies the color of the options indicator when the options key is available (i.e. the showOptions field is set to true)",
          "descriptionHTML": "Specifies the color of the options indicator when the options key is available (i.e. the showOptions field is set to true)"
        },
        "optionsAvailable": {
          "type": "boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "optionsAvailable",
          "description": "Specifies whether the Options key is currently available. If optionsAvailable is set to true, the options prompt will have an brighter appearance. If false, the options prompt will be dimmed.",
          "descriptionHTML": "Specifies whether the Options key is currently available. If optionsAvailable is set to true, the options prompt will have an brighter appearance. If false, the options prompt will be dimmed."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "backgroundUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "backgroundUri",
          "description": "Specifies the URI of a bitmap that is used to fill the area occupied by the overhang. The color field and the backgroundUri field are \"last one wins\" fields. Whichever of these fields is set later overrides the other one.",
          "descriptionHTML": "\u003cp\u003eSpecifies the URI of a bitmap that is used to fill the area occupied by the overhang.\u003c/p\u003e\u003cp\u003eThe color field and the backgroundUri field are \"last one wins\" fields. Whichever of these fields is set later overrides the other one.\u003c/p\u003e"
        },
        "leftDividerVertOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "leftDividerVertOffset",
          "description": "Specifies a vertical offset to add to the position of the divider between the logo and the title on the left side of the overhang. By default, the bottom of the divider bitmap is drawn at baseline offset of the logo bitmap, as specified by the logoBaselineOffset field.",
          "descriptionHTML": "Specifies a vertical offset to add to the position of the divider between the logo and the title on the left side of the overhang. By default, the bottom of the divider bitmap is drawn at baseline offset of the logo bitmap, as specified by the logoBaselineOffset field."
        }
      },
      "name": "Overhang",
      "description": "The Overhang node provides a information bar that is displayed at the top of a screen in many Roku channels. The regions occupied by the overhang can be filled with either a solid color or a bitmap.On the left side, a logo bitmap and/or a string can be displayed. If both are displayed, a vertical divider is drawn to separate them. The string is typically set to display a reminder to the user of their current location in the interface. For example, in the Roku homescreen, the string is set to \"Search\" while the user in the search entry portion of the user interface. Then when the user explores a search result, the string is changed to reflect the name of the content being explored.On the right side, a clock and/or an indicator that the options key (*) is available can be displayed. If both are displayed, a vertical divider is drawn to separate them.The appearance and contents of the Overhang can be customized by setting its fields to the desired values. ",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eOverhang\u003c/strong\u003e\u0026nbsp;node provides a information bar that is displayed at the top of a screen in many Roku channels. The regions occupied by the overhang can be filled with either a solid color or a bitmap.On the left side, a logo bitmap and/or a string can be displayed. If both are displayed, a vertical divider is drawn to separate them. The string is typically set to display a reminder to the user of their current location in the interface. For example, in the Roku homescreen, the string is set to \"Search\" while the user in the search entry portion of the user interface. Then when the user explores a search result, the string is changed to reflect the name of the content being explored.On the right side, a clock and/or an indicator that the options key (*) is available can be displayed. If both are displayed, a vertical divider is drawn to separate them.\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eThe appearance and contents of the\u0026nbsp;\u003c/span\u003e\u003cstrong style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eOverhang\u003c/strong\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003e can be customized by setting its fields to the desired values.\u0026nbsp;\u003c/span\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Overhang",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "color",
        "backgroundUri",
        "logoUri",
        "logoBaselineOffset",
        "title",
        "titleColor",
        "showClock",
        "clockColor",
        "clockText",
        "showOptions",
        "optionsColor",
        "optionsDimColor",
        "optionsIconColor",
        "optionsIconDimColor",
        "optionsAvailable",
        "leftDividerUri",
        "leftDividerVertOffset",
        "rightDividerUri",
        "rightDividerVertOffset",
        "height"
      ],
      "documentationVersion": 16
    },
    "ProgressDialog": {
      "parentName": "Dialog",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "bulletTextFont": {
          "type": "Font",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "bulletTextFont",
          "description": "When set, the font of the bullet point text",
          "descriptionHTML": "When set, the font of the bullet point text"
        },
        "title": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "title",
          "description": "Title of the dialog box",
          "descriptionHTML": "Title of the dialog box"
        },
        "buttonFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonFocused",
          "description": "Read-Only Set to the index of the focused button whenever a button in the group receives the key focus.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eSet to the index of the focused button whenever a button in the group receives the key focus.\u003c/span\u003e"
        },
        "messageColor": {
          "type": "color",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "messageColor",
          "description": "When set, the color of the message text",
          "descriptionHTML": "When set, the color of the message text"
        },
        "messageFont": {
          "type": "Font",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "messageFont",
          "description": "When set, the font of the message text",
          "descriptionHTML": "When set, the font of the message text"
        },
        "graphicUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "graphicUri",
          "description": "Specifies a bitmap to be displayed in the dialog. The bitmap is displayed below the bullet text region and above the buttons. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed in the dialog. The bitmap is displayed below the\u0026nbsp;bullet text\u0026nbsp;region and above the buttons. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "close": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "WRITE_ONLY",
          "name": "close",
          "description": "Write-Only Causes the dialog to be dismissed. The dialog is dismissed whenever the close field is set, regardless of whether the field is set to true or false.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eCauses the dialog to be dismissed. The dialog is dismissed whenever the \u003ccode\u003eclose\u003c/code\u003e field is set, regardless of whether the field is set to \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e."
        },
        "iconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "iconUri",
          "description": "Specifies a bitmap to be displayed as a small icon next to the dialog title. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed as a small icon next to the dialog title. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "focusButton": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "focusButton",
          "description": "Write-Only  Causes the button with the specified index to receive the focus when the ButtonGroup node has the key focus. Note that if the ButtonGroup node does not have the key focus when the focusButton field is set, the specified button will display the focus footprint as its background.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eWrite-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003eCauses the button with the specified index to receive the focus when the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node has the key focus. Note that if the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node does not have the key focus when the \u003ccode\u003efocusButton\u003c/code\u003e field is set, the specified button will display the focus footprint as its background.\u003c/span\u003e"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "buttons": {
          "type": "array of string",
          "defaultValue": "[ ]",
          "accessPermission": "WRITE_ONLY",
          "name": "buttons",
          "description": "Write-Only Allows a set of Button nodes to be easily created by providing an array of Button labels. Each string in the array will result in a Button node to be added to the ButtonGroup, using the string as the Button label.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eAllows a set of \u003cstrong\u003eButton\u003c/strong\u003e nodes to be easily created by providing an array of \u003cstrong\u003eButton\u003c/strong\u003e labels. Each string in the array will result in a \u003cstrong\u003eButton\u003c/strong\u003e node to be added to the \u003cstrong\u003eButtonGroup\u003c/strong\u003e, using the string as the \u003cstrong\u003eButton\u003c/strong\u003e label.\u003c/span\u003e"
        },
        "buttonGroup": {
          "type": "ButtonGroup",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "buttonGroup",
          "description": "The dialog internal ButtonGroup node. This allows the appearance attributes of all the Button nodes in the dialog to be easily modified. Since the ButtonGroup node class is derived from the LayoutGroup node class, additional non-Button node children can also be added.",
          "descriptionHTML": "The dialog internal \u003cstrong\u003eButtonGroup\u003c/strong\u003e node. This allows the appearance attributes of all the \u003cstrong\u003eButton\u003c/strong\u003e nodes in the dialog to be easily modified. Since the\u0026nbsp;\u003cstrong\u003eButtonGroup\u003c/strong\u003e node class is derived from the\u0026nbsp;\u003cstrong\u003eLayoutGroup\u003c/strong\u003e node class, additional non-\u003cstrong\u003eButton\u003c/strong\u003e node children can also be added."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "buttonSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonSelected",
          "description": "Read-Only Set to the index of the selected button whenever the user selects a button in the group.",
          "descriptionHTML": "\u003cspan\u003e \u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003c/span\u003e \u003cbr\u003eSet to the index of the selected button whenever the user selects a button in the group.\u003c/span\u003e"
        },
        "optionsDialog": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "optionsDialog",
          "description": "If set to true, the dialog is automatically dismissed when the Options key is pressed.",
          "descriptionHTML": "If set to true, the dialog is automatically dismissed when the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eOptions\u003c/strong\u003e\u003c/span\u003e key is pressed."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "busySpinner": {
          "type": "BusySpinner",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "busySpinner",
          "description": "Provides access to the BusySpinner node used by the ProgressDialog node so that the spinner icon and rotation direction can be customized.",
          "descriptionHTML": "Provides access to the \u003cstrong\u003eBusySpinner\u003c/strong\u003e node used by the \u003cstrong\u003eProgressDialog\u003c/strong\u003e node so that the spinner icon and rotation direction can be customized."
        },
        "bulletText": {
          "type": "array of string",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "bulletText",
          "description": "An array of strings to be displayed as a list of bullet points.",
          "descriptionHTML": "An array of strings to be displayed as a list of bullet points."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "message": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "message",
          "description": "The string to be displayed in the message region of the dialog. Newline and carriage return characters in the string result in the message being displayed as several lines of text. In BrightScript, to include a newline in a string, use chr(10). For example: message \u003d \"First line\" + chr(10) + \"Second line\"",
          "descriptionHTML": "\u003cp\u003eThe string to be displayed in the message region of the dialog. Newline and carriage return characters in the string result in the message being displayed as several lines of text. In BrightScript, to include a newline in a string, use chr(10). For example:\u003c/p\u003e\u003cp\u003e\u003ccode\u003emessage \u003d \"First line\" + chr(10) + \"Second line\" \u003c/code\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "dividerUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "dividerUri",
          "description": "Specifies a bitmap to be displayed as the divider between the title region and the remainder of the dialog. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed as the divider between the title region and the remainder of the dialog. \u003cspan\u003eUsually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "bulletTextColor": {
          "type": "color",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "bulletTextColor",
          "description": "When set, the color of the bullet point text",
          "descriptionHTML": "When set, the color of the bullet point text"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "wasClosed": {
          "type": "Event",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "wasClosed",
          "description": "Observe-Only Set when the dialog has been closed. The field is set when the dialog close field is set, when the Back or Home key has been pressed, when the Options key has been pressed if the optionsDialog field is set to true, and when the dialog is dismissed because another dialog was displayed.",
          "descriptionHTML": "\u003cstrong\u003eObserve-Only\u003c/strong\u003e \u003cbr\u003eSet when the dialog has been closed. The field is set when the dialog \u003ccode\u003eclose\u003c/code\u003e field is set, when the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e or \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eHome\u003c/strong\u003e\u003c/span\u003e key has been pressed, when the \u003cstrong\u003eOptions\u003c/strong\u003e key has been pressed if the \u003ccode\u003eoptionsDialog\u003c/code\u003e field is set to true, and when the dialog is dismissed because another dialog was displayed."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "backgroundUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "backgroundUri",
          "description": "Specifies the bitmap to be displayed as the dialog background. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap to be displayed as the dialog background. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        }
      },
      "name": "ProgressDialog",
      "description": "The ProgressDialog node class is a special type of Dialog node that includes the dialog title region and a spinning icon as the body of the dialog. The ProgressDialog node class uses a BusySpinner node to display the spinning icon.The message, bulleted text, graphic, and button regions of the dialog should all be empty. If those dialog regions are not empty, the layout of the dialog will likely not look correct.Not all Roku Player hardware supports arbitrary rotations. In particular, some hardware only supports 90 degree rotation increments. In those cases, the icon will step through 90 degree, 180 degree, 270 degree and back to 0 degree rotations, rather than spin smoothly.",
      "descriptionHTML": "The \u003cstrong\u003eProgressDialog\u003c/strong\u003e\u0026nbsp;node class is a special type of \u003cstrong\u003eDialog\u003c/strong\u003e node that includes the dialog title region and a spinning icon as the body of the dialog. The \u003cstrong\u003eProgressDialog\u003c/strong\u003e node class uses a \u003cstrong\u003eBusySpinner\u003c/strong\u003e node to display the spinning icon.The message, bulleted text, graphic, and button regions of the dialog should all be empty. If those dialog regions are not empty, the layout of the dialog will likely not look correct.\u003cac:rich-text-body\u003e\n Not all Roku Player hardware supports arbitrary rotations. In particular, some hardware only supports 90 degree rotation increments. In those cases, the icon will step through 90 degree, 180 degree, 270 degree and back to 0 degree rotations, rather than spin smoothly.\n\u003c/ac:rich-text-body\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ProgressDialog",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "title",
        "message",
        "messageColor",
        "messageFont",
        "bulletText",
        "bulletTextColor",
        "bulletTextFont",
        "buttons",
        "buttonGroup",
        "graphicUri",
        "buttonSelected",
        "buttonFocused",
        "focusButton",
        "optionsDialog",
        "backgroundUri",
        "iconUri",
        "dividerUri",
        "close",
        "wasClosed",
        "busySpinner"
      ],
      "documentationVersion": 18
    },
    "Button": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the button background bitmap file to display when the button has the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the button background bitmap file to display when the button has the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusedTextColor": {
          "type": "color",
          "defaultValue": "0x262626ff",
          "accessPermission": "READ_WRITE",
          "name": "focusedTextColor",
          "description": "Specifies the color of the button label when the button has the key focus.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the color of the button label when the button has the key focus.\u003c/span\u003e"
        },
        "focusedTextFont": {
          "type": "Font",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusedTextFont",
          "description": "Specifies the font of the button label when the button has the key focus",
          "descriptionHTML": "Specifies the font of the button label when the button has the key focus"
        },
        "showFocusFootprint": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "showFocusFootprint",
          "description": "Controls whether the focus \"footprint\" bitmap is displayed when the button does not have the key focus. Since the default value of the showFocusFootprint field is false, the \"footprint\" bitmap is not displayed by default.",
          "descriptionHTML": "Controls whether the focus \"footprint\" bitmap is displayed when the button does not have the key focus. Since the default value of the \u003ccode\u003eshowFocusFootprint\u003c/code\u003e field is \u003ccode\u003efalse\u003c/code\u003e, the \"footprint\" bitmap is not displayed by default."
        },
        "text": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "text",
          "description": "Specifies the text to be displayed as the button label",
          "descriptionHTML": "Specifies the text to be displayed as the button label"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "iconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "iconUri",
          "description": "Specifies a bitmap file for the button icon when the button does not have the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap file for the button icon when the button does not have the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "maxWidth": {
          "type": "float",
          "defaultValue": "32767",
          "accessPermission": "READ_WRITE",
          "name": "maxWidth",
          "description": "Specifies the maximum width of the button. The maxWidth field must be greater than or equal to the minWidth field.",
          "descriptionHTML": "Specifies the maximum width of the button. The \u003ccode\u003emaxWidth\u003c/code\u003e field must be greater than or equal to\u0026nbsp;the \u003ccode\u003eminWidth\u003c/code\u003e field."
        },
        "height": {
          "type": "float",
          "defaultValue": "64",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the button.",
          "descriptionHTML": "Specifies the height of the button."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "buttonSelected": {
          "type": "Event",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "buttonSelected",
          "description": "Observe-Only The buttonSelected field is set whenever the button is selected. The field should be used to call observer callback functions when the button is selected.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eObserve-Only\u003c/strong\u003e \u003cbr\u003eThe\u0026nbsp;\u003ccode\u003ebuttonSelected\u003c/code\u003e\u0026nbsp;field is set whenever the button is selected. The field should be used to call observer callback functions when the button is selected.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "minWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "minWidth",
          "description": "Specifies the minimum width of the button. The minWidth field must be less than or equal to the maxWidth field.",
          "descriptionHTML": "Specifies the minimum width of the button. The \u003ccode\u003eminWidth\u003c/code\u003e field must be less than or equal to the \u003ccode\u003emaxWidth\u003c/code\u003e field."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "textColor": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "textColor",
          "description": "Specifies the color of the button label when the button does not have the key focus.",
          "descriptionHTML": "Specifies the color of the button label when the button does not have the key focus."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the button focus \"footprint\" bitmap file to display when the button does not have key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. By default the \"footprint\" bitmap is not displayed when the button does not have the key focus. To display the background when the button is unfocused, the showFocusFootprint field must be set to true.",
          "descriptionHTML": "\u003cp\u003eSpecifies the button focus \"footprint\" bitmap file to display when the button does not have key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.\u003c/p\u003e\u003cp\u003eBy default the \"footprint\" bitmap is not displayed when the button does not have the key focus. To display the background when the button is unfocused, the \u003ccode\u003eshowFocusFootprint\u003c/code\u003e field must be set to \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "textFont": {
          "type": "Font",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "textFont",
          "description": "Specifies the font of the button label when the button does not have the key focus",
          "descriptionHTML": "Specifies the font of the button label when the button does not have the key focus"
        },
        "focusedIconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusedIconUri",
          "description": "Specifies a bitmap file for the button icon when the button has the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap file for the button icon when the button has the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "Button",
      "description": "The Button node is a simple widget that generates a buttonSelected event when the user selects it. The button can display a label and/or an icon, as well as a background image. Fields are provided to customize the label text and color depending on whether or not the button has the key focus. Similarly, the bitmaps used for the icon and background can be specified for both focused and unfocused button states.By default, the background of the button is only shown when the button has the key focus. Buttons are typically used in a ButtonGroup node that manages which button in the group will have the key focus when the ButtonGroup node receives the focus. When the ButtonGroup node has the focus, the button in the group that has the focus will display the focusBitmapUri bitmap as its background. When the ButtonGroup node does not have the focus, it remembers which button in the group had the focus and sets that button showFocusFootprint field to true, causing it to a render a \"footprint\" bitmap as a visual indicator that it will be the focused button when the ButtonGroup node receives the focus again. All other buttons in the ButtonGroup node do not display a background image.When a Button node is created that is not a child of a ButtonGroup node, typically the showFootprintfield field should be set to true, so that the button always displays a background image.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eButton\u003c/strong\u003e\u0026nbsp;node is a simple widget that generates a \u003ccode\u003ebuttonSelected\u003c/code\u003e event when the user selects it. The button can display a label and/or an icon, as well as a background image. Fields are provided to customize the label text and color depending on whether or not the button has the key focus. Similarly, the bitmaps used for the icon and background can be specified for both focused and unfocused button states.By default, the background of the button is only shown when the button has the key focus. Buttons are typically used in a \u003cstrong\u003eButtonGroup\u003c/strong\u003e node that manages which button in the group will have the key focus when the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node receives the focus. When the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node has the focus, the button in the group that has the focus will display the \u003ccode\u003efocusBitmapUri\u003c/code\u003e bitmap as its background. When the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node does not have the focus, it remembers which button in the group had the focus and sets that button \u003ccode\u003eshowFocusFootprint\u003c/code\u003e field to \u003ccode\u003etrue\u003c/code\u003e, causing it to a render a \"footprint\" bitmap as a visual indicator that it will be the focused button when the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node receives the focus again. All other buttons in the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node do not display a background image.When a \u003cstrong\u003eButton\u003c/strong\u003e node is created that is not a child of a \u003cstrong\u003eButtonGroup\u003c/strong\u003e node, typically the \u003ccode\u003eshowFootprintfield\u003c/code\u003e field should be set to \u003ccode\u003etrue\u003c/code\u003e, so that the button always displays a background image.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Button",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "text",
        "textColor",
        "focusedTextColor",
        "textFont",
        "focusedTextFont",
        "focusFootprintBitmapUri",
        "focusBitmapUri",
        "iconUri",
        "focusedIconUri",
        "minWidth",
        "maxWidth",
        "height",
        "showFocusFootprint",
        "buttonSelected"
      ],
      "documentationVersion": 23
    },
    "CheckList": {
      "parentName": "LabelList",
      "isAbstract": false,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position.\u003c/span\u003e"
        },
        "checkOnSelect": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "checkOnSelect",
          "description": "Controls whether or not pressing the remote control OK key causes the checkedState field to automatically toggle the checked state of the currently focused list item. By default, field value is set to true, but there are use cases where other behavior may be desired. In those cases, it is up to the developer to manage the checked state of the list items by setting the checkedState field to the desired index.",
          "descriptionHTML": "\u003cp\u003eControls whether or not pressing the remote control\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eOK\u003c/strong\u003e\u003c/span\u003e key causes the \u003ccode\u003echeckedState\u003c/code\u003e field to automatically toggle the checked state of the currently focused list item. By default, field value is set to true, but there are use cases where other behavior may be desired. In those cases, it is up to the developer to manage the checked state of the list items by setting the \u003ccode\u003echeckedState\u003c/code\u003e field to the desired index.\u003c/p\u003e"
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "focusedColor": {
          "type": "color",
          "defaultValue": "0x262626ff",
          "accessPermission": "READ_WRITE",
          "name": "focusedColor",
          "description": "Specifies the text color for focused list items",
          "descriptionHTML": "\u003cp\u003e\u003cspan\u003eSpecifies the text color for focused list items \u003c/span\u003e\u003c/p\u003e"
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Specifies whether or not the focus indicator bitmap is displayed",
          "descriptionHTML": "Specifies whether or not the focus indicator bitmap is displayed"
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "The second value of the vector specifies the vertical spacing between items in the list. The first value of the vector is ignored.",
          "descriptionHTML": "The second value of the vector specifies the vertical spacing between items in the list. The first value of the vector is ignored."
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "Specifies the bitmap file to use as a wrap divider, the visual separator between the last and first list items when the list wraps. In most cases, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use as a wrap divider, the visual separator between the last and first list items when the list wraps. \u003cspan\u003eIn most cases, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "Specifies the font for section divider labels",
          "descriptionHTML": "Specifies the font for section divider labels"
        },
        "checkedIconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "checkedIconUri",
          "description": "Specifies the checkbox icon to use for list items that are in the checked state when that list item does not the key focus. Typically, the icon will include the outline of a box with a checkmark indicator inside. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the checkbox icon to use for list items that are in the checked state when that list item does not the key focus. Typically, the icon will include the outline of a box with a checkmark indicator inside. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When a list item gains the key focus, set to the index of the focused item.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item gains the key focus, set to the index of the focused item.\u003c/span\u003e"
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "Specifies differing spaces between each grid column, to allow the spacing between columns to vary from column to column. This field is not used by lists. The specified values override the itemSpacing field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSpacing field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each grid column, to allow the\u0026nbsp;spacing between\u0026nbsp;columns to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of each item in the list",
          "descriptionHTML": "Specifies the width and height of each item in the list"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "Specifies the text color for section divider labels",
          "descriptionHTML": "Specifies the text color for section divider labels"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items",
          "descriptionHTML": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "textHorizAlign": {
          "type": "option string",
          "defaultValue": "left",
          "accessPermission": "READ_WRITE",
          "name": "textHorizAlign",
          "description": "Specifies the horizontal alignment of the text in the list item area specified by the itemSize field value (the text is always centered vertically in the list item area). The possible options are: Option Effect left Text is left-aligned right Text is right-aligned center Text is center-aligned",
          "descriptionHTML": "\u003cp\u003eSpecifies the horizontal alignment of the text in the list item area specified by the \u003ccode\u003eitemSize\u003c/code\u003e field value (the text is always centered vertically in the list item area). The possible options are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eleft\u003c/td\u003e\n   \u003ctd\u003eText is left-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eright\u003c/td\u003e\n   \u003ctd\u003eText is right-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ecenter\u003c/td\u003e\n   \u003ctd\u003eText is center-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "left": "Text is left-aligned",
            "center": "Text is center-aligned",
            "right": "Text is right-aligned"
          },
          "possibleValuesNames": [
            "left",
            "right",
            "center"
          ]
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list of items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect fixedFocusWrap Causes the focus indicator to float up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list, and the items will scroll up or down if there are items that were not visible. floatingFocus Causes the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float up and down.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list of items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float up and down.",
            "fixedFocusWrap": "Causes the focus indicator to float up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list, and the items will scroll up or down if there are items that were not visible."
          },
          "possibleValuesNames": [
            "fixedFocusWrap",
            "floatingFocus"
          ]
        },
        "focusedFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "focusedFont",
          "description": "Specifies the font for focused list items",
          "descriptionHTML": "\u003cspan\u003eSpecifies the font for focused list items\u003c/span\u003e"
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "sectionDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "Specifies the bitmap file to use as visual separator between sections of the list. The section dividers can include an icon and a label in addition to the section divider bitmap. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. For sections that do not contain an icon or a title, the bitmap for the wrap divider is used for the section dividers instead.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as visual separator between sections of the list. The section dividers can include an icon and a label in addition to the section divider bitmap. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. For sections that do not contain an icon or a title, the bitmap for the wrap divider is used for the section dividers instead.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "117",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width.",
          "descriptionHTML": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When a list item is selected, set to the index of the selected item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item is selected, set to the index of the selected item."
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "Specifies differing widths for each grid column, to allow the width of each column to vary from column to column. This field is not used by lists. The specified values override the itemSize field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSize field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing widths for each grid column, to allow the\u0026nbsp;width of each column to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "checkedState": {
          "type": "array of Boolean",
          "defaultValue": "all false",
          "accessPermission": "READ_WRITE",
          "name": "checkedState",
          "description": "Specifies the checked state of each item in the list. A value of true indicates the item is in the checked state. A value of false indicates that the item is in the unchecked state. When reading the value of the field, note that the field array will always include one value for each item in the list. When writing the value of the field, if the specified array includes fewer values than items in the list, the list items that are unspecified will remain in their current state. For example, if there are 10 items in the list and the field value is set to [ true, true ], items 0 and 1 will have their checked state set to true, and the checked state of the remaining items (items 3 to 9) will be unchanged.",
          "descriptionHTML": "\u003cp\u003eSpecifies the checked state of each item in the list. A value of true indicates the item is in the checked state. A value of false indicates that the item is in the unchecked state. When reading the value of the field, note that the field array will always include one value for each item in the list.\u003c/p\u003e\u003cp\u003eWhen writing the value of the field, if the specified array includes fewer values than items in the list, the list items that are unspecified will remain in their current state. For example, if there are 10 items in the list and the field value is set to \u003ccode\u003e[ true, true ]\u003c/code\u003e, items 0 and 1 will have their checked state set to true, and the checked state of the remaining items (items 3 to 9) will be unchanged.\u003c/p\u003e"
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "12",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows displayed. The actual number of rows may be more or less than the number of visible rows specified depending on the number of items in the list content.",
          "descriptionHTML": "Specifies the number of visible rows displayed. T\u003cspan\u003ehe actual number of rows may be more or less than the number of visible rows specified depending on the number of items in the list content. \u003c/span\u003e"
        },
        "color": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "color",
          "description": "Specifies the text color for unfocused list items",
          "descriptionHTML": "\u003cspan\u003eSpecifies the text color for unfocused list items\u003c/span\u003e"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "40",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "Specifies the height of the section dividers. The width of the section dividers is determined by the width of the list items as specified by the itemSize field width value.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the section dividers. \u003cspan\u003eThe width of the section dividers is determined by the width of the list items\u0026nbsp;as\u0026nbsp;specified by the\u0026nbsp;\u003ccode\u003eitemSize\u003c/code\u003e field width value. \u003c/span\u003e\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content for the list. See Data Bindings below for more details. If the data contains section markers, section dividers will be drawn between each section. These section dividers may contain an icon and/or a string. ",
          "descriptionHTML": "Specifies the content for the list. See \n\u003cac:link ac:anchor\u003d\"DataBindings\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eData Bindings\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below for more details.\u003cbr\u003eIf the data contains section markers, section dividers will be drawn between each section. These section dividers may contain an icon and/or a string.\u0026nbsp;"
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items.",
          "descriptionHTML": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items."
        },
        "uncheckedIconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "uncheckedIconUri",
          "description": "Specifies the checkbox icon to use for list items that are in the unchecked state when that list item does not have the key focus. Typically, the icon will include the outline of an empty box. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the checkbox icon to use for list items that are in the unchecked state when that list item does not have the key focus. Typically, the icon will include the outline of an empty box. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "focusedUncheckedIconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusedUncheckedIconUri",
          "description": "Specifies the checkbox icon to use for list items that are in the unchecked state when that list item has the key focus. Typically, the icon will include the outline of an empty box. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the checkbox icon to use for list items that are in the unchecked state when that list item has the key focus. Typically, the icon will include the outline of an empty box. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a ContentNode node for the grid. This field is not used by lists.",
          "descriptionHTML": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a \u003cstrong\u003eContentNode\u003c/strong\u003e node for the grid. This field is not used by lists."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "Specifies differing heights for each list or grid row, to allow the height of each row to vary from row to row. The specified values override the itemSize field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSize field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing heights for each list or grid row, to allow the height of each row to vary from row to row.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When a list item loses the key focus, set to the index of the unfocused item.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item loses the key focus, set to the index of the unfocused item.\u003c/span\u003e"
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "Specifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row. The specified values override the itemSpacing field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSpacing field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row.\u003c/p\u003e\u003cp\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/p\u003e"
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "Specifies the height of the wrap divider, the visual separator between the last and first list items when the list wraps. The bitmap for the wrap divider is scaled to this height. The width of the wrap divider is set to the width of the list items as specified by the itemSize field width value.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the wrap divider, the visual separator between the last and first list items when the list wraps. The\u0026nbsp;bitmap for the wrap divider\u0026nbsp;is scaled to this height. The width of the wrap divider is set to the width of the list items as specified by the \u003ccode\u003eitemSize\u003c/code\u003e field width value.\u003c/p\u003e"
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "10",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "If the ContentNode node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "focusedCheckedIconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusedCheckedIconUri",
          "description": "Specifies the checkbox icon to use for list items that are in the checked state when that list item has the key focus. Typically, the icon will include the outline of a box with a checkmark indicator inside. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the checkbox icon to use for list items that are in the checked state when that list item has the key focus. Typically, the icon will include the outline of a box with a checkmark indicator inside. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in a grid. This field is not used for lists.",
          "descriptionHTML": "Specifies the number of columns in a grid. This field is not used for lists."
        },
        "font": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "font",
          "description": "Specifies the font for unfocused list items",
          "descriptionHTML": "Specifies the font for unfocused list items"
        }
      },
      "name": "CheckList",
      "description": "The CheckList node class is a simple list class that displays a list of items, some of which include checkboxes that allow the user to select or unselect that item. Each item in the list displays a text string and an optional checkbox icon positioned to the left of the text string. If the checkbox is displayed, it is shown as either an empty box, or a box with a checkmark indicator inside, indicating whether the item is in the checked or unchecked state.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eCheckList\u003c/strong\u003e\u0026nbsp;node class is a simple list class that displays a list of items, some of which include checkboxes that allow the user to select or unselect that item. Each item in the list displays a text string and an optional checkbox icon positioned to the left of the text string. If the checkbox is displayed, it is shown as either an empty box, or a box with a checkmark indicator inside, indicating whether the item is in the checked or unchecked state.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/CheckList",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "numColumns",
        "focusColumn",
        "horizFocusAnimationStyle",
        "wrapDividerWidth",
        "fixedLayout",
        "numRenderPasses",
        "rowHeights",
        "columnWidths",
        "rowSpacings",
        "columnSpacings",
        "sectionDividerWidth",
        "content",
        "itemSize",
        "itemSpacing",
        "numRows",
        "textHorizAlign",
        "color",
        "focusedColor",
        "font",
        "focusedFont",
        "drawFocusFeedback",
        "drawFocusFeedbackOnTop",
        "vertFocusAnimationStyle",
        "focusRow",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "wrapDividerBitmapUri",
        "wrapDividerHeight",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem",
        "checkedState",
        "checkOnSelect",
        "checkedIconUri",
        "uncheckedIconUri",
        "focusedCheckedIconUri",
        "focusedUncheckedIconUri"
      ],
      "documentationVersion": 18
    },
    "Dialog": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "bulletTextFont": {
          "type": "Font",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "bulletTextFont",
          "description": "When set, the font of the bullet point text",
          "descriptionHTML": "When set, the font of the bullet point text"
        },
        "title": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "title",
          "description": "Title of the dialog box",
          "descriptionHTML": "Title of the dialog box"
        },
        "buttonFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonFocused",
          "description": "Read-Only Set to the index of the focused button whenever a button in the group receives the key focus.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eSet to the index of the focused button whenever a button in the group receives the key focus.\u003c/span\u003e"
        },
        "messageColor": {
          "type": "color",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "messageColor",
          "description": "When set, the color of the message text",
          "descriptionHTML": "When set, the color of the message text"
        },
        "messageFont": {
          "type": "Font",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "messageFont",
          "description": "When set, the font of the message text",
          "descriptionHTML": "When set, the font of the message text"
        },
        "graphicUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "graphicUri",
          "description": "Specifies a bitmap to be displayed in the dialog. The bitmap is displayed below the bullet text region and above the buttons. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed in the dialog. The bitmap is displayed below the\u0026nbsp;bullet text\u0026nbsp;region and above the buttons. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "close": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "WRITE_ONLY",
          "name": "close",
          "description": "Write-Only Causes the dialog to be dismissed. The dialog is dismissed whenever the close field is set, regardless of whether the field is set to true or false.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eCauses the dialog to be dismissed. The dialog is dismissed whenever the \u003ccode\u003eclose\u003c/code\u003e field is set, regardless of whether the field is set to \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e."
        },
        "iconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "iconUri",
          "description": "Specifies a bitmap to be displayed as a small icon next to the dialog title. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed as a small icon next to the dialog title. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "focusButton": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "focusButton",
          "description": "Write-Only  Causes the button with the specified index to receive the focus when the ButtonGroup node has the key focus. Note that if the ButtonGroup node does not have the key focus when the focusButton field is set, the specified button will display the focus footprint as its background.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eWrite-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003eCauses the button with the specified index to receive the focus when the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node has the key focus. Note that if the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node does not have the key focus when the \u003ccode\u003efocusButton\u003c/code\u003e field is set, the specified button will display the focus footprint as its background.\u003c/span\u003e"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "buttons": {
          "type": "array of string",
          "defaultValue": "[ ]",
          "accessPermission": "WRITE_ONLY",
          "name": "buttons",
          "description": "Write-Only Allows a set of Button nodes to be easily created by providing an array of Button labels. Each string in the array will result in a Button node to be added to the ButtonGroup, using the string as the Button label.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eAllows a set of \u003cstrong\u003eButton\u003c/strong\u003e nodes to be easily created by providing an array of \u003cstrong\u003eButton\u003c/strong\u003e labels. Each string in the array will result in a \u003cstrong\u003eButton\u003c/strong\u003e node to be added to the \u003cstrong\u003eButtonGroup\u003c/strong\u003e, using the string as the \u003cstrong\u003eButton\u003c/strong\u003e label.\u003c/span\u003e"
        },
        "buttonGroup": {
          "type": "ButtonGroup",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "buttonGroup",
          "description": "The dialog internal ButtonGroup node. This allows the appearance attributes of all the Button nodes in the dialog to be easily modified. Since the ButtonGroup node class is derived from the LayoutGroup node class, additional non-Button node children can also be added.",
          "descriptionHTML": "The dialog internal \u003cstrong\u003eButtonGroup\u003c/strong\u003e node. This allows the appearance attributes of all the \u003cstrong\u003eButton\u003c/strong\u003e nodes in the dialog to be easily modified. Since the\u0026nbsp;\u003cstrong\u003eButtonGroup\u003c/strong\u003e node class is derived from the\u0026nbsp;\u003cstrong\u003eLayoutGroup\u003c/strong\u003e node class, additional non-\u003cstrong\u003eButton\u003c/strong\u003e node children can also be added."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "buttonSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonSelected",
          "description": "Read-Only Set to the index of the selected button whenever the user selects a button in the group.",
          "descriptionHTML": "\u003cspan\u003e \u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003c/span\u003e \u003cbr\u003eSet to the index of the selected button whenever the user selects a button in the group.\u003c/span\u003e"
        },
        "optionsDialog": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "optionsDialog",
          "description": "If set to true, the dialog is automatically dismissed when the Options key is pressed.",
          "descriptionHTML": "If set to true, the dialog is automatically dismissed when the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eOptions\u003c/strong\u003e\u003c/span\u003e key is pressed."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "bulletText": {
          "type": "array of string",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "bulletText",
          "description": "An array of strings to be displayed as a list of bullet points.",
          "descriptionHTML": "An array of strings to be displayed as a list of bullet points."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "message": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "message",
          "description": "The string to be displayed in the message region of the dialog. Newline and carriage return characters in the string result in the message being displayed as several lines of text. In BrightScript, to include a newline in a string, use chr(10). For example: message \u003d \"First line\" + chr(10) + \"Second line\"",
          "descriptionHTML": "\u003cp\u003eThe string to be displayed in the message region of the dialog. Newline and carriage return characters in the string result in the message being displayed as several lines of text. In BrightScript, to include a newline in a string, use chr(10). For example:\u003c/p\u003e\u003cp\u003e\u003ccode\u003emessage \u003d \"First line\" + chr(10) + \"Second line\" \u003c/code\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "dividerUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "dividerUri",
          "description": "Specifies a bitmap to be displayed as the divider between the title region and the remainder of the dialog. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed as the divider between the title region and the remainder of the dialog. \u003cspan\u003eUsually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "bulletTextColor": {
          "type": "color",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "bulletTextColor",
          "description": "When set, the color of the bullet point text",
          "descriptionHTML": "When set, the color of the bullet point text"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "wasClosed": {
          "type": "Event",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "wasClosed",
          "description": "Observe-Only Set when the dialog has been closed. The field is set when the dialog close field is set, when the Back or Home key has been pressed, when the Options key has been pressed if the optionsDialog field is set to true, and when the dialog is dismissed because another dialog was displayed.",
          "descriptionHTML": "\u003cstrong\u003eObserve-Only\u003c/strong\u003e \u003cbr\u003eSet when the dialog has been closed. The field is set when the dialog \u003ccode\u003eclose\u003c/code\u003e field is set, when the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e or \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eHome\u003c/strong\u003e\u003c/span\u003e key has been pressed, when the \u003cstrong\u003eOptions\u003c/strong\u003e key has been pressed if the \u003ccode\u003eoptionsDialog\u003c/code\u003e field is set to true, and when the dialog is dismissed because another dialog was displayed."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "backgroundUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "backgroundUri",
          "description": "Specifies the bitmap to be displayed as the dialog background. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap to be displayed as the dialog background. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        }
      },
      "name": "Dialog",
      "description": "The Dialog node class defines a modal pop-up dialog used to present the user with information requiring their immediate attention.Setting the dialog field of the current Scene node to a Dialog node causes the dialog to be displayed.The Dialog node is configured to have up to five regions: the title, message, bullet text, graphic, and button regions. All of these are optional except for the title.The title region consists of a an icon and a title label, along with a horizontal divider that visually separates the title from the rest of the dialog.The message region consist of a string that is displayed below the title divider.The bullet  text region contains a set of zero or more bullet points. It is displayed below the message.The graphic region consists of a single bitmap displayed center-aligned below the message and bullet text and above the button region.The button region contains a ButtonGroup node that contains zero or more Button nodes, arranged vertically.Dialogs are modal and intercept all key events except pressing the Home key. Dialogs are closed automatically when the user presses the Home key or the Back key. If the optionsDialog field is set to true, pressing the Options key also closes the dialog.Only a single dialog may appear at any time. If a second dialog is shown, the previous dialog is closed automatically.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e\u0026nbsp;node class defines a modal pop-up dialog used to present the user with information requiring their immediate attention.Setting the \u003ccode\u003edialog\u003c/code\u003e field of the current \u003cstrong\u003eScene\u003c/strong\u003e node to a \u003cstrong\u003eDialog\u003c/strong\u003e node causes the dialog to be displayed.The \u003cstrong\u003eDialog\u003c/strong\u003e node is configured to have up to five regions: the title, message, bullet text, graphic, and button regions. All of these are optional except for the title.The title region consists of a an icon and a title label, along with a horizontal divider that visually separates the title from the rest of the dialog.The message region consist of a string that is displayed below the title divider.The bullet\u0026nbsp; text region contains a set of zero or more bullet points. It is displayed below the message.The graphic region consists of a single bitmap displayed center-aligned below the message and\u0026nbsp;bullet text\u0026nbsp;and above the button region.The button region contains a \u003cstrong\u003eButtonGroup\u003c/strong\u003e node that contains zero or more \u003cstrong\u003eButton\u003c/strong\u003e nodes, arranged vertically.Dialogs are modal and intercept all key events except pressing the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eHome\u003c/strong\u003e\u003c/span\u003e key. Dialogs are closed automatically when the user presses the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eHome\u003c/strong\u003e\u003c/span\u003e key or the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e key. If the \u003ccode\u003eoptionsDialog\u003c/code\u003e field is set to true, pressing the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eOptions\u003c/strong\u003e\u003c/span\u003e key also closes the dialog.Only a single dialog may appear at any time. If a second dialog is shown, the previous dialog is closed automatically.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Dialog",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "title",
        "message",
        "messageColor",
        "messageFont",
        "bulletText",
        "bulletTextColor",
        "bulletTextFont",
        "buttons",
        "buttonGroup",
        "graphicUri",
        "buttonSelected",
        "buttonFocused",
        "focusButton",
        "optionsDialog",
        "backgroundUri",
        "iconUri",
        "dividerUri",
        "close",
        "wasClosed"
      ],
      "documentationVersion": 16
    },
    "RadioButtonList": {
      "parentName": "LabelList",
      "isAbstract": false,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position.\u003c/span\u003e"
        },
        "checkOnSelect": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "checkOnSelect",
          "description": "Controls whether or not pressing the remote control OK key causes the checkedItem field value to be automatically updated to the index of the currently focused list item. By default, the field value is set to true, but there are use cases where other behavior may be desired. In those cases, it is up to the developer to manage the currently selected radio button by setting the checkedItem field value to the desired index.",
          "descriptionHTML": "\u003cp\u003eControls whether or not pressing the remote control\u0026nbsp;\u003cstrong\u003e\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003eOK\u003c/span\u003e\u003c/strong\u003e key causes the \u003ccode\u003echeckedItem\u003c/code\u003e field value to be automatically updated to the index of the currently focused list item. By default, the field value is set to true, but there are use cases where other behavior may be desired. In those cases, it is up to the developer to manage the currently selected radio button by setting the \u003ccode\u003echeckedItem\u003c/code\u003e field value to the desired index.\u003c/p\u003e"
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "focusedColor": {
          "type": "color",
          "defaultValue": "0x262626ff",
          "accessPermission": "READ_WRITE",
          "name": "focusedColor",
          "description": "Specifies the text color for focused list items",
          "descriptionHTML": "\u003cp\u003e\u003cspan\u003eSpecifies the text color for focused list items \u003c/span\u003e\u003c/p\u003e"
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Specifies whether or not the focus indicator bitmap is displayed",
          "descriptionHTML": "Specifies whether or not the focus indicator bitmap is displayed"
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "The second value of the vector specifies the vertical spacing between items in the list. The first value of the vector is ignored.",
          "descriptionHTML": "The second value of the vector specifies the vertical spacing between items in the list. The first value of the vector is ignored."
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "Specifies the bitmap file to use as a wrap divider, the visual separator between the last and first list items when the list wraps. In most cases, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use as a wrap divider, the visual separator between the last and first list items when the list wraps. \u003cspan\u003eIn most cases, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "Specifies the font for section divider labels",
          "descriptionHTML": "Specifies the font for section divider labels"
        },
        "checkedIconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "checkedIconUri",
          "description": "Specifies the check mark icon to use for the currently selected radio button list item when that list item does not have the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the check mark icon to use for the currently selected radio button list item when that list item does not have the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When a list item gains the key focus, set to the index of the focused item.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item gains the key focus, set to the index of the focused item.\u003c/span\u003e"
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "Specifies differing spaces between each grid column, to allow the spacing between columns to vary from column to column. This field is not used by lists. The specified values override the itemSpacing field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSpacing field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each grid column, to allow the\u0026nbsp;spacing between\u0026nbsp;columns to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of each item in the list",
          "descriptionHTML": "Specifies the width and height of each item in the list"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "Specifies the text color for section divider labels",
          "descriptionHTML": "Specifies the text color for section divider labels"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items",
          "descriptionHTML": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "textHorizAlign": {
          "type": "option string",
          "defaultValue": "left",
          "accessPermission": "READ_WRITE",
          "name": "textHorizAlign",
          "description": "Specifies the horizontal alignment of the text in the list item area specified by the itemSize field value (the text is always centered vertically in the list item area). The possible options are: Option Effect left Text is left-aligned right Text is right-aligned center Text is center-aligned",
          "descriptionHTML": "\u003cp\u003eSpecifies the horizontal alignment of the text in the list item area specified by the \u003ccode\u003eitemSize\u003c/code\u003e field value (the text is always centered vertically in the list item area). The possible options are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eleft\u003c/td\u003e\n   \u003ctd\u003eText is left-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eright\u003c/td\u003e\n   \u003ctd\u003eText is right-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ecenter\u003c/td\u003e\n   \u003ctd\u003eText is center-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "left": "Text is left-aligned",
            "center": "Text is center-aligned",
            "right": "Text is right-aligned"
          },
          "possibleValuesNames": [
            "left",
            "right",
            "center"
          ]
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list of items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect fixedFocusWrap Causes the focus indicator to float up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list, and the items will scroll up or down if there are items that were not visible. floatingFocus Causes the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float up and down.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list of items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float up and down.",
            "fixedFocusWrap": "Causes the focus indicator to float up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list, and the items will scroll up or down if there are items that were not visible."
          },
          "possibleValuesNames": [
            "fixedFocusWrap",
            "floatingFocus"
          ]
        },
        "focusedFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "focusedFont",
          "description": "Specifies the font for focused list items",
          "descriptionHTML": "\u003cspan\u003eSpecifies the font for focused list items\u003c/span\u003e"
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "sectionDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "Specifies the bitmap file to use as visual separator between sections of the list. The section dividers can include an icon and a label in addition to the section divider bitmap. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. For sections that do not contain an icon or a title, the bitmap for the wrap divider is used for the section dividers instead.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as visual separator between sections of the list. The section dividers can include an icon and a label in addition to the section divider bitmap. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. For sections that do not contain an icon or a title, the bitmap for the wrap divider is used for the section dividers instead.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "117",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width.",
          "descriptionHTML": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When a list item is selected, set to the index of the selected item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item is selected, set to the index of the selected item."
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "Specifies differing widths for each grid column, to allow the width of each column to vary from column to column. This field is not used by lists. The specified values override the itemSize field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSize field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing widths for each grid column, to allow the\u0026nbsp;width of each column to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "12",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows displayed. The actual number of rows may be more or less than the number of visible rows specified depending on the number of items in the list content.",
          "descriptionHTML": "Specifies the number of visible rows displayed. T\u003cspan\u003ehe actual number of rows may be more or less than the number of visible rows specified depending on the number of items in the list content. \u003c/span\u003e"
        },
        "color": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "color",
          "description": "Specifies the text color for unfocused list items",
          "descriptionHTML": "\u003cspan\u003eSpecifies the text color for unfocused list items\u003c/span\u003e"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "40",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "Specifies the height of the section dividers. The width of the section dividers is determined by the width of the list items as specified by the itemSize field width value.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the section dividers. \u003cspan\u003eThe width of the section dividers is determined by the width of the list items\u0026nbsp;as\u0026nbsp;specified by the\u0026nbsp;\u003ccode\u003eitemSize\u003c/code\u003e field width value. \u003c/span\u003e\u003c/p\u003e"
        },
        "checkedItem": {
          "type": "integer",
          "defaultValue": "-1",
          "accessPermission": "READ_WRITE",
          "name": "checkedItem",
          "description": "Specifies the index of the currently selected item in the list. The initial default value of -1 indicates that no radio button is currently selected. Setting the field changes the currently selected radio button list item to match the specified index.",
          "descriptionHTML": "\u003cp\u003eSpecifies the index of the currently selected item in the list. The initial default value of -1 indicates that no radio button is currently selected. Setting the field changes the currently selected radio button list item to match the specified index.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content for the list. See Data Bindings below for more details. If the data contains section markers, section dividers will be drawn between each section. These section dividers may contain an icon and/or a string. ",
          "descriptionHTML": "Specifies the content for the list. See \n\u003cac:link ac:anchor\u003d\"DataBindings\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eData Bindings\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below for more details.\u003cbr\u003eIf the data contains section markers, section dividers will be drawn between each section. These section dividers may contain an icon and/or a string.\u0026nbsp;"
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items.",
          "descriptionHTML": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items."
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a ContentNode node for the grid. This field is not used by lists.",
          "descriptionHTML": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a \u003cstrong\u003eContentNode\u003c/strong\u003e node for the grid. This field is not used by lists."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "Specifies differing heights for each list or grid row, to allow the height of each row to vary from row to row. The specified values override the itemSize field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSize field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing heights for each list or grid row, to allow the height of each row to vary from row to row.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When a list item loses the key focus, set to the index of the unfocused item.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item loses the key focus, set to the index of the unfocused item.\u003c/span\u003e"
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "Specifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row. The specified values override the itemSpacing field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSpacing field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row.\u003c/p\u003e\u003cp\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/p\u003e"
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "Specifies the height of the wrap divider, the visual separator between the last and first list items when the list wraps. The bitmap for the wrap divider is scaled to this height. The width of the wrap divider is set to the width of the list items as specified by the itemSize field width value.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the wrap divider, the visual separator between the last and first list items when the list wraps. The\u0026nbsp;bitmap for the wrap divider\u0026nbsp;is scaled to this height. The width of the wrap divider is set to the width of the list items as specified by the \u003ccode\u003eitemSize\u003c/code\u003e field width value.\u003c/p\u003e"
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "10",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "If the ContentNode node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "focusedCheckedIconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusedCheckedIconUri",
          "description": "Specifies the check mark icon to use for the currently selected radio button list item when that list item has the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the check mark icon to use for the currently selected radio button list item when that list item has the key focus. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in a grid. This field is not used for lists.",
          "descriptionHTML": "Specifies the number of columns in a grid. This field is not used for lists."
        },
        "font": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "font",
          "description": "Specifies the font for unfocused list items",
          "descriptionHTML": "Specifies the font for unfocused list items"
        }
      },
      "name": "RadioButtonList",
      "description": "The RadioButtonList node class is a simple list class that can be used to display a list of mutually exclusive radio buttons. Each item in the list displays a text string and an optional check mark icon positioned to the left of the text string that indicates which of the radio buttons is currently selected.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eRadioButtonList\u003c/strong\u003e\u0026nbsp;node class is a simple list class that can be used to display a list of mutually exclusive radio buttons. Each item in the list displays a text string and an optional check mark icon positioned to the left of the text string that indicates which of the radio buttons is currently selected.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/RadioButtonList",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "numColumns",
        "focusColumn",
        "horizFocusAnimationStyle",
        "wrapDividerWidth",
        "fixedLayout",
        "numRenderPasses",
        "rowHeights",
        "columnWidths",
        "rowSpacings",
        "columnSpacings",
        "sectionDividerWidth",
        "content",
        "itemSize",
        "itemSpacing",
        "numRows",
        "textHorizAlign",
        "color",
        "focusedColor",
        "font",
        "focusedFont",
        "drawFocusFeedback",
        "drawFocusFeedbackOnTop",
        "vertFocusAnimationStyle",
        "focusRow",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "wrapDividerBitmapUri",
        "wrapDividerHeight",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem",
        "checkedItem",
        "checkOnSelect",
        "checkedIconUri",
        "focusedCheckedIconUri"
      ],
      "documentationVersion": 14
    },
    "ColorFieldInterpolator": {
      "parentName": "Node",
      "isAbstract": false,
      "fields": {
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "keyValue": {
          "type": "array of colors",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "keyValue",
          "description": "Specifies the key values for the interpolator keyframes. Each value in the keyValue field array corresponds to a value in the key field array. Behavior is undefined if the number of values in the key field does not match the number of values in the keyValue field.",
          "descriptionHTML": "\u003cp\u003eSpecifies the key values for the interpolator keyframes. Each value in the \u003ccode\u003ekeyValue\u003c/code\u003e field array corresponds to a value in the \u003ccode\u003ekey\u003c/code\u003e field array. Behavior is undefined if the number of values in the \u003ccode\u003ekey\u003c/code\u003e field does not match the number of values in the \u003ccode\u003ekeyValue\u003c/code\u003e field.\u003c/p\u003e"
        },
        "fieldToInterp": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "fieldToInterp",
          "description": "Specifies the field to interpolate. This generally refers to the field on a scene graph node that contains the color to animate, such as testRectangle.color field in the example below.",
          "descriptionHTML": "Specifies the field to interpolate. This generally refers to the field on a scene graph node that contains the color to animate, such as testRectangle.color field in the example below."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "key": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "key",
          "description": "Specifies the key fractions for the interpolator keyframes. Each key fraction should be a unique value from 0 to 1 indicating the fraction of the animation where the keyValue field value should occur. Behavior is undefined if the number of values in the key field does not match the number of values in the keyValue field.",
          "descriptionHTML": "\u003cp\u003eSpecifies the key fractions for the interpolator keyframes. Each key fraction should be a unique value from 0 to 1 indicating the fraction of the animation where the \u003ccode\u003ekeyValue\u003c/code\u003e field value should occur. Behavior is undefined if the number of values in the \u003ccode\u003ekey\u003c/code\u003e field does not match the number of values in the \u003ccode\u003ekeyValue\u003c/code\u003e field.\u003c/p\u003e"
        },
        "fraction": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "fraction",
          "description": "Specifies the fraction to be used to compute a value for the field.",
          "descriptionHTML": "Specifies the\u0026nbsp;fraction to be used to compute a value for the field."
        }
      },
      "name": "ColorFieldInterpolator",
      "description": "The ColorFieldInterpolator node class specifies a keyframe animation sequence to be applied to the color field of a node (such as the color field of a Label node).All field interpolators include a set of key/keyValue field pairs that define a keyframe of the animation. Field interpolators are generally used as children of an Animation node. As the animation progresses, it sets the fraction field of its field interpolators to a value between 0 and 1, indicating the fraction of the animation progress. The keyframe fields of the interpolator are key, the percentage where the keyframe should occur, and keyValue, the value that the field should have at that fraction of the animation.For example, if a ColorFieldInterpolator node had three keyframes:0.0, 0xFF0000FF (red) 0.4, 0x00FF00FF (green) 1.0, 0x0000FFFF (blue)When the interpolator fraction field value was 0.0 (that is, 0%), the color field value would be set to red. When the fraction field value was 0.4 (that is, 40%), the color field value would be set to green. When the fraction field value was 1.0 (that is, 100%), the color field value would be set to blue.For values of the fraction field between 0.0 and 0.4 (such as 0.2 or 20%), the field value is determined by linearly interpolating the keyValue field values for the first two keyframes. In this case, since the key of 0.2 is halfway between the key at 0.0 and the key at 0.4, the field would be set to a color halfway between red and green. Similarly, when the fraction field value is between the second and third keys (that is, between 0.4 and 1.0), the field value is determined by linearly interpolating the keyValue field values of the second and third keyframes.If the first keyframe has a key field fraction value greater than zero, then the field value is equal to the keyValue field value of the first keyframe until the fraction field value reaches the first keyframe key field fraction value. Similarly, if the last keyframe has a key field fraction value less than one, the color field value is set to the keyValue field value of the last keyframe, from when the fraction field value equals the last keyframe key field fraction value percentage, and will not change as the fraction field value increases from that value to 1.0.The ColorFieldInterpolator node class works in the HSV color space. Doing the interpolation in the HSV color space produces the most intuitive, visually pleasing results when animating color values.Note that while linear interpolation is used to compute the keyValue field values for fraction field values between successive keys, non-linear easing functions may be applied to the fraction field values computed by the Animation node, so the overall animation may vary in speed. ",
      "descriptionHTML": "The \u003cstrong\u003eColorFieldInterpolator\u003c/strong\u003e node class specifies a keyframe animation sequence to be applied to the \u003ccode\u003ecolor\u003c/code\u003e field of a node (such as\u0026nbsp;the \u003ccode\u003ecolor\u003c/code\u003e field of a \u003cstrong\u003eLabel\u003c/strong\u003e node).All field interpolators include a set of \u003ccode\u003ekey\u003c/code\u003e/\u003ccode\u003ekeyValue\u003c/code\u003e field pairs that define a keyframe of the animation. Field interpolators are generally used as children of an \u003cstrong\u003eAnimation\u003c/strong\u003e node. As the animation progresses, it sets the \u003ccode\u003efraction\u003c/code\u003e field of its field interpolators to a value between 0 and 1, indicating the fraction of the animation progress. The keyframe fields of the interpolator are \u003ccode\u003ekey\u003c/code\u003e, the percentage where the keyframe should occur, and \u003ccode\u003ekeyValue\u003c/code\u003e, the value that the field should have at that fraction of the animation.For example, if a \u003cstrong\u003eColorFieldInterpolator\u003c/strong\u003e node had three keyframes:\u003cli\u003e0.0, 0xFF0000FF (red)\u003c/li\u003e\n\u003cli\u003e0.4, 0x00FF00FF (green)\u003c/li\u003e\n\u003cli\u003e1.0, 0x0000FFFF (blue)\u003c/li\u003eWhen the interpolator \u003ccode\u003efraction\u003c/code\u003e field value was 0.0 (that is,\u0026nbsp;0%), the \u003ccode\u003ecolor\u003c/code\u003e field value would be set to red. When the\u0026nbsp;\u003ccode\u003efraction\u003c/code\u003e field value was 0.4 (that is,\u0026nbsp;40%), the \u003ccode\u003ecolor\u003c/code\u003e field value would be set to green. When the\u0026nbsp;\u003ccode\u003efraction\u003c/code\u003e field value was 1.0 (that is,\u0026nbsp;100%), the \u003ccode\u003ecolor\u003c/code\u003e field value would be set to blue.For values of the\u0026nbsp;\u003ccode\u003efraction\u003c/code\u003e field between 0.0 and 0.4 (such as\u0026nbsp;0.2 or 20%), the field value is determined by linearly interpolating the \u003ccode\u003ekeyValue\u003c/code\u003e field values for the first two keyframes. In this case, since the key of 0.2 is halfway between the key at 0.0 and the key at 0.4, the field would be set to a color halfway between red and green. Similarly, when the \u003ccode\u003efraction\u003c/code\u003e field value is between the second and third keys (that is,\u0026nbsp;between 0.4 and 1.0), the field value is determined by linearly interpolating the \u003ccode\u003ekeyValue\u003c/code\u003e field values of the second and third keyframes.If the first keyframe has a \u003ccode\u003ekey\u003c/code\u003e field fraction value greater than zero, then the field value is equal to the \u003ccode\u003ekeyValue\u003c/code\u003e field value of the first keyframe until the\u0026nbsp;\u003ccode\u003efraction\u003c/code\u003e field value reaches the first keyframe \u003ccode\u003ekey\u003c/code\u003e field fraction value. Similarly, if the last keyframe has a \u003ccode\u003ekey\u003c/code\u003e field fraction value less than one, the \u003ccode\u003ecolor\u003c/code\u003e field value is set to the \u003ccode\u003ekeyValue\u003c/code\u003e field value of the last keyframe, from when the \u003ccode\u003efraction\u003c/code\u003e field value equals the last keyframe key field \u003ccode\u003efraction\u003c/code\u003e value percentage, and will not change as the \u003ccode\u003efraction\u003c/code\u003e field value increases from that value to 1.0.The ColorFieldInterpolator node class works in the HSV color space. Doing the interpolation in the HSV color space produces the most intuitive, visually pleasing results when animating color values.Note that while linear interpolation is used to compute the \u003ccode\u003ekeyValue\u003c/code\u003e field values for \u003ccode\u003efraction\u003c/code\u003e field values between successive keys, non-linear easing functions may be applied to the \u003ccode\u003efraction\u003c/code\u003e field values computed by the \u003cstrong\u003eAnimation\u003c/strong\u003e node, so the overall animation may vary in speed.\u0026nbsp;",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ColorFieldInterpolator",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "fieldToInterp",
        "key",
        "keyValue",
        "fraction"
      ],
      "documentationVersion": 16
    },
    "PinPad": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "pinDisplayTextColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "pinDisplayTextColor",
          "description": "Specifies the color of the numbers displayed in the pin display boxes",
          "descriptionHTML": "Specifies the color of the numbers displayed in the pin display boxes"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the URI of an image file to be loaded to replace the keyboard focus indicator. This should be a 9-patch image so that it can be stretched to the appropriate size for the double width keys.",
          "descriptionHTML": "Specifies the URI of an image file to be loaded to replace the keyboard focus indicator. This should be a 9-patch image so that it can be stretched to the appropriate size for the double width keys."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "focusedKeyColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "focusedKeyColor",
          "description": "Specifies the color of the key labels and icons when the keyboard has the focus",
          "descriptionHTML": "Specifies the color of the key labels and icons when the keyboard has the focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "pinDisplayBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "pinDisplayBitmapUri",
          "description": "Specifed the URI of an image file to be loaded to replace the default box drawn underneath each entered digit in the pin display. This should be a 9-patch image so that it can be stretched to appropriate size depending on the pinLength field.",
          "descriptionHTML": "Specifed the URI of an image file to be loaded to replace the default box drawn underneath each entered digit in the pin display. This should be a 9-patch image so that it can be stretched to appropriate size depending on the \u003ccode\u003epinLength\u003c/code\u003e field."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "pin": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "pin",
          "description": "Contains the string of numbers that have been entered.",
          "descriptionHTML": "Contains the string of numbers that have been entered."
        },
        "keyColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "keyColor",
          "description": "Specifies the color of the key labels and icons when the keyboard does not have the focus",
          "descriptionHTML": "Specifies the color of the key labels and icons when the keyboard does not have the focus"
        },
        "pinLength": {
          "type": "integer",
          "defaultValue": "4",
          "accessPermission": "READ_WRITE",
          "name": "pinLength",
          "description": "Contains the maximum number of digits that can be entered",
          "descriptionHTML": "Contains the maximum number of digits that can be entered"
        },
        "keyboardBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "keyboardBitmapUri",
          "description": "Specifies the URI of an image file to be loaded to replace the default keyboard image drawn underneath the numeric keys and icons. Note that this image must be carefully designed so that the key positions match the default image. Template images for SD, HD and FHD resolutions are provided below.",
          "descriptionHTML": "\u003cp\u003eSpecifies the URI of an image file to be loaded to replace the default keyboard image drawn underneath the numeric keys and icons.\u003c/p\u003e\u003cp\u003eNote that this image must be carefully designed so that the key positions match the default image. Template images for SD, HD and FHD resolutions are provided below.\u003c/p\u003e"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "secureMode": {
          "type": "boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "secureMode",
          "description": "When set to true, each digit entered is displayed briefly, then replaced with an asterisk. When false, the entered digits always remain visible.",
          "descriptionHTML": "When set to true, each digit entered is displayed briefly, then replaced with an asterisk. When false, the entered digits always remain visible."
        },
        "showPinDisplay": {
          "type": "boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "showPinDisplay",
          "description": "Specifies whether or not the pin display that shows the entered digits is visible. In most cases, it is desirable to display the entered digits so that the user can see the string as it is entered. In some cases though, you might want to only show the keyboard part of the PinPad node. In those cases, the pin field of the node will still contain the string entered by the user, so that it can displayed in some different manner.",
          "descriptionHTML": "\u003cp\u003eSpecifies whether or not the pin display that shows the entered digits is visible. In most cases, it is desirable to display the entered digits so that the user can see the string as it is entered.\u003c/p\u003e\u003cp\u003eIn some cases though, you might want to only show the keyboard part of the \u003cstrong\u003ePinPad\u003c/strong\u003e node. In those cases, the \u003cspan style\u003d\"font-family: monospace;\"\u003epin\u003c/span\u003e field of the node will still contain the string entered by the user, so that it can displayed in some different manner.\u003c/p\u003e"
        }
      },
      "name": "PinPad",
      "description": "The PinPad node is a simple widget that allows you to enter a fixed length numeric string. The string that is entered is displayed in a set of boxes above the PinPad node keyboard, with each box displaying a single numeral of the entered string.The PinPad node must have the key focus in order to work properly.The default appearance of the PinPad node is very transparent, allowing the node to pick up most of its color from what is rendered underneath it. The appearance can be customized by changing the keyboardBitmapUri and other fields.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003ePinPad\u003c/strong\u003e\u0026nbsp;node is a simple widget that allows you to enter a fixed length numeric string. The string that is entered is displayed in a set of boxes above the \u003cstrong\u003ePinPad\u003c/strong\u003e node keyboard, with each box displaying a single numeral of the entered string.The \u003cstrong\u003ePinPad\u003c/strong\u003e\u0026nbsp;node must have the key focus in order to work properly.The default appearance of the\u0026nbsp;\u003cstrong\u003ePinPad\u003c/strong\u003e\u0026nbsp;node is very transparent, allowing the node to pick up most of its color from what is rendered underneath it. The appearance can be customized by changing the \u003ccode\u003ekeyboardBitmapUri\u003c/code\u003e and other fields.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/PinPad",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "pin",
        "pinLength",
        "secureMode",
        "keyColor",
        "focusedKeyColor",
        "pinDisplayTextColor",
        "keyboardBitmapUri",
        "pinDisplayBitmapUri",
        "focusBitmapUri",
        "showPinDisplay"
      ],
      "documentationVersion": 17
    },
    "RowList": {
      "parentName": "ArrayGrid",
      "isAbstract": false,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, causes the list to quickly scroll so that the specified row moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e\u003cbr\u003eWhen set to a valid item index, causes the list to quickly scroll so that the specified row moves into the focus position."
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Specifies whether or not the focus indicator bitmap is displayed.",
          "descriptionHTML": "Specifies whether or not the focus indicator bitmap is displayed."
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "Specifies the spacing between rows in the list. The y-dimension of the vector specifies the vertical spacing between rows, and the x-dimension is ignored.",
          "descriptionHTML": "Specifies the spacing between rows in the list. The y-dimension of the vector specifies the vertical spacing between rows, and the x-dimension is ignored."
        },
        "loadingBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "loadingBitmapUri",
          "description": "Specifies a bitmap file to display while a list item poster is loading.",
          "descriptionHTML": "Specifies a bitmap file to display while a\u0026nbsp;list item poster is loading."
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "Specifies the bitmap file to use as a visual separator between the last and first list items when the list wraps. In most case, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use as a visual separator between the last and first list items when the list wraps. In most case, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom font to use for the section title text. Only set this field to use a different font than the system default.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom font to use for the section title text. Only set this field to use a different font than the system default."
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When a row gains the key focus, set to the index of the focused row.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a row gains the key focus, set to the index of the focused row."
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "Specifies differing spaces between each grid column, to allow the spacing between columns to vary from column to column. This field is not used by lists. The specified values override the itemSpacing field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSpacing field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each grid column, to allow the\u0026nbsp;spacing between\u0026nbsp;columns to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of rows in the list. Note that this the width of the entire row, not the width of the posters in the row.",
          "descriptionHTML": "Specifies the width and height of rows in the list. Note that this the width of the entire row, not the width of the posters in the row."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom color to use for the section title text. Only set this field to use a different text color than the system default.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom color to use for the section title text. Only set this field to use a different text color than the system default."
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items.",
          "descriptionHTML": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items."
        },
        "failedBitmapOpacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "failedBitmapOpacity",
          "description": "Specifies an opacity value used to render the failed bitmap.",
          "descriptionHTML": "Specifies an opacity value used to render the failed bitmap."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, causes the list to immediately update so that the specified row moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, causes the list to immediately update so that the specified row moves into the focus position."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list or a column of grid items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect floatingFocus Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible. fixedFocusWrap Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down. fixedFocus Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list or a column\u0026nbsp;of grid items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efixedFocus\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eCauses the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible.",
            "fixedFocusWrap": "Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down.",
            "fixedFocus": "Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap",
            "fixedFocus"
          ]
        },
        "rowItemSize": {
          "type": "array of vector2d",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "rowItemSize",
          "description": "Specifies the width and height of the items in each row. The array of values must include at least one element. If the array contains fewer elements than the number of rows in the data model, the last value in the array is used as the size for the extra rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies the width and height of the items in each row. The array of values must include at least one element. If the array contains fewer elements than the number of rows in the data model, the last value in the array is used as the size for the extra rows.\u003c/p\u003e"
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "rowItemFocused": {
          "type": "array of integer",
          "defaultValue": "[ ]",
          "accessPermission": "READ_ONLY",
          "name": "rowItemFocused",
          "description": "Read-Only When an item gains the key focus, set to a 2-element array, where element 0 contains the index of the focused row, and element 1 contains the index of the focused item in that row.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen an item gains the key focus, set to a 2-element array, where element 0 contains the index of the focused row, and element 1 contains the index of the focused item in that row.\u003c/span\u003e"
        },
        "sectionDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom bitmap to use as a visual divider between the sections of the list or grid. Only set this field to use a bitmap with a different appearance than the system default. For sections that do not include an icon or a title, the system default or custom bitmap specified as the wrapDividerBitmapUri field value is used for the section dividers. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.",
          "descriptionHTML": "\u003cp\u003eIf the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom bitmap to use as a visual divider between the sections of the list or grid. Only set this field to use a bitmap with a different appearance than the system default. For sections that do not include an icon or a title, the system default or custom bitmap specified as the \u003ccode\u003ewrapDividerBitmapUri\u003c/code\u003e field value is used for the section dividers. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the minimum width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the minimum width\u0026nbsp;of the section divider bitmap."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "rowLabelFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "rowLabelFont",
          "description": "Specifies the font for the row and \"1 of N\" labels.",
          "descriptionHTML": "Specifies the font for the row and \"1 of N\" labels."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "focusXOffset": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "focusXOffset",
          "description": "Specifies the x-dimension offset of the first fully visible item in each row relative to the left edge of the list. In most cases, the first fully visible item in each row will be positioned at the left edge of the list, so this field does not need to be specified. If the array contains fewer elements than the number of rows in the data model, the last value in the array is used as the x-dimension offset for the extra rows. If the array contains no values, the default x-dimension offset of 0.0 is used.",
          "descriptionHTML": "\u003cp\u003eSpecifies the x-dimension offset of the first fully visible item in each row relative to the left edge of the list. In most cases, the first fully visible item in each row will be positioned at the left edge of the list, so this field does not need to be specified. If the array contains fewer elements than the number of rows in the data model, the last value in the array is used as the x-dimension offset for the extra rows. If the array contains no values, the default\u0026nbsp;x-dimension offset of 0.0 is used.\u003c/p\u003e"
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When an item is selected, set to the index of the selected row.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen an item is selected, set to the index of the selected row."
        },
        "rowItemSpacing": {
          "type": "array of vector2d",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "rowItemSpacing",
          "description": "Specifies the spacing between items in each row. The x-dimension of each array value specifies the horizontal spacing between list items in the corresponding row. If the array contains fewer elements than the number of rows in the data model, the last value in the array is used as the spacing for the extra rows. If the array contains no values, no space will be included between list items in all rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies the spacing between items in each row. The x-dimension of each array value specifies the horizontal spacing between\u0026nbsp;list\u0026nbsp;items\u0026nbsp;in the corresponding row. If the array contains fewer elements than the number of rows in the data model, the last value in the array is used as the spacing for the extra rows. If the array contains no values, no space will be included between\u0026nbsp;list items\u0026nbsp;in all rows.\u003c/p\u003e"
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "Specifies differing widths for each grid column, to allow the width of each column to vary from column to column. This field is not used by lists. The specified values override the itemSize field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSize field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing widths for each grid column, to allow the\u0026nbsp;width of each column to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "itemComponentName": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "itemComponentName",
          "description": "Specifies the name of an XML component for the items in each row. An instance of this component is created on demand for each visible item of each row. The XML component must define a specific interface as detailed in RowList XML Component below.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the name of an XML component for the items in each row. An instance of this component is created on demand for each visible item of each row. The XML component must define a specific interface as detailed in \n \u003cac:link ac:anchor\u003d\"RowListXMLComponent\"\u003e\n  \u003cac:link-body\u003e\n   \u003cstrong\u003eRowList XML Component\u003c/strong\u003e\n  \u003c/ac:link-body\u003e\n \u003c/ac:link\u003e below.\u003c/span\u003e"
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows in the list. Note that the actual number of rows may be more or less than the number of visible rows depending on the number of items in the list content.",
          "descriptionHTML": "Specifies the number of visible rows in the list. Note that the actual number of rows may be more or less than the number of visible rows depending on the number of items in the list content."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rowItemSelected": {
          "type": "array of integer",
          "defaultValue": "[ ]",
          "accessPermission": "READ_ONLY",
          "name": "rowItemSelected",
          "description": "Read-Only When an item is selected, set to a 2-element array, where element 0 contains the index of the row containing the selected item, and element 1 contains the index of the selected item in that row.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen an item is selected, set to a 2-element array, where element 0 contains the index of the row containing the selected item, and element 1 contains the index of the selected item in that row."
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the height of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the height of the section divider bitmap."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "rowLabelOffset": {
          "type": "array of vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "rowLabelOffset",
          "description": "Specifies the offset of the row label for each row. The x-dimension specifies the horizontal offset of the label from the left edge of the row. The y-dimension component specifies the vertical spacing between the label and the list items in the row. If the array contains fewer elements than the number of rows in the data model, the last value in the array is used as the offset for the labels of the extra rows. If the array specified contains no values, a default offset value of [0,0] is used.",
          "descriptionHTML": "\u003cp\u003eSpecifies the offset of the row label for each row. The x-dimension specifies the horizontal offset of the label from the left edge of the row. The y-dimension component specifies the vertical spacing between the label and the\u0026nbsp;list\u0026nbsp;items\u0026nbsp;in the row. If the array contains fewer elements than the number of rows in the data model, the last value in the array is used as the offset for the labels of the extra rows. If the array specified contains no values, a default offset value of \u003ccode\u003e[0,0]\u003c/code\u003e is used.\u003c/p\u003e"
        },
        "loadingBitmapOpacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "loadingBitmapOpacity",
          "description": "Specifies an opacity value used to render the loading bitmap.",
          "descriptionHTML": "Specifies an opacity value used to render the loading bitmap."
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content for the list. The content should be a single ContentNode that has one child ContentNode for each row. These child ContentNodes for each row should themselves contains child ContentNodes for each item in the row. See Data Bindings below for more details. ",
          "descriptionHTML": "\u003cp\u003eSpecifies the content for the list. The content should be a single \u003cstrong\u003eContentNode\u003c/strong\u003e that has one child \u003cstrong\u003eContentNode\u003c/strong\u003e for each row. These child \u003cstrong\u003eContentNodes\u003c/strong\u003e for each row should themselves contains child \u003cstrong\u003eContentNodes\u003c/strong\u003e for each item in the row. See \n \u003cac:link ac:anchor\u003d\"DataBindings\"\u003e\n  \u003cac:link-body\u003e\n   \u003cstrong\u003eData Bindings\u003c/strong\u003e\n  \u003c/ac:link-body\u003e\n \u003c/ac:link\u003e below for more details.\u0026nbsp;\u003c/p\u003e"
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the left offset of the section divider from the list or grid.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the left offset of the section divider from the list or grid."
        },
        "imageWellBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "imageWellBitmapUri",
          "description": "Specifies the bitmap file to use to suggest where images would appear for empty lists.",
          "descriptionHTML": "Specifies the bitmap file to use to suggest where images would appear for empty lists."
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a ContentNode node for the grid. This field is not used by lists.",
          "descriptionHTML": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a \u003cstrong\u003eContentNode\u003c/strong\u003e node for the grid. This field is not used by lists."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "showRowLabel": {
          "type": "array of Boolean",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "showRowLabel",
          "description": "Specifies whether the row label on the left edge of each row is displayed. If the array contains fewer elements than the number of rows in the data model, the last value in array is used to control the display of the row label for the extra rows. If the array contains no values, no row labels are displayed.",
          "descriptionHTML": "\u003cp\u003eSpecifies whether the row label on the left edge of each row is displayed. If the array contains fewer elements than the number of rows in the data model, the last value in array is used to control the display of the row label for the extra rows. If the array contains no values, no row labels are displayed.\u003c/p\u003e"
        },
        "rowLabelColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "rowLabelColor",
          "description": "Specifies the color of the row and \"1 on N\" labels.",
          "descriptionHTML": "Specifies the color of the row and \"1 on N\" labels."
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "Specifies the heights of each row of the list. This allows the height of each row of the list to vary from row to row. The values override the height specified in the y-dimension value of the itemSize field. If the array contains fewer elements than the number of rows in the data model, the y-dimension value of the itemSize field is used as the height of the extra rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies the heights of each row of the list. This allows the height of each row of the\u0026nbsp;list to vary from row to row. \u003cspan\u003eThe values override the height specified in the y-dimension value of the \u003ccode\u003eitemSize\u003c/code\u003e field. If the array contains fewer elements than the number of rows in the data model, the y-dimension value of the \u003ccode\u003eitemSize\u003c/code\u003e field is used as the height of the extra rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "failedBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "failedBitmapUri",
          "description": "Specifies a bitmap file to display when a list item poster fails to load.",
          "descriptionHTML": "Specifies a bitmap file to display when a\u0026nbsp;list item poster fails to load."
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When a row loses the key focus, set to the index of the unfocused row.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a row loses the key focus, set to the index of the unfocused row."
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "Specifies the spacing after each row of the list. This allows the spacing between rows to vary from row to row. The values override the vertical spacing specified in y-dimension value of the itemSpacing field. If the array contains fewer elements than the number of rows in the data model, the y-dimension value of the itemSpacing field is used as the spacing after the extra rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies the spacing after each row of the list. This allows the spacing between rows to vary from row to row. The values override the vertical spacing specified in y-dimension value of the \u003ccode\u003eitemSpacing\u003c/code\u003e field. If the array contains fewer elements than the number of rows in the data model, the y-dimension value of the \u003ccode\u003eitemSpacing\u003c/code\u003e field is used as the spacing after the extra rows.\u003c/p\u003e"
        },
        "rowFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "rowFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of items in response to the remote direction pad Left and Right key presses. The possible values are:  Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003e\u003cspan\u003eSpecifies the how the focus indicator moves in a row of items in response to the remote direction pad \u003cu\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/u\u003e and \u003cu\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/u\u003e key presses. The possible values are:\u003c/span\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "Specifies the height of the divider. The wrap divider bitmap will be scaled to this height. The width of the wrap divider is set to the width of the list items (that is, the x-dimension value of the itemSize field).  ",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the divider. The wrap divider bitmap will be scaled to this height. The width of the wrap divider is set to the width of the list items (that is, the x-dimension\u0026nbsp;value of the\u0026nbsp;\u003ccode\u003eitemSize\u003c/code\u003e field). \u0026nbsp;\u003c/p\u003e"
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "If the ContentNode node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in a grid. This field is not used for lists.",
          "descriptionHTML": "Specifies the number of columns in a grid. This field is not used for lists."
        },
        "showRowCounter": {
          "type": "array of Boolean",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "showRowCounter",
          "description": "Specifies whether the \"1 of N\" label on the right edge of each row is displayed. Note that the \"1 of N\" label is only displayed for the focused row even if the showRowCounter field value for that row is set to true. If the array contains fewer elements than the number of rows in the data model, the last value in array is used to control the display of the \"1 of N\" label for the extra rows. If the array contains no values, no \"1 of N\" labels are displayed.",
          "descriptionHTML": "\u003cp\u003eSpecifies whether the \"1 of N\" label on the right edge of each row is displayed. Note that the \"1 of N\" label is only displayed for the focused row even if the \u003ccode\u003eshowRowCounter\u003c/code\u003e field value for that row is set to true. If the array contains fewer elements than the number of rows in the data model, the last value in array is used to control the display of the \"1 of N\" label for the extra rows. If the array contains no values, no \"1 of N\" labels are displayed.\u003c/p\u003e"
        }
      },
      "name": "RowList",
      "description": "The RowList node is a list of independently scrollable rows of posters. Each item in the list contains a row of posters that can be scrolled left/right independently of the other rows. The posters in any single row must be the same size, but the posters in different rows of the list can have different sizes. In addition to the posters, each row may contain a right-justified title label and a left-justified label that displays a \"1 of N\" message, indicating which poster in the row currently has the focus.There are two horizontal scrolling options for the RowList node controlled by the rowFocusAnimationStyle field. Setting the rowFocusAnimationStyle field to floatingFocus causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus will stay fixed on the first or last item in the row and the items will scroll left or right. Setting the rowFocusAnimationStyle field to fixedFocusWrap causes each row to wrap around when navigation reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus will float left and right.The RowList node supports two variations. The first variation provides a simple option for the common case where each item in each row is displayed as a single bitmap. The second variation allows the contents of each item in each row to be an instance of a Scene Graph component that defines a set of interface fields that provide for communication between the RowList node and the items it displays, similar to that used by the MarkupList and MarkupGrid node classes. In the documentation below, the first variation is referred to as simple, and the second variation is referred to as component. is a simple example channel using RowList.  This sample creates a one row RowList using the component based approach, i.e., it specifies custom markup for the individual items in the row.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eRowList\u003c/strong\u003e\u0026nbsp;node is a list of independently scrollable rows of posters. Each item in the list contains a row of posters that can be scrolled left/right independently of the other rows. The posters in any single row must be the same size, but the posters in different rows of the list can have different sizes. In addition to the posters, each row may contain a right-justified title label and a left-justified label that displays a \"1 of N\" message, indicating which poster in the row currently has the focus.There are two horizontal scrolling options for the \u003cstrong\u003eRowList\u003c/strong\u003e node controlled by the \u003ccode\u003erowFocusAnimationStyle\u003c/code\u003e field. Setting the \u003ccode\u003erowFocusAnimationStyle\u003c/code\u003e field to \u003ccode\u003efloatingFocus\u003c/code\u003e causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus will stay fixed on the first or last item in the row and the items will scroll left or right. Setting the \u003ccode\u003erowFocusAnimationStyle\u003c/code\u003e field to \u003ccode\u003efixedFocusWrap\u003c/code\u003e causes each row to wrap around when navigation reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus will float left and right.The \u003cstrong\u003eRowList\u003c/strong\u003e node supports two variations. The first variation provides a simple option for the common case where each item in each row is displayed as a single bitmap. The second variation allows the contents of each item in each row to be an instance of a Scene Graph component that defines a set of interface fields that provide for communication between the \u003cstrong\u003eRowList\u003c/strong\u003e node and the items it displays, similar to that used by the \u003cstrong\u003eMarkupList\u003c/strong\u003e and \u003cstrong\u003eMarkupGrid\u003c/strong\u003e node classes. In the documentation below, the first variation is referred to as \u003cem\u003esimple\u003c/em\u003e, and the second variation is referred to as \u003cem\u003ecomponent\u003c/em\u003e.\u003cac:link\u003e\n \u003cri:attachment ri:filename\u003d\"SimpleRowList.zip\" /\u003e\n\u003c/ac:link\u003e\u0026nbsp;is a simple example channel using RowList. \u0026nbsp;This sample creates a one row RowList using the component based approach, i.e., it specifies custom markup for the individual items in the row.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/RowList",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "numColumns",
        "focusRow",
        "focusColumn",
        "horizFocusAnimationStyle",
        "vertFocusAnimationStyle",
        "wrapDividerWidth",
        "fixedLayout",
        "numRenderPasses",
        "columnWidths",
        "columnSpacings",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerWidth",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemComponentName",
        "content",
        "itemSize",
        "itemSpacing",
        "numRows",
        "rowHeights",
        "rowSpacings",
        "rowItemSize",
        "rowItemSpacing",
        "focusXOffset",
        "rowLabelOffset",
        "showRowLabel",
        "showRowCounter",
        "rowFocusAnimationStyle",
        "rowLabelColor",
        "rowLabelFont",
        "drawFocusFeedbackOnTop",
        "drawFocusFeedback",
        "imageWellBitmapUri",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "loadingBitmapUri",
        "loadingBitmapOpacity",
        "failedBitmapUri",
        "failedBitmapOpacity",
        "wrapDividerBitmapUri",
        "wrapDividerHeight",
        "rowItemSelected",
        "rowItemFocused",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem"
      ],
      "documentationVersion": 39
    },
    "LabelList": {
      "parentName": "ArrayGrid",
      "isAbstract": false,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position.\u003c/span\u003e"
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "focusedColor": {
          "type": "color",
          "defaultValue": "0x262626ff",
          "accessPermission": "READ_WRITE",
          "name": "focusedColor",
          "description": "Specifies the text color for focused list items",
          "descriptionHTML": "\u003cp\u003e\u003cspan\u003eSpecifies the text color for focused list items \u003c/span\u003e\u003c/p\u003e"
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Specifies whether or not the focus indicator bitmap is displayed",
          "descriptionHTML": "Specifies whether or not the focus indicator bitmap is displayed"
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "The second value of the vector specifies the vertical spacing between items in the list. The first value of the vector is ignored.",
          "descriptionHTML": "The second value of the vector specifies the vertical spacing between items in the list. The first value of the vector is ignored."
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "Specifies the bitmap file to use as a wrap divider, the visual separator between the last and first list items when the list wraps. In most cases, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use as a wrap divider, the visual separator between the last and first list items when the list wraps. \u003cspan\u003eIn most cases, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "Specifies the font for section divider labels",
          "descriptionHTML": "Specifies the font for section divider labels"
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When a list item gains the key focus, set to the index of the focused item.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item gains the key focus, set to the index of the focused item.\u003c/span\u003e"
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "Specifies differing spaces between each grid column, to allow the spacing between columns to vary from column to column. This field is not used by lists. The specified values override the itemSpacing field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSpacing field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each grid column, to allow the\u0026nbsp;spacing between\u0026nbsp;columns to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of each item in the list",
          "descriptionHTML": "Specifies the width and height of each item in the list"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "Specifies the text color for section divider labels",
          "descriptionHTML": "Specifies the text color for section divider labels"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items",
          "descriptionHTML": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "textHorizAlign": {
          "type": "option string",
          "defaultValue": "left",
          "accessPermission": "READ_WRITE",
          "name": "textHorizAlign",
          "description": "Specifies the horizontal alignment of the text in the list item area specified by the itemSize field value (the text is always centered vertically in the list item area). The possible options are: Option Effect left Text is left-aligned right Text is right-aligned center Text is center-aligned",
          "descriptionHTML": "\u003cp\u003eSpecifies the horizontal alignment of the text in the list item area specified by the \u003ccode\u003eitemSize\u003c/code\u003e field value (the text is always centered vertically in the list item area). The possible options are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eleft\u003c/td\u003e\n   \u003ctd\u003eText is left-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eright\u003c/td\u003e\n   \u003ctd\u003eText is right-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ecenter\u003c/td\u003e\n   \u003ctd\u003eText is center-aligned\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "left": "Text is left-aligned",
            "center": "Text is center-aligned",
            "right": "Text is right-aligned"
          },
          "possibleValuesNames": [
            "left",
            "right",
            "center"
          ]
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list of items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect fixedFocusWrap Causes the focus indicator to float up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list, and the items will scroll up or down if there are items that were not visible. floatingFocus Causes the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float up and down.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list of items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the list to wrap around when the focus indicator reaches the first or last item in the list, as long as the list contains enough items to fill the list. If the list does not contain enough items to fill the list, the focus indicator will float up and down.",
            "fixedFocusWrap": "Causes the focus indicator to float up or down until it reaches the end of the list, at which point the focus indicator will stay fixed on the first or last item in the list, and the items will scroll up or down if there are items that were not visible."
          },
          "possibleValuesNames": [
            "fixedFocusWrap",
            "floatingFocus"
          ]
        },
        "focusedFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "focusedFont",
          "description": "Specifies the font for focused list items",
          "descriptionHTML": "\u003cspan\u003eSpecifies the font for focused list items\u003c/span\u003e"
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "sectionDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "Specifies the bitmap file to use as visual separator between sections of the list. The section dividers can include an icon and a label in addition to the section divider bitmap. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. For sections that do not contain an icon or a title, the bitmap for the wrap divider is used for the section dividers instead.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as visual separator between sections of the list. The section dividers can include an icon and a label in addition to the section divider bitmap. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. For sections that do not contain an icon or a title, the bitmap for the wrap divider is used for the section dividers instead.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "117",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width.",
          "descriptionHTML": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When a list item is selected, set to the index of the selected item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item is selected, set to the index of the selected item."
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "Specifies differing widths for each grid column, to allow the width of each column to vary from column to column. This field is not used by lists. The specified values override the itemSize field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSize field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing widths for each grid column, to allow the\u0026nbsp;width of each column to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "12",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows displayed. The actual number of rows may be more or less than the number of visible rows specified depending on the number of items in the list content.",
          "descriptionHTML": "Specifies the number of visible rows displayed. T\u003cspan\u003ehe actual number of rows may be more or less than the number of visible rows specified depending on the number of items in the list content. \u003c/span\u003e"
        },
        "color": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "color",
          "description": "Specifies the text color for unfocused list items",
          "descriptionHTML": "\u003cspan\u003eSpecifies the text color for unfocused list items\u003c/span\u003e"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "40",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "Specifies the height of the section dividers. The width of the section dividers is determined by the width of the list items as specified by the itemSize field width value.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the section dividers. \u003cspan\u003eThe width of the section dividers is determined by the width of the list items\u0026nbsp;as\u0026nbsp;specified by the\u0026nbsp;\u003ccode\u003eitemSize\u003c/code\u003e field width value. \u003c/span\u003e\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content for the list. See Data Bindings below for more details. If the data contains section markers, section dividers will be drawn between each section. These section dividers may contain an icon and/or a string. ",
          "descriptionHTML": "Specifies the content for the list. See \n\u003cac:link ac:anchor\u003d\"DataBindings\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eData Bindings\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below for more details.\u003cbr\u003eIf the data contains section markers, section dividers will be drawn between each section. These section dividers may contain an icon and/or a string.\u0026nbsp;"
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items.",
          "descriptionHTML": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items."
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a ContentNode node for the grid. This field is not used by lists.",
          "descriptionHTML": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a \u003cstrong\u003eContentNode\u003c/strong\u003e node for the grid. This field is not used by lists."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "Specifies differing heights for each list or grid row, to allow the height of each row to vary from row to row. The specified values override the itemSize field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSize field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing heights for each list or grid row, to allow the height of each row to vary from row to row.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When a list item loses the key focus, set to the index of the unfocused item.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item loses the key focus, set to the index of the unfocused item.\u003c/span\u003e"
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "Specifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row. The specified values override the itemSpacing field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSpacing field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row.\u003c/p\u003e\u003cp\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/p\u003e"
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "Specifies the height of the wrap divider, the visual separator between the last and first list items when the list wraps. The bitmap for the wrap divider is scaled to this height. The width of the wrap divider is set to the width of the list items as specified by the itemSize field width value.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the wrap divider, the visual separator between the last and first list items when the list wraps. The\u0026nbsp;bitmap for the wrap divider\u0026nbsp;is scaled to this height. The width of the wrap divider is set to the width of the list items as specified by the \u003ccode\u003eitemSize\u003c/code\u003e field width value.\u003c/p\u003e"
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "10",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "If the ContentNode node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in a grid. This field is not used for lists.",
          "descriptionHTML": "Specifies the number of columns in a grid. This field is not used for lists."
        },
        "font": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "font",
          "description": "Specifies the font for unfocused list items",
          "descriptionHTML": "Specifies the font for unfocused list items"
        }
      },
      "name": "LabelList",
      "description": "The LabelList node class is a simple list class that can be used to display a list of items. Each item can include a text string and an optional icon positioned to the left of the text string.The list items can be organized into sections that are demarcated by labelled horizontal divider lines between the sections.",
      "descriptionHTML": "The \u003cstrong\u003eLabelList\u003c/strong\u003e\u0026nbsp;node class is a simple list class that can be used to display a list of items. Each item can include a text string and an optional icon positioned to the left of the text string.\u003cspan\u003eThe list items can be organized into sections that are demarcated by labelled horizontal divider lines between the sections.\u003c/span\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/LabelList",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "numColumns",
        "focusColumn",
        "horizFocusAnimationStyle",
        "wrapDividerWidth",
        "fixedLayout",
        "numRenderPasses",
        "rowHeights",
        "columnWidths",
        "rowSpacings",
        "columnSpacings",
        "sectionDividerWidth",
        "content",
        "itemSize",
        "itemSpacing",
        "numRows",
        "textHorizAlign",
        "color",
        "focusedColor",
        "font",
        "focusedFont",
        "drawFocusFeedback",
        "drawFocusFeedbackOnTop",
        "vertFocusAnimationStyle",
        "focusRow",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "wrapDividerBitmapUri",
        "wrapDividerHeight",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem"
      ],
      "documentationVersion": 50
    },
    "LayoutGroup": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "horizAlignment": {
          "type": "string",
          "defaultValue": "left",
          "accessPermission": "READ_WRITE",
          "name": "horizAlignment",
          "description": "Specifies the alignment point in the horizontal direction. The effect of the value set depends on the whether the layoutDirection field value is set to either horiz or vert. Value layoutDirection  Use left  vert Aligns the left edges of each child in the column, and sets the LayoutGroup node local x-coordinate origin at the left edge of the children horiz Sets the LayoutGroup node local x-coordinate origin at the left edge of the first child center  vert Aligns the centers of each child in the column, and sets the LayoutGroup node local x-coordinate origin at the center alignment point horiz Sets the LayoutGroup node local x-coordinate origin at the center of the horizontal row of children right  vert Aligns the right edges of each child in the column, and sets the LayoutGroup node local x-coordinate origin is at the right edge of the children horiz Sets the LayoutGroup node local x-coordinate origin at the right edge of the last child",
          "descriptionHTML": "\u003cp\u003eSpecifies the alignment point in the horizontal direction. The effect of the value set depends on the whether the \u003ccode\u003elayoutDirection\u003c/code\u003e field value is set to either \u003ccode\u003ehoriz\u003c/code\u003e or \u003ccode\u003evert\u003c/code\u003e.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth colspan\u003d\"1\"\u003elayoutDirection\u0026nbsp;\u003c/th\u003e\n   \u003cth\u003eUse\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003eleft\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd\u003eAligns the left edges of each child in the column, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node\u0026nbsp;local x-coordinate origin at the left edge of the children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local x-coordinate origin at the left edge of the first child\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003ecenter\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd\u003eAligns the centers of each child in the column, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e\u0026nbsp;node\u0026nbsp;local x-coordinate origin at the center alignment point\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local x-coordinate origin at the center of the horizontal row of children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003eright\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd\u003eAligns the right edges of each child in the column, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e\u0026nbsp;node\u0026nbsp;local x-coordinate origin is at the right edge of the children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local x-coordinate origin at the right edge of the last child\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "left": "Aligns the left edges of each child in the column, and sets the LayoutGroup node local x-coordinate origin at the left edge of the children - Sets the LayoutGroup node local x-coordinate origin at the left edge of the first child",
            "center": "Aligns the centers of each child in the column, and sets the LayoutGroup node local x-coordinate origin at the center alignment point - Sets the LayoutGroup node local x-coordinate origin at the center of the horizontal row of children",
            "right": "Aligns the right edges of each child in the column, and sets the LayoutGroup node local x-coordinate origin is at the right edge of the children - Sets the LayoutGroup node local x-coordinate origin at the right edge of the last child"
          },
          "possibleValuesNames": [
            "left",
            "center",
            "right"
          ]
        },
        "itemSpacings": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacings",
          "description": "Controls the spacing before or after each child in the layout direction. By default, no space is added between the children. If the field value array is set with a single value, and the addItemSpacingAfterChild field value is set to true, that amount of space is inserted after each child is positioned. If the addItemSpacingAfterChild field value is set to false, the space is inserted before each child is positioned. If the field value array has more than one value, the first value specifies the spacing before or after the first item, the second value specifies the spacing before or after the second item, and so on. If there are fewer values in the field value array than needed, the final value is repeated as needed. If there are more values in the field value array than needed, the extra values are ignored.",
          "descriptionHTML": "\u003cp\u003eControls the spacing before or after each child in the layout direction. By default, no space is added between the children.\u003c/p\u003e\u003cp\u003eIf the field value array is set with a single value, and the \u003ccode\u003eaddItemSpacingAfterChild\u003c/code\u003e field value is set to \u003ccode\u003etrue\u003c/code\u003e, that amount of space is inserted after each child is positioned. If the\u0026nbsp;\u003ccode\u003eaddItemSpacingAfterChild\u003c/code\u003e field value is set to \u003ccode\u003efalse\u003c/code\u003e, the space is inserted before each child is positioned.\u003c/p\u003e\u003cp\u003eIf the field value array has more than one value, the first value specifies the spacing before or after the first item, the second value specifies the spacing before or after the second item, and so on. If there are fewer values in the field value array than needed, the final value is repeated as needed. If there are more values in the field value array than needed, the extra values are ignored.\u003c/p\u003e"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "vertAlignment": {
          "type": "string",
          "defaultValue": "top",
          "accessPermission": "READ_WRITE",
          "name": "vertAlignment",
          "description": "Specifies the alignment point in the vertical direction. The effect of the value set depends on the whether the layoutDirection field value is set to either horiz or vert. Value layoutDirection  Use top  horiz Aligns the top edges of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the top edge of the children vert Sets the LayoutGroup node local y-coordinate origin at the top edge of the first child center  horiz Aligns the centers of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the center alignment point vert Sets the LayoutGroup node local y-coordinate origin at the center of the vertical column of children bottom  horiz Aligns the bottom edges of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the bottom edge of the children vert Sets the LayoutGroup node local y-coordinate origin at the bottom edge of the last child",
          "descriptionHTML": "\u003cp\u003eSpecifies the alignment point in the vertical direction. The effect of the value set depends on the whether the \u003ccode\u003elayoutDirection\u003c/code\u003e field value is set to either \u003ccode\u003ehoriz\u003c/code\u003e or \u003ccode\u003evert\u003c/code\u003e.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth colspan\u003d\"1\"\u003elayoutDirection\u0026nbsp;\u003c/th\u003e\n   \u003cth\u003eUse\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003etop\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd\u003eAligns the top edges of each child in the row, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the top edge of the children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the top edge of the first child\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003ecenter\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd\u003eAligns the centers of each child in the row, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the center alignment point\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the center of the vertical column of children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003ebottom\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd\u003eAligns the bottom edges of each child in the row, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the bottom edge of the children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the bottom edge of the last child\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "top": "Aligns the top edges of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the top edge of the children - Sets the LayoutGroup node local y-coordinate origin at the top edge of the first child",
            "bottom": "Aligns the bottom edges of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the bottom edge of the children - Sets the LayoutGroup node local y-coordinate origin at the bottom edge of the last child",
            "center": "Aligns the centers of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the center alignment point - Sets the LayoutGroup node local y-coordinate origin at the center of the vertical column of children"
          },
          "possibleValuesNames": [
            "top",
            "center",
            "bottom"
          ]
        },
        "layoutDirection": {
          "type": "string",
          "defaultValue": "vert",
          "accessPermission": "READ_WRITE",
          "name": "layoutDirection",
          "description": "Controls the layout direction. Value Use horiz Positions the children in a row from left to right vert Positions the children in a column from top to bottom",
          "descriptionHTML": "\u003cp\u003eControls the layout direction.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eUse\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ehoriz\u003c/td\u003e\n   \u003ctd\u003ePositions the children in a row from left to right\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003evert\u003c/td\u003e\n   \u003ctd\u003ePositions the children in a column from top to bottom\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "horiz": "Positions the children in a row from left to right",
            "vert": "Positions the children in a column from top to bottom"
          },
          "possibleValuesNames": [
            "horiz",
            "vert"
          ]
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "addItemSpacingAfterChild": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "addItemSpacingAfterChild",
          "description": "Controls how the spaces specified in the itemSpacings field are inserted. By default, the field value is set to true. This causes the specified spaces to be inserted after the child is positioned. If the field value is set to false, the specified item space is inserted before the child is positioned.",
          "descriptionHTML": "\u003cp\u003eControls how the spaces\u0026nbsp;specified in the\u0026nbsp;\u003ccode\u003eitemSpacings\u003c/code\u003e field are inserted. By default, the field value is set to \u003ccode\u003etrue\u003c/code\u003e. This causes the specified spaces to be inserted \u003cem\u003eafter\u003c/em\u003e the child is positioned. If the field value is set to \u003ccode\u003efalse\u003c/code\u003e, the specified item space is inserted \u003cem\u003ebefore\u003c/em\u003e the child is positioned.\u003c/p\u003e"
        }
      },
      "name": "LayoutGroup",
      "description": "",
      "descriptionHTML": "",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/LayoutGroup",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "layoutDirection",
        "horizAlignment",
        "vertAlignment",
        "itemSpacings",
        "addItemSpacingAfterChild"
      ],
      "documentationVersion": 17
    },
    "Scene": {
      "parentName": "Group",
      "isAbstract": true,
      "fields": {
        "backgroundColor": {
          "type": "color",
          "defaultValue": "0x000000FF",
          "accessPermission": "READ_WRITE",
          "name": "backgroundColor",
          "description": "Specifies a background color for the scene. This color is only used if backgroundURI is set to the empty string. For example: scene.backgroundColor\u003d0xff0000ff scene.backgroundUri \u003d \"\"",
          "descriptionHTML": "\u003cp\u003eSpecifies a background color for the scene. This color is only used if backgroundURI is set to the empty string. For example:\u003c/p\u003e\u003cp\u003escene.backgroundColor\u003d0xff0000ff\u003c/p\u003e\u003cp\u003escene.backgroundUri \u003d \"\"\u003c/p\u003e"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "dialog": {
          "type": "Dialog",
          "defaultValue": "invalid",
          "accessPermission": "READ_WRITE",
          "name": "dialog",
          "description": "Setting this field to a node extended from the Dialog node causes the dialog to be displayed",
          "descriptionHTML": "Setting this field to a node extended from the \u003cstrong\u003eDialog\u003c/strong\u003e node causes the dialog to be displayed"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "backgroundURI": {
          "type": "URI string",
          "defaultValue": "invalid",
          "accessPermission": "READ_WRITE",
          "name": "backgroundURI",
          "description": "Specifies a graphic image file to be used for the Scene node background.",
          "descriptionHTML": "Specifies a graphic image file to be used for the \u003cstrong\u003eScene\u003c/strong\u003e node background."
        },
        "backExitsScene": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "backExitsScene",
          "description": "If true, then a Back key press will cause the scene to exit. If false, then Back key presses do not cause the scene to exit.",
          "descriptionHTML": "If true, then a \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e key press will cause the scene to exit. If false, then \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e key presses do not cause the scene to exit."
        }
      },
      "name": "Scene",
      "description": "The Scene node class serves as the root of a Scene Graph node tree. Every roSGScreen object must have a Scene node, or a node that derives from the Scene node class as its root, including an XML markup component that extends the Scene node class or subclass. That node must be created using the roSGScreen createScene() function, with an argument that is a string of the name of the Scene node object created. For example:screen \u003d CreateObject(\"roSGScreen\") scene \u003d screen.CreateScene(\"Scene\")",
      "descriptionHTML": "The \u003cstrong\u003eScene\u003c/strong\u003e node class serves as the root of a Scene Graph node tree.\u0026nbsp;Every \u003cstrong\u003eroSGScreen\u003c/strong\u003e object must have a \u003cstrong\u003eScene\u003c/strong\u003e node, or a node that derives from the\u0026nbsp;\u003cstrong\u003eScene\u003c/strong\u003e node class as its root, including an XML markup component that extends the \u003cstrong\u003eScene\u003c/strong\u003e node class or subclass. That node must be created using the \u003cstrong\u003eroSGScreen\u003c/strong\u003e \u003ccode\u003ecreateScene()\u003c/code\u003e function, with an argument that is a string of the name of the \u003cstrong\u003eScene\u003c/strong\u003e node object created. For example:\u003cac:plain-text-body\u003e\n screen \u003d CreateObject(\"roSGScreen\") scene \u003d screen.CreateScene(\"Scene\")\n\u003c/ac:plain-text-body\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Scene",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "backgroundURI",
        "backgroundColor",
        "dialog",
        "backExitsScene"
      ],
      "documentationVersion": 27
    },
    "Vector2DFieldInterpolator": {
      "parentName": "Node",
      "isAbstract": false,
      "fields": {
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "keyValue": {
          "type": "array of Vector2D\u0027s",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "keyValue",
          "description": "Specifies the key values or the interpolator\u0027s keyframes. Each value in the keyValue array corresponds to a value in the key field\u0027s array.Behavior is undefined if the number of values in the key field does not match the number of values in the keyValue field.",
          "descriptionHTML": "\u003cp\u003eSpecifies the key values or the interpolator\u0027s keyframes. Each value in the \u003ccode\u003ekeyValue\u003c/code\u003e array corresponds to a value in the \u003ccode\u003ekey\u003c/code\u003e field\u0027s array.\u003c/p\u003eBehavior is undefined if the number of values in the \u003ccode\u003ekey\u003c/code\u003e field does not match the number of values in the \u003ccode\u003ekeyValue\u003c/code\u003e field."
        },
        "fieldToInterp": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "fieldToInterp",
          "description": "Specifies the field to interpolate. The string should contain the ID of a node in the scene and the name of a field of that node, separated by a colon. For example, \"title:translation\" would indicate that the interpolator should be applied to the translation field of a node whose id field was \"title\". The specified field must be of type Vector2D.",
          "descriptionHTML": "Specifies the field to interpolate. The string should contain the\u0026nbsp;ID of a node in the scene and the name of a field of that node, separated by a colon. For example, \u003ccode\u003e\"title:translation\"\u003c/code\u003e would indicate that the interpolator should be applied to the \u003ccode\u003etranslation\u003c/code\u003e field of a node whose \u003ccode\u003eid\u003c/code\u003e field was \u003ccode\u003e\"title\"\u003c/code\u003e. The specified field must be of type Vector2D."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "key": {
          "type": "array of float\u0027s",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "key",
          "description": "Specifies the key percentages for the interpolator\u0027s keyframes. Each key percentage should be a unique value from 0 to 1 indicating the percentage of the animation where the keyValue should occur.Behavior is undefined if the number of values in the key field does not match the number of values in the keyValue array.",
          "descriptionHTML": "\u003cp\u003eSpecifies the key percentages for the interpolator\u0027s keyframes. Each key percentage should be a unique value from 0 to 1 indicating the percentage of the animation where the keyValue should occur.\u003c/p\u003eBehavior is undefined if the number of values in the \u003ccode\u003ekey\u003c/code\u003e field does not match the number of values in the \u003ccode\u003ekeyValue\u003c/code\u003e array."
        },
        "fraction": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "fraction",
          "description": "Specifies the percentage to be used to compute a value for the field.",
          "descriptionHTML": "Specifies the percentage to be used to compute a value for the field."
        }
      },
      "name": "Vector2DFieldInterpolator",
      "description": "Vector2DFieldInterpolator specifies a keyframe animation sequence to be applied to a pair Vector2D field of a node. Most typically, this is used to animate the (x,y) coordinates of a node\u0027s translation field.All field interpolators include a set of key/keyValue pairs that define a keyframe of the animation. Field interpolators are generally used as children of an Animation node. As the animation progresses, it sets the fraction field of its field interpolators to a value between 0 and 1, indicating the percentage of the Animation\u0027s progress. The keyframes of the interpolator include a \"key\", the percentage where the keyframe should occur, and a \"keyValue\", the value that the field should have at that percentage.For example, if a Vector2DFieldInterpolator had three keyframes, (0.0, [0.0, 0.0]), (0.4, [500.0, 0.0]) and (1.0, [500, 200.0]), then when the interpolator\u0027s fraction field was 0.0 (i.e. 0%), the field would be set to [0.0, 0.0]. When fraction was 0.4 (i.e. 40%), the field would be set to [500.0, 0.0]. When fraction was 1.0 (i.e. 100%), the field would be set to [500.0, 200.0].For values of fraction between 0.0 and 0.4 (e.g. 0.2 or 20%), the field value is determined by linearly interpolating the keyValues for the first two keyframes. In this case, since the key of 0.2 is halfway between the key at 0.0 and the key at 0.4, the field would be set to [250.0, 0.0] (halfway between the point [0.0, 0.0] and [200.0, 0.0]. Similarly, when fraction is between the second and third keys (i.e. between 0.4 and 1.0), the field value is determined by linearly interpolating the keyValues of the second and third keyframes.For this example, if the field being interpolated were the translation field of a Poster node parented to the Scene node, the Poster would originally be positioned with its top/left corner at the upper, left corner of the screen. As the animation proceeded from 0% to 40% complete, the Poster would slide horizontally to the right until it\u0027s top/left corner was at x\u003d500.0, y\u003d0.0. As the animation continued from 40% to 100% complete, the Poster would slide vertically down until its top/left corner was at x\u003d500.0, y\u003d200.0.If the first keyframe has a key percentage greater than zero, then the field value will be equal to the keyValue of the first keyframe until fraction reaches the first keyframe\u0027s key percentage. Similarly, if the last keyframe has a key percentage less than one, the field value will be set to the keyValue of the last keyframe from when fraction equals the the last keyframe\u0027s key percentage and will not change as fraction increases from that value to 1.0.Note that while linearly interpolation is used to compute the keyValue\u0027s for fraction values between successive keys, non-linear easing functions may be applied to the fraction values computed by the Animation node, so the overall animation may vary in speed. ",
      "descriptionHTML": "\u003cstrong\u003eVector2DFieldInterpolator\u003c/strong\u003e specifies a keyframe animation sequence to be applied to a pair Vector2D field of a node. Most typically, this is used to animate the (x,y) coordinates of a node\u0027s \u003cem\u003etranslation\u003c/em\u003e field.All field interpolators include a set of key/keyValue pairs that define a keyframe of the animation. Field interpolators are generally used as children of an \u003cstrong\u003eAnimation\u003c/strong\u003e node. As the animation progresses, it sets the \u003cem\u003efraction\u003c/em\u003e field of its field interpolators to a value between 0 and 1, indicating the percentage of the Animation\u0027s progress. The keyframes of the interpolator include a \"key\", the percentage where the keyframe should occur, and a \"keyValue\", the value that the field should have at that percentage.For example, if a \u003cstrong\u003eVector2DFieldInterpolator\u003c/strong\u003e had three keyframes, (0.0, [0.0, 0.0]), (0.4, [500.0, 0.0]) and (1.0, [500, 200.0]), then when the interpolator\u0027s \u003cem\u003efraction\u003c/em\u003e field was 0.0 (i.e. 0%), the field would be set to [0.0, 0.0]. When \u003cem\u003efraction\u003c/em\u003e was 0.4 (i.e. 40%), the field would be set to [500.0, 0.0]. When \u003cem\u003efraction\u003c/em\u003e was 1.0 (i.e. 100%), the field would be set to [500.0, 200.0].For values of \u003cem\u003efraction\u003c/em\u003e between 0.0 and 0.4 (e.g. 0.2 or 20%), the field value is determined by linearly interpolating the keyValues for the first two keyframes. In this case, since the key of 0.2 is halfway between the key at 0.0 and the key at 0.4, the field would be set to [250.0, 0.0] (halfway between the point [0.0, 0.0] and [200.0, 0.0]. Similarly, when \u003cem\u003efraction\u003c/em\u003e is between the second and third keys (i.e. between 0.4 and 1.0), the field value is determined by linearly interpolating the keyValues of the second and third keyframes.For this example, if the field being interpolated were the \u003cem\u003etranslation\u003c/em\u003e field of a Poster node parented to the Scene node, the Poster would originally be positioned with its top/left corner at the upper, left corner of the screen. As the animation proceeded from 0% to 40% complete, the Poster would slide horizontally to the right until it\u0027s top/left corner was at x\u003d500.0, y\u003d0.0. As the animation continued from 40% to 100% complete, the Poster would slide vertically down until its top/left corner was at x\u003d500.0, y\u003d200.0.If the first keyframe has a key percentage greater than zero, then the field value will be equal to the keyValue of the first keyframe until \u003cem\u003efraction\u003c/em\u003e reaches the first keyframe\u0027s key percentage. Similarly, if the last keyframe has a key percentage less than one, the field value will be set to the keyValue of the last keyframe from when \u003cem\u003efraction\u003c/em\u003e equals the the last keyframe\u0027s key percentage and will not change as \u003cem\u003efraction\u003c/em\u003e increases from that value to 1.0.Note that while linearly interpolation is used to compute the keyValue\u0027s for \u003cem\u003efraction\u003c/em\u003e values between successive keys, non-linear easing functions may be applied to the \u003cem\u003efraction\u003c/em\u003e values computed by the \u003cstrong\u003eAnimation\u003c/strong\u003e node, so the overall animation may vary in speed.\u0026nbsp;",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Vector2DFieldInterpolator",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "fieldToInterp",
        "key",
        "keyValue",
        "fraction"
      ],
      "documentationVersion": 19
    },
    "Video": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "pauseBufferStart": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "pauseBufferStart",
          "description": "Read-Only The beginning position of the video buffered when paused. This field is only valid for live video.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eThe beginning position of the video buffered when paused. This field is only valid for live video."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "enableScreenSaverWhilePlaying": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "enableScreenSaverWhilePlaying",
          "description": "Set this to true to allow the screensaver to activate even if video is playing, as long as that video does not cover 50% or more of the screen. Set to false to block the screensaver activating if any video is playing.",
          "descriptionHTML": "Set this to true to allow the screensaver to activate even if video is playing, as long as that video does not cover 50% or more of the screen. Set to false to block the screensaver activating if any video is playing."
        },
        "errorCode": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "errorCode",
          "description": "Read-Only The error code associated with the video play error set in the state field.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eThe error code associated with the video play error set in the \u003ccode\u003estate\u003c/code\u003e field.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "audioFormat": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_ONLY",
          "name": "audioFormat",
          "description": "Read-Only Contains the format of the currently playing audio. Value Meaning \"\" No stream playing none  Stream contains no playable audio unknown  Stream contains unknown audio aac  ISO/IEC 14496-3, Advanced Audio Coding aac_adif  ISO/IEC 14496-3, Advanced Audio Coding, ADIF container aac_adts  ISO/IEC 14496-3, Advanced Audio Coding, ADTS container aac_latm  ISO/IEC 14496-3, Advanced Audio Coding, LATM container ac3  Dolby Digital alac Apple Lossless dts  DTS Coherent Acoustics eac3  Dolby Digital Plus flac  Free Lossless Audio Codec mp2  ISO/IEC 11172-3, MPEG Audio Layer II mp3  ISO/IEC 11172-3, MPEG Audio Layer III pcm  linear PCM vorbis  Ogg Vorbis wma  Microsoft Windows Media Audio wmapro  Microsoft Windows Media Pro Audio",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eContains the format of the currently playing audio.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003e\"\"\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eNo stream playing\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003enone\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eStream contains no playable audio\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eunknown\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eStream contains unknown audio\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eaac\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eISO/IEC 14496-3, Advanced Audio Coding\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eaac_adif\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eISO/IEC 14496-3, Advanced Audio Coding, ADIF container\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eaac_adts\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eISO/IEC 14496-3, Advanced Audio Coding, ADTS container\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eaac_latm\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eISO/IEC 14496-3, Advanced Audio Coding, LATM container\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eac3\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eDolby Digital\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003ealac\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eApple Lossless\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003edts\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eDTS Coherent Acoustics\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eeac3\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eDolby Digital Plus\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eflac\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eFree Lossless Audio Codec\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003emp2\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eISO/IEC 11172-3, MPEG Audio Layer II\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003emp3\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eISO/IEC 11172-3, MPEG Audio Layer III\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003epcm\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003elinear PCM\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003evorbis\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eOgg Vorbis\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003ewma\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eMicrosoft Windows Media Audio\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003ewmapro\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eMicrosoft Windows Media Pro Audio\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "\"\"": "No stream playing",
            "alac": "Apple Lossless",
            "aac_latm": "ISO/IEC 14496-3, Advanced Audio Coding, LATM container",
            "aac": "ISO/IEC 14496-3, Advanced Audio Coding",
            "dts": "DTS Coherent Acoustics",
            "eac3": "Dolby Digital Plus",
            "flac": "Free Lossless Audio Codec",
            "wma": "Microsoft Windows Media Audio",
            "none": "Stream contains no playable audio",
            "mp2": "ISO/IEC 11172-3, MPEG Audio Layer II",
            "unknown": "Stream contains unknown audio",
            "ac3": "Dolby Digital",
            "mp3": "ISO/IEC 11172-3, MPEG Audio Layer III",
            "aac_adts": "ISO/IEC 14496-3, Advanced Audio Coding, ADTS container",
            "aac_adif": "ISO/IEC 14496-3, Advanced Audio Coding, ADIF container",
            "pcm": "linear PCM",
            "wmapro": "Microsoft Windows Media Pro Audio",
            "vorbis": "Ogg Vorbis"
          },
          "possibleValuesNames": [
            "\"\"",
            "none",
            "unknown",
            "aac",
            "aac_adif",
            "aac_adts",
            "aac_latm",
            "ac3",
            "alac",
            "dts",
            "eac3",
            "flac",
            "mp2",
            "mp3",
            "pcm",
            "vorbis",
            "wma",
            "wmapro"
          ]
        },
        "seek": {
          "type": "time",
          "defaultValue": "invalid",
          "accessPermission": "WRITE_ONLY",
          "name": "seek",
          "description": "Write-Only Sets the current position in the video. The value is the number seconds from the beginning of the stream, specified as a double.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eWrite-Only\u003cbr\u003e\u003c/strong\u003eSets the current position in the video. The value is the number seconds from the beginning of the stream, specified as a double.\u003c/p\u003e"
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "NULL",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Sets the required and optional play parameters and descriptive for the video.",
          "descriptionHTML": "Sets the required and optional play parameters and descriptive \u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"Content Meta-Data\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e for the video."
        },
        "notificationInterval": {
          "type": "time",
          "defaultValue": "0.5",
          "accessPermission": "READ_WRITE",
          "name": "notificationInterval",
          "description": "The interval between notifications to observers of the position field, specified as the number of seconds. If the value is 0, no notifications are delivered. This value may be read or modified at any time.",
          "descriptionHTML": "The interval between notifications to observers of the position field, specified as the number of seconds. If the value is 0, no notifications are delivered. This value may be read or modified at any time."
        },
        "duration": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "duration",
          "description": "Read-Only The duration of the video being played, specified in seconds. This becomes valid when playback begins and may change if the video is dynamic content, such as a live event.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eThe duration of the video being played, specified in seconds. This becomes valid when playback begins and may change if the video is dynamic content, such as a live event."
        },
        "pauseBufferEnd": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "pauseBufferEnd",
          "description": "Read-Only The ending position of the video buffered when paused. This field is only valid for live video.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eThe ending position of the video buffered when paused. \u003cspan\u003eThis field is only valid for live video.\u003c/span\u003e"
        },
        "availableSubtitleTracks": {
          "type": "array of associative arrays",
          "defaultValue": "[ ] empty array",
          "accessPermission": "READ_ONLY",
          "name": "availableSubtitleTracks",
          "description": "Read-Only The list of subtitle tracks available in the video stream. The array is initially populated with the tracks specified in the Content Meta-Data, and additional tracks are added if they are detected by the digital video player. Each associative array has the following entries: Key Type Value Description string Descriptive name of the subtitle track Language string ISO 639-2 three-letter language code TrackName string The track identifier. The value of this field may be used to select the subtitle track.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eThe list of subtitle tracks available in the video stream. The array is initially populated with the tracks specified in the \u003cstrong\u003eContent Meta-Data\u003c/strong\u003e, and additional tracks are added if they are detected by the digital video player. Each associative array has the following entries:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eKey\u003c/th\u003e\n   \u003cth colspan\u003d\"1\"\u003eType\u003c/th\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eDescription\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003estring\u003c/td\u003e\n   \u003ctd\u003eDescriptive name of the subtitle track\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eLanguage\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003estring\u003c/td\u003e\n   \u003ctd\u003eISO 639-2 three-letter language code\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eTrackName\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003estring\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eThe track identifier. The value of this field may be used to select the subtitle track.\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e"
        },
        "pauseBufferOverflow": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_ONLY",
          "name": "pauseBufferOverflow",
          "description": "Read-Only Indicates that the video buffer was not able to save all video since being paused. This field is only valid for live video.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eIndicates that the video buffer was not able to save all video since being paused. \u003cspan\u003eThis field is only valid for live video.\u003c/span\u003e"
        },
        "subtitleTrack": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "subtitleTrack",
          "description": "The identifier of the selected subtitle track. Subtitles may or may not be visible on the screen, depending upon the user\u0027s caption setting. Reading this field will return the identifier of the current subtitle track, and setting the field will change the track.",
          "descriptionHTML": "The identifier of the selected subtitle track. Subtitles may or may not be visible on the screen, depending upon the user\u0027s caption setting. Reading this field will return the identifier of the current subtitle track, and setting the field will change the track."
        },
        "bufferingStatus": {
          "type": "associative array",
          "defaultValue": "invalid",
          "accessPermission": "READ_ONLY",
          "name": "bufferingStatus",
          "description": "Read-Only Contains information about stream buffering progress and status. This field is valid only while buffering is in progress, both at stream startup or when re-buffering is required. Observers will be notified when any element of the array changes, and also when buffering is complete and the field itself becomes invalid. The array contains the following name - value pairs. Value Meaning percentage Percent buffering complete as an integer. isUnderrun Boolean value indicating if a stream underrun occurred.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eContains information about stream buffering progress and status. This field is valid only while buffering is in progress, both at stream startup or when re-buffering is required. Observers will be notified when any element of the array changes, and also when buffering is complete and the field itself becomes invalid. The array contains the following name - value pairs.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epercentage\u003c/td\u003e\n   \u003ctd\u003ePercent buffering complete as an integer.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eisUnderrun\u003c/td\u003e\n   \u003ctd\u003eBoolean value indicating if a stream underrun occurred.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "isUnderrun": "Boolean value indicating if a stream underrun occurred.",
            "percentage": "Percent buffering complete as an integer."
          },
          "possibleValuesNames": [
            "percentage",
            "isUnderrun"
          ]
        },
        "timedMetaDataSelectionKeys": {
          "type": "array of strings",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "timedMetaDataSelectionKeys",
          "description": "If the video stream contains timed meta data such as ID3 tags, any meta data with a key matching an entry in this array will be set into the timedMetaData field. If any entry in this array is \"*\", then all timed meta data will be selected.",
          "descriptionHTML": "If the video stream contains timed meta data such as ID3 tags, any meta data with a key matching an entry in this array will be set into the timedMetaData field. If any entry in this array is \"*\", then all timed meta data will be selected."
        },
        "state": {
          "type": "value string",
          "defaultValue": "none",
          "accessPermission": "READ_ONLY",
          "name": "state",
          "description": "Read-Only Describes the current video play state, such as if the video play has been paused. Value Meaning none No current play state buffering Video stream is currently buffering  playing Video is currently playing paused Video is currently paused stopped Video is currently stopped finished Video has completed play error  An error has occurred in the video play. The error code and error message can be found in the errorCode and errorMsg fields respectively.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eDescribes the current video play state, such as if the video play has been paused.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eNo current play state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ebuffering\u003c/td\u003e\n   \u003ctd\u003eVideo stream is currently buffering\u0026nbsp;\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eplaying\u003c/td\u003e\n   \u003ctd\u003eVideo is currently playing\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epaused\u003c/td\u003e\n   \u003ctd\u003eVideo is currently paused\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estopped\u003c/td\u003e\n   \u003ctd\u003eVideo is currently stopped\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efinished\u003c/td\u003e\n   \u003ctd\u003eVideo\u0026nbsp;has completed play\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003eerror\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eAn error has occurred in the video play. The error code and error message can be found in the\u0026nbsp;\u003ccode\u003eerrorCode\u003c/code\u003e and \u003ccode\u003eerrorMsg\u003c/code\u003e fields respectively.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "paused": "Video is currently paused",
            "stopped": "Video is currently stopped",
            "buffering": "Video stream is currently buffering",
            "playing": "Video is currently playing",
            "finished": "Video has completed play",
            "none": "No current play state",
            "error": "An error has occurred in the video play. The error code and error message can be found in the errorCode and errorMsg fields respectively."
          },
          "possibleValuesNames": [
            "none",
            "buffering",
            "playing",
            "paused",
            "stopped",
            "finished",
            "error"
          ]
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "height": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Sets the height of the video play window in pixels. If set to 0.0 (the default), the video play window is set to the height of the entire display screen.",
          "descriptionHTML": "Sets the height of the video play window in pixels. If set to 0.0 (the default), the video play window is set to the\u0026nbsp;height of the entire display screen."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "availableAudioTracks": {
          "type": "array of associative arrays",
          "defaultValue": "[ ] empty array",
          "accessPermission": "READ_ONLY",
          "name": "availableAudioTracks",
          "description": "Read-Only Each associative array has the following entries: Key Type Value Language string ISO 639-2 three-letter language code Name string Descriptive name of the audio track Track string The track identifier. The value of this field may be used to select the audio track.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eEach associative array has the following entries:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eKey\u003c/th\u003e\n   \u003cth colspan\u003d\"1\"\u003eType\u003c/th\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eLanguage\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003estring\u003c/td\u003e\n   \u003ctd\u003eISO 639-2 three-letter language code\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eName\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003estring\u003c/td\u003e\n   \u003ctd\u003eDescriptive name of the audio track\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eTrack\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003estring\u003c/td\u003e\n   \u003ctd\u003eThe track identifier. The value of this field may be used to select the audio track.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "streamingSegment": {
          "type": "associative array",
          "defaultValue": "{ }",
          "accessPermission": "READ_ONLY",
          "name": "streamingSegment",
          "description": "Read-Only Information about the video segment that is currently streaming. This is only meaningful for segmented video transports, such as DASH and HLS. The associative array has the following entries: Key Type Value segBitrateBps integer Bitrate of the segment in bits per second segSequence integer The sequence number of the segment in the video segStartTime time The start time of the segment from the start of the video, specified in seconds segUrl string URL of the segment",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eInformation about the video segment that is currently streaming. This is only meaningful for segmented video transports, such as DASH and HLS. The associative array has the following entries:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eKey\u003c/th\u003e\n   \u003cth colspan\u003d\"1\"\u003eType\u003c/th\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003esegBitrateBps\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003einteger\u003c/td\u003e\n   \u003ctd\u003eBitrate of the segment in bits per second\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003esegSequence\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003einteger\u003c/td\u003e\n   \u003ctd\u003eThe sequence number of the segment in the video\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003esegStartTime\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003etime\u003c/td\u003e\n   \u003ctd\u003eThe start time of the segment from the start of the video, specified in seconds\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003esegUrl\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003estring\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eURL of the segment\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e"
        },
        "videoFormat": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_ONLY",
          "name": "videoFormat",
          "description": "Read-Only Contains the format of the currently playing video stream. Value Meaning \"\" No stream playing none Stream contains no playable video unknown Stream contains unknown video hevc ISO/IEC 23008-2, H.265, HEVC hevc_b ISO/IEC 23008-2 Annex-B, H.265, HEVC mpeg1 ISO/IEC 11172-2, MPEG-1 part 2, H.261 mpeg2  ISO/IEC 13818-2, MPEG-2 part 2, H.262 mpeg4_2  ISO/IEC 14496-2, MPEG-4 part 2, H.263 mpeg4_10b  ISO/IEC 14496-10, MPEG-4 part 10 Annex-B, H.264, AVC mpeg4_15  ISO/IEC 14496-15, MPEG-4 part 15, H.264, AVC AVC vc1  Microsoft VC-1 wmv  Microsoft Windows Media Video vp8  VP8 codec vp9  VP9 codec",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eContains the format of the currently playing video stream.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\"\"\u003c/td\u003e\n   \u003ctd\u003eNo\u0026nbsp;stream playing\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eStream contains no playable video\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eunknown\u003c/td\u003e\n   \u003ctd\u003eStream contains unknown video\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ehevc\u003c/td\u003e\n   \u003ctd\u003eISO/IEC 23008-2, H.265, HEVC\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ehevc_b\u003c/td\u003e\n   \u003ctd\u003eISO/IEC 23008-2 Annex-B, H.265, HEVC\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003empeg1\u003c/td\u003e\n   \u003ctd\u003e\u003cp\u003e\u003cspan style\u003d\"font-size: small;\"\u003e\u003cspan style\u003d\"color: rgb(0,0,0);\"\u003eISO/IEC 11172-2, MPEG-1 part 2, H.261 \u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003empeg2\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003e\u003cspan style\u003d\"color: rgb(0,0,0);font-size: small;\"\u003eISO/IEC 13818-2, MPEG-2 part 2, H.262 \u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003empeg4_2\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003e\u003cspan style\u003d\"color: rgb(0,0,0);font-size: small;\"\u003eISO/IEC 14496-2, MPEG-4 part 2, H.263 \u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003empeg4_10b\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003e\u003cspan style\u003d\"color: rgb(0,0,0);font-size: small;\"\u003eISO/IEC 14496-10, MPEG-4 part 10 Annex-B, H.264, AVC \u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003empeg4_15\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003e\u003cspan style\u003d\"color: rgb(0,0,0);font-size: small;\"\u003eISO/IEC 14496-15, MPEG-4 part 15, H.264, AVC \u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003eAVC \u003cbr\u003evc1\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eMicrosoft VC-1\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003ewmv\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eMicrosoft Windows Media Video\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003evp8\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eVP8 codec\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e\u003cp\u003evp9\u0026nbsp;\u003c/p\u003e\u003c/td\u003e\n   \u003ctd\u003eVP9 codec\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "\"\"": "No stream playing",
            "wmv": "Microsoft Windows Media Video",
            "AVC vc1": "Microsoft VC-1",
            "mpeg4_2": "ISO/IEC 14496-2, MPEG-4 part 2, H.263",
            "none": "Stream contains no playable video",
            "mpeg4_15": "ISO/IEC 14496-15, MPEG-4 part 15, H.264, AVC",
            "unknown": "Stream contains unknown video",
            "hevc_b": "ISO/IEC 23008-2 Annex-B, H.265, HEVC",
            "mpeg1": "ISO/IEC 11172-2, MPEG-1 part 2, H.261",
            "mpeg2": "ISO/IEC 13818-2, MPEG-2 part 2, H.262",
            "hevc": "ISO/IEC 23008-2, H.265, HEVC",
            "mpeg4_10b": "ISO/IEC 14496-10, MPEG-4 part 10 Annex-B, H.264, AVC",
            "vp9": "VP9 codec",
            "vp8": "VP8 codec"
          },
          "possibleValuesNames": [
            "\"\"",
            "none",
            "unknown",
            "hevc",
            "hevc_b",
            "mpeg1",
            "mpeg2",
            "mpeg4_2",
            "mpeg4_10b",
            "mpeg4_15",
            "AVC vc1",
            "wmv",
            "vp8",
            "vp9"
          ]
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "audioTrack": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "audioTrack",
          "description": "The track identifier of the audio being played. Reading this field will return the track identifier of the audio being played, and writing this value will change the audio track.",
          "descriptionHTML": "The track identifier of the audio being played. Reading this field will return the track identifier of the audio being played, and writing this value will change the audio track."
        },
        "control": {
          "type": "option string",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "control",
          "description": "Sets the desired play state for the video, such as starting or stopping the video play. Getting the value of this field returns the most recent value set, or none if no value has been set. In order to dynamically monitor the actual state of the video, see the state field. Option Effect none No play state set  play Start video play start Start video play stop Stop video play pause Pause video play resume Resume video play after a pause replay Replay video",
          "descriptionHTML": "\u003cp\u003eSets the desired play state for the video, such as starting or stopping the video play. Getting the value of this field returns the most recent value set, or \u003ccode\u003enone\u003c/code\u003e if no value has been set. In order to dynamically monitor the actual state of the video, see the \u003ccode\u003estate\u003c/code\u003e field.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eNo play state set\u0026nbsp;\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eplay\u003c/td\u003e\n   \u003ctd\u003eStart video play\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estart\u003c/td\u003e\n   \u003ctd\u003eStart video play\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estop\u003c/td\u003e\n   \u003ctd\u003eStop video play\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epause\u003c/td\u003e\n   \u003ctd\u003ePause video play\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eresume\u003c/td\u003e\n   \u003ctd\u003eResume video play after a pause\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ereplay\u003c/td\u003e\n   \u003ctd\u003eReplay video\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "play": "Start video play",
            "resume": "Resume video play after a pause",
            "stop": "Stop video play",
            "start": "Start video play",
            "none": "No play state set",
            "replay": "Replay video",
            "pause": "Pause video play"
          },
          "possibleValuesNames": [
            "none",
            "play",
            "start",
            "stop",
            "pause",
            "resume",
            "replay"
          ]
        },
        "mute": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "mute",
          "description": "Set to true to mute the audio of the video currently playing in the Video node. Set to false to restore audio.",
          "descriptionHTML": "\u003cp\u003eSet to true to mute the audio of the video currently playing in the \u003cstrong\u003eVideo\u003c/strong\u003e node. Set to false to restore audio.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "timedMetaData": {
          "type": "associative array",
          "defaultValue": "{ }",
          "accessPermission": "READ_ONLY",
          "name": "timedMetaData",
          "description": "Read-Only The most recent timed meta data that has been decoded from the video stream. Only meta data with a key that matches an entry in timedMetaDataSelectionKeys will be set into this field. The value of this field is an associative array which contains arbitrary keys and values, as found in the video stream.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eThe most recent timed meta data that has been decoded from the video stream. Only meta data with a key that matches an entry in timedMetaDataSelectionKeys will be set into this field. The value of this field is an associative array which contains arbitrary keys and values, as found in the video stream."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "errorMsg": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_ONLY",
          "name": "errorMsg",
          "description": "Read-Only An error message describing the video play error set in the state field.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eAn error message describing the video play error set in the \u003ccode\u003estate\u003c/code\u003e field.\u003c/p\u003e"
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "width": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Sets the width of the video play window in pixels. If set to 0.0 (the default), the video play window is set to the width of the entire display screen.",
          "descriptionHTML": "Sets the width of the video play window in pixels. If set to 0.0 (the default), the video play window is set to the width of the entire display screen."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "position": {
          "type": "time",
          "defaultValue": "invalid",
          "accessPermission": "READ_ONLY",
          "name": "position",
          "description": "Read-Only The current position in the video play, as the number of seconds.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eThe current position in the video play, as the number of seconds.\u003c/p\u003e"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "enableTrickPlay": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "enableTrickPlay",
          "description": "Controls whether trickplay is allowed during playback.",
          "descriptionHTML": "Controls whether trickplay is allowed during playback."
        }
      },
      "name": "Video",
      "description": "The Video node class provides controlled play of live or VOD video.",
      "descriptionHTML": "The \u003cstrong\u003eVideo\u003c/strong\u003e node class provides\u0026nbsp;controlled play of live or VOD video.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Video",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "width",
        "height",
        "content",
        "control",
        "notificationInterval",
        "enableTrickPlay",
        "enableScreenSaverWhilePlaying",
        "audioTrack",
        "subtitleTrack",
        "mute",
        "timedMetaDataSelectionKeys",
        "seek",
        "state",
        "bufferingStatus",
        "videoFormat",
        "audioFormat",
        "errorCode",
        "errorMsg",
        "position",
        "pauseBufferStart",
        "pauseBufferEnd",
        "pauseBufferOverflow",
        "duration",
        "availableAudioTracks",
        "availableSubtitleTracks",
        "timedMetaData",
        "streamingSegment"
      ],
      "documentationVersion": 60
    },
    "PinDialog": {
      "parentName": "Dialog",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "bulletTextFont": {
          "type": "Font",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "bulletTextFont",
          "description": "When set, the font of the bullet point text",
          "descriptionHTML": "When set, the font of the bullet point text"
        },
        "privacyHintColor": {
          "type": "color",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "privacyHintColor",
          "description": "When set, the color of the privacy hint shown at the bottom of the dialog.",
          "descriptionHTML": "\u003cspan\u003eWhen set, the color of the privacy hint shown at the bottom of the dialog.\u003c/span\u003e"
        },
        "title": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "title",
          "description": "Title of the dialog box",
          "descriptionHTML": "Title of the dialog box"
        },
        "buttonFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonFocused",
          "description": "Read-Only Set to the index of the focused button whenever a button in the group receives the key focus.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eSet to the index of the focused button whenever a button in the group receives the key focus.\u003c/span\u003e"
        },
        "pin": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "pin",
          "description": "Can be used to explicitly set the internal PinPad node PIN value, as well as to access the PIN value entered by the user.",
          "descriptionHTML": "Can be used to explicitly set the internal \u003cstrong\u003ePinPad\u003c/strong\u003e node PIN value, as well as to access the PIN value entered by the user."
        },
        "messageColor": {
          "type": "color",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "messageColor",
          "description": "When set, the color of the message text",
          "descriptionHTML": "When set, the color of the message text"
        },
        "messageFont": {
          "type": "Font",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "messageFont",
          "description": "When set, the font of the message text",
          "descriptionHTML": "When set, the font of the message text"
        },
        "graphicUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "graphicUri",
          "description": "Specifies a bitmap to be displayed in the dialog. The bitmap is displayed below the bullet text region and above the buttons. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed in the dialog. The bitmap is displayed below the\u0026nbsp;bullet text\u0026nbsp;region and above the buttons. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "close": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "WRITE_ONLY",
          "name": "close",
          "description": "Write-Only Causes the dialog to be dismissed. The dialog is dismissed whenever the close field is set, regardless of whether the field is set to true or false.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eCauses the dialog to be dismissed. The dialog is dismissed whenever the \u003ccode\u003eclose\u003c/code\u003e field is set, regardless of whether the field is set to \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e."
        },
        "iconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "iconUri",
          "description": "Specifies a bitmap to be displayed as a small icon next to the dialog title. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed as a small icon next to the dialog title. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "focusButton": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "focusButton",
          "description": "Write-Only  Causes the button with the specified index to receive the focus when the ButtonGroup node has the key focus. Note that if the ButtonGroup node does not have the key focus when the focusButton field is set, the specified button will display the focus footprint as its background.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eWrite-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003eCauses the button with the specified index to receive the focus when the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node has the key focus. Note that if the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node does not have the key focus when the \u003ccode\u003efocusButton\u003c/code\u003e field is set, the specified button will display the focus footprint as its background.\u003c/span\u003e"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "buttons": {
          "type": "array of string",
          "defaultValue": "[ ]",
          "accessPermission": "WRITE_ONLY",
          "name": "buttons",
          "description": "Write-Only Allows a set of Button nodes to be easily created by providing an array of Button labels. Each string in the array will result in a Button node to be added to the ButtonGroup, using the string as the Button label.",
          "descriptionHTML": "\u003cspan\u003e \u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eAllows a set of \u003cstrong\u003eButton\u003c/strong\u003e nodes to be easily created by providing an array of \u003cstrong\u003eButton\u003c/strong\u003e labels. Each string in the array will result in a \u003cstrong\u003eButton\u003c/strong\u003e node to be added to the \u003cstrong\u003eButtonGroup\u003c/strong\u003e, using the string as the \u003cstrong\u003eButton\u003c/strong\u003e label.\u003c/span\u003e"
        },
        "buttonGroup": {
          "type": "ButtonGroup",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "buttonGroup",
          "description": "The dialog internal ButtonGroup node. This allows the appearance attributes of all the Button nodes in the dialog to be easily modified. Since the ButtonGroup node class is derived from the LayoutGroup node class, additional non-Button node children can also be added.",
          "descriptionHTML": "The dialog internal \u003cstrong\u003eButtonGroup\u003c/strong\u003e node. This allows the appearance attributes of all the \u003cstrong\u003eButton\u003c/strong\u003e nodes in the dialog to be easily modified. Since the\u0026nbsp;\u003cstrong\u003eButtonGroup\u003c/strong\u003e node class is derived from the\u0026nbsp;\u003cstrong\u003eLayoutGroup\u003c/strong\u003e node class, additional non-\u003cstrong\u003eButton\u003c/strong\u003e node children can also be added."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "buttonSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonSelected",
          "description": "Read-Only Set to the index of the selected button whenever the user selects a button in the group.",
          "descriptionHTML": "\u003cspan\u003e \u003cspan\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003c/span\u003e \u003cbr\u003eSet to the index of the selected button whenever the user selects a button in the group.\u003c/span\u003e"
        },
        "pinPad": {
          "type": "PinPad node",
          "defaultValue": "system default",
          "accessPermission": "READ_ONLY",
          "name": "pinPad",
          "description": "Read-Only Provides access to the PinDialog node internal PinPad node. The field is read-only, but the fields of the PinPad node it refers to can be read and written, allowing you to fully customize the PinPad node appearance and behavior.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eProvides access to the \u003cstrong\u003ePinDialog\u003c/strong\u003e node internal \u003cstrong\u003ePinPad\u003c/strong\u003e node. The field is read-only, but the fields of the \u003cstrong\u003ePinPad\u003c/strong\u003e node it refers to can be read and written, allowing you to fully customize the \u003cstrong\u003ePinPad\u003c/strong\u003e node\u0026nbsp;appearance and behavior.\u003c/p\u003e"
        },
        "optionsDialog": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "optionsDialog",
          "description": "If set to true, the dialog is automatically dismissed when the Options key is pressed.",
          "descriptionHTML": "If set to true, the dialog is automatically dismissed when the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eOptions\u003c/strong\u003e\u003c/span\u003e key is pressed."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "bulletText": {
          "type": "array of string",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "bulletText",
          "description": "An array of strings to be displayed as a list of bullet points.",
          "descriptionHTML": "An array of strings to be displayed as a list of bullet points."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "message": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "message",
          "description": "The string to be displayed in the message region of the dialog. Newline and carriage return characters in the string result in the message being displayed as several lines of text. In BrightScript, to include a newline in a string, use chr(10). For example: message \u003d \"First line\" + chr(10) + \"Second line\"",
          "descriptionHTML": "\u003cp\u003eThe string to be displayed in the message region of the dialog. Newline and carriage return characters in the string result in the message being displayed as several lines of text. In BrightScript, to include a newline in a string, use chr(10). For example:\u003c/p\u003e\u003cp\u003e\u003ccode\u003emessage \u003d \"First line\" + chr(10) + \"Second line\" \u003c/code\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "dividerUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "dividerUri",
          "description": "Specifies a bitmap to be displayed as the divider between the title region and the remainder of the dialog. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies a bitmap to be displayed as the divider between the title region and the remainder of the dialog. \u003cspan\u003eUsually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e"
        },
        "bulletTextColor": {
          "type": "color",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "bulletTextColor",
          "description": "When set, the color of the bullet point text",
          "descriptionHTML": "When set, the color of the bullet point text"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "wasClosed": {
          "type": "Event",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "wasClosed",
          "description": "Observe-Only Set when the dialog has been closed. The field is set when the dialog close field is set, when the Back or Home key has been pressed, when the Options key has been pressed if the optionsDialog field is set to true, and when the dialog is dismissed because another dialog was displayed.",
          "descriptionHTML": "\u003cstrong\u003eObserve-Only\u003c/strong\u003e \u003cbr\u003eSet when the dialog has been closed. The field is set when the dialog \u003ccode\u003eclose\u003c/code\u003e field is set, when the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eBack\u003c/strong\u003e\u003c/span\u003e or \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eHome\u003c/strong\u003e\u003c/span\u003e key has been pressed, when the \u003cstrong\u003eOptions\u003c/strong\u003e key has been pressed if the \u003ccode\u003eoptionsDialog\u003c/code\u003e field is set to true, and when the dialog is dismissed because another dialog was displayed."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "backgroundUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "backgroundUri",
          "description": "Specifies the bitmap to be displayed as the dialog background. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap to be displayed as the dialog background. Usually this is a 9-patch image to support dynamic resizing. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        }
      },
      "name": "PinDialog",
      "description": "The PinDialog node class is a special type of Dialog node that prompts the user to enter a numeric string. The PinDialog node class includes an internal PinPad node to allow the user to input a numeric value, such as a PIN.The PinDialog node class allows you to add a title (by setting the Dialog node title field), a message (by setting the Dialog node message field), and a set of action buttons (by setting the Dialog node buttons field). The bulletText and graphicUrl fields of the Dialog node should not be set. If those fields are set, the layout of the PinDialog node will likely not look correct.Typically, you will want to set the Dialog node title field to prompt the user to enter a PIN, and add \"OK\" and \"Cancel\" buttons by setting the Dialog node buttons field to [ \"OK\", \"Cancel\" ], then observe the Dialog node buttonSelected field to react when the user presses one of those buttons. At any time, the PinDialog node pin field can be accessed to obtain the PIN value entered by the user.The PinDialog node displays a privacy hint at the bottom of the dialog instructing the user how to show/hide the PinPad node focus indicator with the Options remote key. This provides more privacy for the user when entering a PIN. You should not override this default behavior of the Options remote key in the PinDialog node.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003ePinDialog\u003c/strong\u003e\u0026nbsp;node class is a special type of\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e\u0026nbsp;node that prompts the user to enter a numeric string. The\u0026nbsp;\u003cstrong\u003ePinDialog\u003c/strong\u003e\u0026nbsp;node class includes an internal\u0026nbsp;\n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"PinPad\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003ePinPad\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e\u0026nbsp;node to allow the user to input a numeric value, such as a PIN.The \u003cstrong\u003ePinDialog\u003c/strong\u003e\u0026nbsp;node class allows you to add a title (by setting the \u003cstrong\u003eDialog\u003c/strong\u003e\u0026nbsp;node \u003ccode\u003etitle\u003c/code\u003e\u0026nbsp;field), a message (by setting the \u003cstrong\u003eDialog\u003c/strong\u003e node\u0026nbsp;\u003ccode\u003emessage\u003c/code\u003e field), and a set of action buttons (by setting the \u003cstrong\u003eDialog\u003c/strong\u003e\u0026nbsp;node \u003ccode\u003ebuttons\u003c/code\u003e field). The \u003ccode\u003ebulletText\u003c/code\u003e and \u003ccode\u003egraphicUrl\u003c/code\u003e fields of the \u003cstrong\u003eDialog\u003c/strong\u003e node should not be set. If those fields are set, the layout of the \u003cstrong\u003ePinDialog\u003c/strong\u003e node will likely not look correct.Typically, you will want to set the \u003cstrong\u003eDialog\u003c/strong\u003e node\u0026nbsp;\u003ccode\u003etitle\u003c/code\u003e field to prompt the user to enter a PIN, and add \"OK\" and \"Cancel\" buttons by setting the\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e node buttons field to\u0026nbsp;\u003ccode\u003e[ \"OK\", \"Cancel\"\u0026nbsp;]\u003c/code\u003e, then observe the\u0026nbsp;\u003cstrong\u003eDialog\u003c/strong\u003e node \u003ccode\u003ebuttonSelected\u003c/code\u003e field to react when the user presses one of those buttons. At any time, the\u0026nbsp;\u003cstrong\u003ePinDialog\u003c/strong\u003e node \u003ccode\u003epin\u003c/code\u003e field can be accessed to obtain the PIN value entered by the user.\u003cspan\u003eThe \u003c/span\u003e\u003cstrong\u003ePinDialog\u003c/strong\u003e\u003cspan\u003e node displays a privacy hint at the bottom of the dialog instructing the user how to show/hide the \u003c/span\u003e\u003cstrong\u003ePinPad\u003c/strong\u003e node\u0026nbsp;focus indicator with the \u003cspan style\u003d\"color: rgb(153,51,102);\"\u003e\u003cstrong\u003eOptions\u003c/strong\u003e\u003c/span\u003e remote key. This provides more privacy for the user when entering a PIN. You should \u003cem\u003enot\u003c/em\u003e override this default behavior of the \u003cspan style\u003d\"color: rgb(153,51,102);\"\u003e\u003cstrong\u003eOptions\u003c/strong\u003e\u003c/span\u003e remote key in the \u003cstrong\u003ePinDialog\u003c/strong\u003e node.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/PinDialog",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "title",
        "message",
        "messageColor",
        "messageFont",
        "bulletText",
        "bulletTextColor",
        "bulletTextFont",
        "buttons",
        "buttonGroup",
        "graphicUri",
        "buttonSelected",
        "buttonFocused",
        "focusButton",
        "optionsDialog",
        "backgroundUri",
        "iconUri",
        "dividerUri",
        "close",
        "wasClosed",
        "pin",
        "pinPad",
        "privacyHintColor"
      ],
      "documentationVersion": 14
    },
    "Poster": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "loadSync": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "loadSync",
          "description": "If true, the image is loaded synchronously and appears immediately. If false, the image is loaded asynchronously in a background thread and may not appear immediately. Be careful when setting this field to true, as it might cause brief glitches in the rendering while the image is being fetched and loaded.",
          "descriptionHTML": "If true, the image is loaded synchronously and appears immediately. If false, the image is loaded asynchronously in a background thread and may not appear immediately. Be careful when setting this field to true, as it might cause brief glitches in the rendering while the image is being fetched and loaded."
        },
        "failedBitmapOpacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "failedBitmapOpacity",
          "description": "Used to control the rendering opacity of the graphical image that indicates a bitmap failed to load. This value multiplies the Poster node opacity.",
          "descriptionHTML": "Used to control the rendering opacity of the graphical image that indicates a bitmap failed to load. This value multiplies the \u003cstrong\u003ePoster\u003c/strong\u003e node opacity."
        },
        "enableColorBlending": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "enableColorBlending",
          "description": "If set to true, the value of the blendColor field is use to tint the graphical image by multiplying the color of each pixel by the specified value. If set to false, the graphical image has no tint applied.",
          "descriptionHTML": "If set to true, the value of the \u003ccode\u003eblendColor\u003c/code\u003e field is use to tint the graphical image by multiplying the color of each pixel by the specified value. If set to false, the graphical image has no tint applied."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "loadStatus": {
          "type": "value string",
          "defaultValue": "none",
          "accessPermission": "READ_ONLY",
          "name": "loadStatus",
          "description": "Read-Only  Can be used to track the progress of loading the graphical image file. A typical use of this field is to set an observer so that when the field value changes to ready, an action can be triggered. The possible values are: Value Meaning none No loading or decoding of the graphical image file is taking place loading Graphical image file is being fetched and decoded ready Graphical image file has been fetched and decoded and is ready to be drawn failed Graphical image file could not be loaded for some reason, such as the uri field value is set to a non-existent file location  ",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;\u003cbr\u003e\u003c/span\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eCan be used to track the progress of loading the graphical image file. A typical use of this \u003c/span\u003e\u003cspan\u003efield is to set an observer so that when the field value changes to \u003ccode\u003eready\u003c/code\u003e, an action can be triggered. \u003c/span\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eThe possible values are: \u003c/span\u003e\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eNo loading or decoding of the graphical image file is taking place\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eloading\u003c/td\u003e\n   \u003ctd\u003eGraphical image file is being fetched and decoded\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eready\u003c/td\u003e\n   \u003ctd\u003eGraphical image file has been fetched and decoded and is ready to be drawn\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efailed\u003c/td\u003e\n   \u003ctd\u003eGraphical image file could not be loaded for some reason, such as the \u003ccode\u003euri\u003c/code\u003e \u003cspan\u003efield value is set to a non-existent file location\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e\u003cp\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003e\u0026nbsp;\u003c/span\u003e\u003c/p\u003e",
          "possibleValues": {
            "ready": "Graphical image file has been fetched and decoded and is ready to be drawn",
            "none": "No loading or decoding of the graphical image file is taking place",
            "failed": "Graphical image file could not be loaded for some reason, such as the uri field value is set to a non-existent file location",
            "loading": "Graphical image file is being fetched and decoded"
          },
          "possibleValuesNames": [
            "none",
            "loading",
            "ready",
            "failed"
          ]
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "loadingBitmapOpacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "loadingBitmapOpacity",
          "description": "Used to control the rendering opacity of the graphical image that indicates a bitmap is loading. This value multiplies the Poster node opacity.",
          "descriptionHTML": "Used to control the rendering opacity of the graphical image that indicates a bitmap is loading. This value multiplies the \u003cstrong\u003ePoster\u003c/strong\u003e node opacity."
        },
        "uri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "uri",
          "description": "Specifies the URI of the image file. Images included as part of the application can be referenced using the pkg: prefix.",
          "descriptionHTML": "Specifies the URI of the image file. Images included as part of the application can be referenced using the \u003ccode\u003epkg:\u003c/code\u003e prefix."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "bitmapWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_ONLY",
          "name": "bitmapWidth",
          "description": "Read-Only  After the graphical image file is loaded, contains the width of the graphical image in pixels",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003eAfter the graphical image file is loaded, contains the width of the graphical image in pixels"
        },
        "bitmapHeight": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_ONLY",
          "name": "bitmapHeight",
          "description": "Read-Only  After the graphical image file is loaded, contains the height of the graphical image in pixels",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003eAfter the graphical image file is loaded, contains the height of the\u0026nbsp;graphical image\u0026nbsp;in pixels"
        },
        "width": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of the image in local coordinates. If set to 0.0, the width of the bitmap from the image file is used. If set to a value greater than 0.0, the bitmap is scaled to that width.",
          "descriptionHTML": "Specifies the width of the image in local coordinates. If set to 0.0, the width of the bitmap from the image file is used. If set to a value greater than 0.0, the bitmap is scaled to that width."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "blendColor": {
          "type": "color",
          "defaultValue": "0xFFFFFFFF",
          "accessPermission": "READ_WRITE",
          "name": "blendColor",
          "description": "Can be used to tint the image by multiplying the color of each pixel by the specified value. The field value only has an effect if the enableColorBlending field value is set to true.",
          "descriptionHTML": "Can be used to tint the image by multiplying the color of each pixel by the specified value. The field value only has an effect if the \u003ccode\u003eenableColorBlending\u003c/code\u003e field value is set to true."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "height": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the image in local coordinates. If set to 0.0, the height of the bitmap from the image file is used. If set to a value greater than 0.0, the bitmap is scaled to that height.",
          "descriptionHTML": "Specifies the height of the image in local coordinates. If set to 0.0, the height of the bitmap from the image file is used. If set to a value greater than 0.0, the bitmap is scaled to that height."
        }
      },
      "name": "Poster",
      "description": "The Poster node class draws an image with the top/left corner located at the origin of the node local coordinate system. Because the Poster node class extends the Group node class, a Poster node can have child nodes. For example, a Poster node might have a Label node as a child that draws an annotation on top of the poster.The Poster node class supports JPEG and PNG image files.",
      "descriptionHTML": "The \u003cstrong\u003ePoster\u003c/strong\u003e node class draws an image with the top/left corner located at the origin of the node local coordinate system. Because the\u0026nbsp;\u003cstrong\u003ePoster\u003c/strong\u003e node class extends the \u003cstrong\u003eGroup\u003c/strong\u003e node class, a \u003cstrong\u003ePoster\u003c/strong\u003e node can have child nodes. For example, a \u003cstrong\u003ePoster\u003c/strong\u003e node might have a \u003cstrong\u003eLabel\u003c/strong\u003e node as a child that draws an annotation on top of the poster.The \u003cstrong\u003ePoster\u003c/strong\u003e node class supports JPEG and PNG image files.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Poster",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "uri",
        "width",
        "height",
        "loadSync",
        "loadStatus",
        "bitmapWidth",
        "bitmapHeight",
        "blendColor",
        "enableColorBlending",
        "loadingBitmapOpacity",
        "failedBitmapOpacity"
      ],
      "documentationVersion": 26
    },
    "ParallelAnimation": {
      "parentName": "AnimationBase",
      "isAbstract": false,
      "fields": {
        "delay": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "delay",
          "description": "Delays the start of the animation by the specified number of seconds",
          "descriptionHTML": "Delays the start of the animation by the specified number of seconds"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "repeat": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "repeat",
          "description": "Controls whether the animation stops when it finishes (false) or repeats from the beginning (true)",
          "descriptionHTML": "Controls whether the animation stops when it finishes (false) or repeats from the beginning (true)"
        },
        "control": {
          "type": "option string",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "control",
          "description": "Controls the animation. Supported options include: Option Effect none Initial state with no associated action start Always plays the animation from the beginning stop Stops the animation in its current state pause Pauses the animation in its current state resume If paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning. finish Jumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.  ",
          "descriptionHTML": "\u003cp\u003eControls the animation. Supported\u0026nbsp;options include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eInitial state with no associated action\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estart\u003c/td\u003e\n   \u003ctd\u003eAlways plays the animation from the beginning\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estop\u003c/td\u003e\n   \u003ctd\u003eStops the animation in its current state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epause\u003c/td\u003e\n   \u003ctd\u003ePauses the animation in its current state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eresume\u003c/td\u003e\n   \u003ctd\u003eIf paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efinish\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eJumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.\u0026nbsp;\u0026nbsp;\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "resume": "If paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning.",
            "stop": "Stops the animation in its current state",
            "start": "Always plays the animation from the beginning",
            "finish": "Jumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.",
            "none": "Initial state with no associated action",
            "pause": "Pauses the animation in its current state"
          },
          "possibleValuesNames": [
            "none",
            "start",
            "stop",
            "pause",
            "resume",
            "finish"
          ]
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "state": {
          "type": "value string",
          "defaultValue": "stopped",
          "accessPermission": "READ_ONLY",
          "name": "state",
          "description": "Read-Only  Indicates the state of the animation. Values include: Value Meaning running Indicates that the animation is in progress paused Indicates that the animation has been paused stopped Indicates that the animation has either run to completion or has been explicitly stopped",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003e Indicates the state of the animation. Values include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003erunning\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation is in progress\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epaused\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation has been paused\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estopped\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation has either run to completion or has been explicitly stopped\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "running": "Indicates that the animation is in progress",
            "paused": "Indicates that the animation has been paused",
            "stopped": "Indicates that the animation has either run to completion or has been explicitly stopped"
          },
          "possibleValuesNames": [
            "running",
            "paused",
            "stopped"
          ]
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        }
      },
      "name": "ParallelAnimation",
      "description": "The ParallelAnimation node class allows you to specify that a set of animations should occur simultaneously. The children of a ParallelAnimation node specify the set of animations to be executed. Note that the use of the delay field in the child animations allows the start of the child animations to be offset from one another, if desired.The state field is set to running when any of the child animations is in progress. Once all the animations have run to completion, the state field is set to stopped. ",
      "descriptionHTML": "The \u003cstrong\u003eParallelAnimation\u003c/strong\u003e node class allows you to specify that a set of animations should occur simultaneously. The children of a\u0026nbsp;\u003cstrong\u003eParallelAnimation\u003c/strong\u003e node specify the set of animations to be executed. Note that the use of the \u003ccode\u003edelay\u003c/code\u003e field in the child animations allows the start of the child animations to be offset from one another, if desired.The \u003ccode\u003estate\u003c/code\u003e field is set to \u003ccode\u003erunning\u003c/code\u003e when any of the child animations is in progress. Once all the animations have run to completion, the \u003ccode\u003estate\u003c/code\u003e field is set to \u003ccode\u003estopped\u003c/code\u003e.\u0026nbsp;",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ParallelAnimation",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "control",
        "state",
        "repeat",
        "delay"
      ],
      "documentationVersion": 20
    },
    "ScrollableText": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "color": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "color",
          "description": "Specifies the text color.",
          "descriptionHTML": "Specifies the text color."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "horizAlign": {
          "type": "string",
          "defaultValue": "left",
          "accessPermission": "READ_WRITE",
          "name": "horizAlign",
          "description": "See Horizontal Alignment.",
          "descriptionHTML": "See \n\u003cac:link ac:anchor\u003d\"HorizontalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eHorizontal Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "lineSpacing": {
          "type": "float",
          "defaultValue": "8",
          "accessPermission": "READ_WRITE",
          "name": "lineSpacing",
          "description": "If the text is displayed on more than one line, specifies the amount of additional space added between lines.",
          "descriptionHTML": "\u003cspan\u003eIf the text is displayed on more than one line, specifies the amount of additional space added between lines.\u003c/span\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "scrollbarThumbBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "scrollbarThumbBitmapUri",
          "description": "Specifies the URI of an image file to be loaded to replace the default scrollbar thumb. This should be a 9-patch image so that it can be stretched to the appropriate size.",
          "descriptionHTML": "\u003cspan\u003eSpecifies the URI of an image file to be loaded to replace the default scrollbar thumb. This should be a 9-patch image so that it can be stretched to the appropriate size.\u003c/span\u003e"
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "vertAlign": {
          "type": "string",
          "defaultValue": "top",
          "accessPermission": "READ_WRITE",
          "name": "vertAlign",
          "description": "See Vertical Alignment.",
          "descriptionHTML": "See \n\u003cac:link ac:anchor\u003d\"VerticalAlignment\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eVertical Alignment\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e."
        },
        "width": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of the node. This includes both the area where the text is rendered in addition to the scroll bar on the right.",
          "descriptionHTML": "Specifies the width of the node. This includes both the area where the text is rendered in addition to the scroll bar on the right."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "text": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "text",
          "description": "Specifies the text to be displayed.",
          "descriptionHTML": "Specifies the text to be displayed."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "scrollbarTrackBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "scrollbarTrackBitmapUri",
          "description": "Specifies the URI of an image file to be loaded to replace the default scrollbar track. This should be a 9-patch image so that it can be stretched to the appropriate height specifed by the height field.",
          "descriptionHTML": "Specifies the URI of an image file to be loaded to replace the default scrollbar track. This should be a 9-patch image so that it can be stretched to the appropriate height specifed by the \u003ccode\u003eheight\u003c/code\u003e\u003cspan\u003e\u0026nbsp;field.\u003c/span\u003e"
        },
        "font": {
          "type": "Font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "font",
          "description": "Specifies the Font node to be used.",
          "descriptionHTML": "Specifies the \u003cstrong\u003eFont\u003c/strong\u003e node to be used."
        },
        "height": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the node. If the text to be displayed is larger than this height, a scrollbar is automatically added on the right, allowing users to scroll up and down using the remote\u0027s arrow keys.",
          "descriptionHTML": "Specifies the height of the node. If the text to be displayed is larger than this height, a scrollbar is automatically added on the right, allowing users to scroll up and down using the remote\u0027s arrow keys."
        }
      },
      "name": "ScrollableText",
      "description": "The ScrollableText node class provides an interactive, vertically scrolling pane of text. This is typically used to display several paragraphs of text to the user that are too long to fit onto the display, such as a license agreement.AlignmentThe ScrollableText node class uses the horizAlign and vertAlign fields to allow you to position the rendered text relative to a specified bounding rectangle.Horizontal AlignmentThe horizAlign field allows you to position text horizontally relative to the computed width of the ScrollableText node. The computed width is determined by subtracting the width of the scrollbar from the value specified by the width field.There are three possible values for the horizAlign field:left The left edge of the text is drawn at the 0 x-coordinate position of the ScrollableText node\u0027s local coordinate system. center The horizontal center of each line of text is positioned at the x-coordinate corresponding to half the computed width of the ScrollableText node\u0027s local coordinate system. right The right edge of each line of text is positioned at x-coordinate position corresponding to the computed width of the ScrollableText node\u0027s local coordinate system.In most cases, the horizAlign field should remain set to left.Vertical AlignmentThe vertAlign field allows you to position text vertically relative to the height of the ScrollableText node, as specified by the height field.There are three possible values for the vertAlign field:top  The top edge of the text is drawn at 0 y-coordinate position of the ScrollableText node\u0027s local coordinate system. center  The vertical center of the rendered text is positioned at y-coordinate position corresponding to half the computed height of the ScrollableText node\u0027s local coordinate system. bottom  The text is drawn so that bottom edge of the rendered text is positioned at the y-coordinate position corresponding to the computed height of the ScrollableText node\u0027s local coordinate system.In most cases, the vertAlign field should remain set to top.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eScrollableText\u003c/strong\u003e\u0026nbsp;node class provides an interactive, vertically scrolling pane of text. This is typically used to display several paragraphs of text to the user that are too long to fit onto the display, such as a license agreement.AlignmentThe \u003cstrong\u003eScrollableText\u003c/strong\u003e\u0026nbsp;node class uses the\u0026nbsp;\u003ccode\u003ehorizAlign\u003c/code\u003e\u0026nbsp;and\u0026nbsp;\u003ccode\u003evertAlign\u003c/code\u003e\u0026nbsp;fields to allow you to position the rendered text relative to a specified bounding rectangle.Horizontal AlignmentThe\u0026nbsp;\u003ccode\u003ehorizAlign\u003c/code\u003e\u0026nbsp;field allows you to position text horizontally relative to the computed width of the \u003cstrong\u003eScrollableText\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;node\u003c/span\u003e. The computed width is determined by subtracting the width of the scrollbar from the value specified by the\u0026nbsp;\u003ccode\u003ewidth\u003c/code\u003e field.There are three possible values for the\u0026nbsp;\u003ccode\u003ehorizAlign\u003c/code\u003e\u0026nbsp;field:\u003cli\u003e\u003ccode\u003eleft\u003c/code\u003e\u003cbr\u003eThe left edge of the text is drawn at the 0 x-coordinate position of the\u0026nbsp;\u003cstrong\u003eScrollableText\u003c/strong\u003e\u0026nbsp;node\u0027s local coordinate system.\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e\u003cbr\u003eThe horizontal center of each line of text is positioned at the x-coordinate corresponding to half the computed width of the\u0026nbsp;\u003cstrong\u003eScrollableText\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;node\u0027s local coordinate system.\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eright\u003c/code\u003e\u003cbr\u003eThe right edge of each line of text is positioned at x-coordinate position corresponding to the computed width of the\u0026nbsp;\u003cstrong\u003eScrollableText\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;node\u0027s local coordinate system.\u003c/span\u003e\u003c/li\u003e\u003cspan\u003eIn most cases, the\u0026nbsp;\u003ccode\u003ehorizAlign\u003c/code\u003e field should remain set to\u0026nbsp;\u003cspan\u003e\u003ccode\u003eleft\u003c/code\u003e.\u003c/span\u003e\u003c/span\u003eVertical AlignmentThe\u0026nbsp;\u003ccode\u003evertAlign\u003c/code\u003e\u0026nbsp;field allows you to position text vertically relative to the height of the \u003cstrong\u003eScrollableText\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;node, as specified by the\u0026nbsp;\u003ccode\u003eheight\u003c/code\u003e\u003cspan\u003e\u0026nbsp;field.\u003c/span\u003e\u003c/span\u003eThere are three possible values for the\u0026nbsp;\u003ccode\u003evertAlign\u003c/code\u003e\u0026nbsp;field:\u003cli\u003e\u003ccode\u003etop\u003c/code\u003e\u0026nbsp;\u003cbr\u003eThe top edge of the text is drawn at 0 y-coordinate position of the\u0026nbsp;\u003cstrong\u003eScrollableText\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;node\u0027s local coordinate system.\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e\u0026nbsp;\u003cbr\u003eThe vertical center of the rendered text is positioned at y-coordinate position corresponding to half the computed height of the\u0026nbsp;\u003cstrong\u003eScrollableText\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;node\u0027s local coordinate system.\u003c/span\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebottom\u003c/code\u003e\u0026nbsp;\u003cbr\u003eThe text is drawn so that bottom edge of the rendered text is positioned at the y-coordinate position corresponding to the computed height of the\u0026nbsp;\u003cstrong\u003eScrollableText\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;node\u0027s local coordinate system.\u003c/span\u003e\u003c/li\u003e\u003cspan\u003eIn most cases, the\u0026nbsp;\u003c/span\u003e\u003ccode\u003evertAlign\u003c/code\u003e\u003cspan\u003e field should remain set to\u0026nbsp;\u003c/span\u003e\u003cspan\u003e\u003ccode\u003etop\u003c/code\u003e.\u003c/span\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ScrollableText",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "text",
        "color",
        "font",
        "width",
        "height",
        "lineSpacing",
        "horizAlign",
        "vertAlign",
        "scrollbarTrackBitmapUri",
        "scrollbarThumbBitmapUri"
      ],
      "documentationVersion": 21
    },
    "Group": {
      "parentName": "Node",
      "isAbstract": true,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "Group",
      "description": "Group is the base class of all renderable nodes. Group also provides fields that control the transformation, visibility and opacity of themselves and all of their children.Each Group defines a local coordinate system relative to the coordinate system of its parent node. A 2D matrix that describes how points in the local coordinate system can be transformed into the parent node coordinate system is constructed from the values of the translation, rotation, scale, and scaleRotateCenter fields.The 2D matrix is computed using the values of these four fields in the following order:translating by the negative of the scaleRotateCenter field value scaling by the the scale field value rotating by the rotation field value translating by the the scaleRotateCenter field value translating by the translation field valueIn matrix math terms, the overall 2D matrix is:M \u003d C(-1) S R C TWhere:M is the total matrix C is a 2D translation matrix that describes the location of the scale/rotation center in the node\u0027s local coordinate system C(-1) is the inverse of C S is a 2D scaling matrix R is a 2D rotation matrix T is a 2D translation matrixIn nearly all cases, either the default values for these four fields will be used (in which case, the local coordinate system of the node is the same as the parent node coordinate system), or only a translation will be specified (in which, the local coordinate system is a simple offset from the parent node coordinate system).",
      "descriptionHTML": "\u003cstrong\u003eGroup\u003c/strong\u003e is the base class of all renderable nodes. \u003cstrong\u003eGroup\u003c/strong\u003e also provides fields that control the transformation, visibility and opacity of themselves and all of their children.Each \u003cstrong\u003eGroup\u003c/strong\u003e defines a local coordinate system relative to the coordinate system of its parent node. A 2D matrix that describes how points in the local coordinate system can be transformed into the parent node coordinate system is constructed from the values of the \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e, and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields.The 2D matrix is computed using the values of these four fields in the following order:\u003cli\u003etranslating by the negative of the \u003ccode\u003escaleRotateCenter\u003c/code\u003e field value\u003c/li\u003e\n\u003cli\u003escaling by the the \u003ccode\u003escale\u003c/code\u003e field value\u003c/li\u003e\n\u003cli\u003erotating by the \u003ccode\u003erotation\u003c/code\u003e field value\u003c/li\u003e\n\u003cli\u003etranslating by the the \u003ccode\u003escaleRotateCenter\u003c/code\u003e field value\u003c/li\u003e\n\u003cli\u003etranslating by the \u003ccode\u003etranslation\u003c/code\u003e field value\u003c/li\u003eIn matrix math terms, the overall 2D matrix is:M \u003d \u003cem\u003eC\u003c/em\u003e(-1) \u003cem\u003eS\u003c/em\u003e \u003cem\u003eR\u003c/em\u003e \u003cem\u003eC\u003c/em\u003e \u003cem\u003eT \u003c/em\u003eWhere:\u003cli\u003eM is the total matrix\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eC\u003c/em\u003e is a 2D translation matrix that describes the location of the scale/rotation center in the node\u0027s local coordinate system\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eC\u003c/em\u003e(-1) is the inverse of \u003cem\u003eC\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eS\u003c/em\u003e is a 2D scaling matrix\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eR\u003c/em\u003e is a 2D rotation matrix\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eT\u003c/em\u003e is a 2D translation matrix\u003c/li\u003e\u003cac:rich-text-body\u003e\n In nearly all cases, either the default values for these four fields will be used (in which case, the local coordinate system of the node is the same as the parent node coordinate system), or only a translation will be specified (in which, the local coordinate system is a simple offset from the parent node coordinate system).\n\u003c/ac:rich-text-body\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Group",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass"
      ],
      "documentationVersion": 28
    },
    "MiniKeyboard": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the URI of an image file to replace the default keyboard focus indicator. This should be a 9-patch image so that it can be stretched to the appropriate size for the double width keys.",
          "descriptionHTML": "Specifies the URI of an image file to replace the default keyboard focus indicator. This should be a 9-patch image so that it can be stretched to the appropriate size for the double width keys."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "showTextEditBox": {
          "type": "boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "showTextEditBox",
          "description": "Specifies whether or not the internal TextEditBox node is displayed. In most cases, it is desirable to display the TextEditBox node so that the user can see the string as it is entered. In some cases though, you might want to only show the Keyboard node. In those cases, the text field of the node will still contain the string entered by the user so that it can displayed in some different manner.",
          "descriptionHTML": "\u003cp\u003eSpecifies whether or not the internal \u003cstrong\u003eTextEditBox\u003c/strong\u003e node is displayed. In most cases, it is desirable to display the \u003cstrong\u003eTextEditBox\u003c/strong\u003e node so that the user can see the string as it is entered.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eIn some cases though, you might want to only show the \u003c/span\u003e\u003cstrong\u003eKeyboard\u003c/strong\u003e\u003cspan\u003e node. In those cases, the \u003ccode\u003etext\u003c/code\u003e field of the node will still contain the string entered by the user so that it can displayed in some different manner.\u003c/span\u003e\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "focusedKeyColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "focusedKeyColor",
          "description": "Specifies the color of the key labels and icons when the Keyboard node has the focus",
          "descriptionHTML": "Specifies the color of the key labels and icons when the \u003cstrong\u003eKeyboard\u003c/strong\u003e node has the focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "textEditBox": {
          "type": "TextEditBox node",
          "defaultValue": "system default",
          "accessPermission": "READ_ONLY",
          "name": "textEditBox",
          "description": "Read-Only This provides access to the internal TextEditBox node so its appearance can be modified. You should not set this field, but you can set the fields of the TextEditBox node (such as, myKeyboard.textEditBox.textColor \u003d \"0xFF0000FF\").",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eThis provides access to the internal \u003cstrong\u003eTextEditBox\u003c/strong\u003e node so its appearance can be modified. You should not set this field, but you can set the fields of the \u003cstrong\u003eTextEditBox\u003c/strong\u003e node (such as, \u003ccode\u003emyKeyboard.textEditBox.textColor \u003d \"0xFF0000FF\"\u003c/code\u003e).\u003c/p\u003e"
        },
        "keyColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "keyColor",
          "description": "Specifies the color of the key labels and icons when the Keyboard node does not have the focus",
          "descriptionHTML": "Specifies the color of the key labels and icons when the \u003cstrong\u003eKeyboard\u003c/strong\u003e node does not have the focus"
        },
        "lowerCase": {
          "type": "boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "lowerCase",
          "description": "Specifies whether the 26 letter keys are displayed as lowercase or uppercase.",
          "descriptionHTML": "Specifies whether the 26 letter keys are displayed as lowercase or uppercase."
        },
        "keyboardBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "keyboardBitmapUri",
          "description": "Specifies the URI of an image file to replace the default keyboard image drawn underneath the key label and icons. Note that this image must be carefully designed so that the key positions match the default image. Template images for SD, HD and FHD resolutions are provided below.",
          "descriptionHTML": "\u003cp\u003eSpecifies the URI of an image file to replace the default keyboard image drawn underneath the key label and icons.\u003c/p\u003e\u003cp\u003eNote that this image must be carefully designed so that the key positions match the default image. Template images for SD, HD and FHD resolutions are provided below.\u003c/p\u003e"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "text": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "text",
          "description": "Contains the string of characters that has been entered",
          "descriptionHTML": "Contains the string of characters that has been entered"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "MiniKeyboard",
      "description": "The MiniKeyboard node class allows a user to enter a string of letters and numerals. The string entered is displayed in a TextEditBox node that is part of the MiniKeyboard node.The MiniKeyboard node is intended for users to enter a simple case-insensitive string consisting of the letters A-Z and the numerals 0-9. It is intended for use in functions such as \"Search\", where the entered string need not support general case-sensitive text entry. For general text entry, use a Keyboard node instead.The MiniKeyboard node must have the key focus in order to work properly.The default appearance of the MiniKeyboard node is very transparent, allowing the keyboard to pick up most of its color from what is rendered underneath it. The appearance can be customized by changing the keyboardBitmapUri and other fields.",
      "descriptionHTML": "The \u003cstrong\u003eMiniK\u003c/strong\u003e\u003cstrong\u003eeyboard\u003c/strong\u003e\u0026nbsp;node class allows a user to enter a string of letters and numerals. The string entered is displayed in a\u0026nbsp;\n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"TextEditBox\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eTextEditBox\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e\u0026nbsp;node that is part of the \u003cstrong\u003eMiniK\u003c/strong\u003e\u003cstrong\u003eeyboard\u003c/strong\u003e\u0026nbsp;node.The\u0026nbsp;\u003cstrong\u003eMiniKeyboard\u003c/strong\u003e node is intended for users to enter a simple case-insensitive string consisting of the letters A-Z and the numerals 0-9. It is intended for use in functions such as \"Search\", where the entered string need not support general case-sensitive text entry. For general text entry, use\u0026nbsp;a\u0026nbsp;\n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"Keyboard\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eKeyboard\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e node instead.The\u0026nbsp;\u003cstrong\u003eMiniKeyboard\u003c/strong\u003e\u0026nbsp;node must have the key focus in order to work properly.The default appearance of the\u0026nbsp;\u003cstrong\u003eMiniKeyboard\u003c/strong\u003e\u0026nbsp;node is very transparent, allowing the keyboard to pick up most of its color from what is rendered underneath it. The appearance can be customized by changing the \u003ccode\u003ekeyboardBitmapUri\u003c/code\u003e and other fields.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/MiniKeyboard",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "text",
        "keyColor",
        "focusedKeyColor",
        "keyboardBitmapUri",
        "focusBitmapUri",
        "textEditBox",
        "showTextEditBox",
        "lowerCase"
      ],
      "documentationVersion": 15
    },
    "ListPanel": {
      "parentName": "Panel",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "panelSize": {
          "type": "string",
          "defaultValue": "narrow",
          "accessPermission": "WRITE_ONLY",
          "name": "panelSize",
          "description": "Write-Only  Specifies one of the default panel sizes. Setting the field causes the width and leftPosition fields to be set to values that match the SDK2 preferred layout for a panel of the specified size. Value Meaning narrow Set the width and leftPosition fields to the values for a narrow Panel medium Set the width and leftPosition fields to the values for a medium width Panel wide Set the width and leftPosition fields to the values for a wide Panel full Set the width and leftPosition fields to the values for a full width Panel Note that PanelSet usage mandates that whenever two Panels are visible, they should include either one narrow and one wide panel or two medium width panels. If one Panel is visible, it\u0027s panelSize should be set to \"full\".",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003cbr\u003eSpecifies one of the default panel sizes. Setting the field causes the width and leftPosition fields to be set to values that match the SDK2 preferred layout for a panel of the specified size.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enarrow\u003c/td\u003e\n   \u003ctd\u003eSet the width and leftPosition fields to the values for a narrow Panel\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003emedium\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a medium width Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ewide\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a wide Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efull\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a full width Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e\u003cp\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eNote that PanelSet usage mandates that whenever two Panels are visible, they should include either one narrow and one wide panel or two medium width panels. If one Panel is visible, it\u0027s panelSize should be set to \"full\".\u003c/span\u003e\u003c/p\u003e",
          "possibleValues": {
            "wide": "Set the width and leftPosition fields to the values for a wide Panel",
            "narrow": "Set the width and leftPosition fields to the values for a narrow Panel",
            "medium": "Set the width and leftPosition fields to the values for a medium width Panel",
            "full": "Set the width and leftPosition fields to the values for a full width Panel"
          },
          "possibleValuesNames": [
            "narrow",
            "medium",
            "wide",
            "full"
          ]
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "rightLabel": {
          "type": "Node",
          "defaultValue": "Label node",
          "accessPermission": "READ_WRITE",
          "name": "rightLabel",
          "description": "The rightLabel field is set to a Label node that is positioned just above the right/top corner of the list. Setting the Label node\u0027s text field will cause that text string to be displayed. Setting other fields of the Label node can be used to adjust the Label\u0027s text color and other visual attributes. The rightLabel is often used to display a \"1 of N\" message that reflects the index of the list\u0027s focused item.",
          "descriptionHTML": "\u003cp\u003e\u003cspan\u003eThe rightLabel field is set to a Label node that is positioned just above the right/top corner of the list. Setting the Label node\u0027s text field will cause that text string to be displayed. Setting other fields of the Label node can be used to adjust the Label\u0027s text color and other visual attributes.\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe rightLabel is often used to display a \"1 of N\" message that reflects the index of the list\u0027s focused item.\u003c/span\u003e\u003c/p\u003e"
        },
        "leftPosition": {
          "type": "float",
          "defaultValue": "105",
          "accessPermission": "READ_WRITE",
          "name": "leftPosition",
          "description": "Specifies the horizontal position of the panel relative to the left edge of the PanelSet (which is a the left edge of the display by default). In most cases, this should be set by setting the panelSize field to one of the pre-configure settings.",
          "descriptionHTML": "Specifies the horizontal position of the panel relative to the left edge of the PanelSet (which is a the left edge of the display by default). In most cases, this should be set by setting the panelSize field to one of the pre-configure settings."
        },
        "leftLabel": {
          "type": "Node",
          "defaultValue": "Label node",
          "accessPermission": "READ_WRITE",
          "name": "leftLabel",
          "description": "The leftLabel field is set to a Label node that is positioned just above the left/top corner of the list. Setting the Label node\u0027s text field will cause that text string to be displayed. Setting other fields of the Label node can be used to adjust the Label\u0027s text color and other visual attributes.",
          "descriptionHTML": "The leftLabel field is set to a Label node that is positioned just above the left/top corner of the list. Setting the Label node\u0027s text field will cause that text string to be displayed. Setting other fields of the Label node can be used to adjust the Label\u0027s text color and other visual attributes."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "height": {
          "type": "float",
          "defaultValue": "-1",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the panel. In most cases, this will be set by the PanelSet and should treated as a read-only value.",
          "descriptionHTML": "Specifies the height of the panel. In most cases, this will be set by the PanelSet and should treated as a read-only value."
        },
        "clockText": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "clockText",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting the clockText field will cause that text to be displayed instead of the clock in the overhang when the panel slides into the left position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting the clockText field will cause that text to be displayed instead of the clock in the overhang when the panel slides into the left position of the PanelSet."
        },
        "nextPanel": {
          "type": "Node",
          "defaultValue": "false",
          "accessPermission": "WRITE_ONLY",
          "name": "nextPanel",
          "description": "Write-only When the createNextPanlOnItemFocus field is true, the nextPanel field should be set to a Panel node to the next panel to add to the PanelSet in response to the createNextPanelIndex field being set. It must be set immediately in repsonse to the createNextPanelIndex field being set.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eWrite-only\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cspan\u003eWhen the createNextPanlOnItemFocus field is true, t\u003c/span\u003ehe nextPanel field should be set to a Panel node to the next panel to add to the PanelSet in response to the createNextPanelIndex field being set. It must be set immediately in repsonse to the createNextPanelIndex field being set.\u003c/p\u003e"
        },
        "selectButtonMovesPanelForward": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "selectButtonMovesPanelForward",
          "description": "When set to true, pressing the OK/Select button on the remote control causes the PanelSet focus to move to the next panel.",
          "descriptionHTML": "When set to true, pressing the OK/Select button on the remote control causes the PanelSet focus to move to the next panel."
        },
        "isBackEnabled": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "isBackEnabled",
          "description": "The isBackEnabled field provides information to the PanelSet as to whether or not this panel has another panel to its left. If set to true, the PanelSet\u0027s left arrow indicator is displayed and pressing the left arrow button on the remote triggers the PanelSet to move the focus \"goBackCount\" panels to the left, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s left arrow indicator is not displayed and the left arrow button does not trigger any change to the focused panel.",
          "descriptionHTML": "The isBackEnabled field provides information to the PanelSet as to whether or not this panel has another panel to its left. If set to true, the PanelSet\u0027s left arrow indicator is displayed and pressing the left arrow button on the remote triggers the PanelSet to move the focus \"goBackCount\" panels to the left, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s left arrow indicator is not displayed and the left arrow button does not trigger any change to the focused panel."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "hasNextPanel": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "hasNextPanel",
          "description": "The hasNextPanel field provides information to the PanelSet as to whether or not this panel has another panel to its right. If set to true, the PanelSet\u0027s right arrow indicator is displayed and pressing the right arrow button on the remote triggers the PanelSet to move the focus one panel to the right, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s right arrow indicator is not displayed and the right arrow button does not trigger any change to the focused panel.",
          "descriptionHTML": "The hasNextPanel field provides information to the PanelSet as to whether or not this panel has another panel to its right. If set to true, the PanelSet\u0027s right arrow indicator is displayed and pressing the right arrow button on the remote triggers the PanelSet to move the focus one panel to the right, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s right arrow indicator is not displayed and the right arrow button does not trigger any change to the focused panel."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "leftOrientation": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "leftOrientation",
          "description": "When the panel is used as part of the OverhangPanelSetScene, leftOrientation will be set to true when the panel moves into the left position of the PanelSet and set to false when the panel moves into the right position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, leftOrientation will be set to true when the panel moves into the left position of the PanelSet and set to false when the panel moves into the right position of the PanelSet."
        },
        "showSectionLabels": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "showSectionLabels",
          "description": "If showSectionLabels is set to true and the data for the list node is divided into sections, the Title attribute of the current section will be displayed as the leftLabel of the list. As the list items scroll, the leftLabel will smoothly transition as each section of the list reaches the focus position.",
          "descriptionHTML": "If showSectionLabels is set to true and the data for the list node is divided into sections, the Title attribute of the current section will be displayed as the leftLabel of the list. As the list items scroll, the leftLabel will smoothly transition as each section of the list reaches the focus position."
        },
        "isOffscreenLeft": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "isOffscreenLeft",
          "description": "This field is set by the PanelSet to indicate that the panel is positioned offscreen of the left edge of the PanelSet. This field is often observed to cancel outstanding load requests for images that are displayed on the panel.",
          "descriptionHTML": "This field is set by the PanelSet to indicate that the panel is positioned offscreen of the left edge of the PanelSet. This field is often observed to cancel outstanding load requests for images that are displayed on the panel."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "list": {
          "type": "Node",
          "defaultValue": "NULL",
          "accessPermission": "READ_WRITE",
          "name": "list",
          "description": "The list field should be set to either a LabelList or MarkupList node to be displayed in the Panel. See the LabelList and MarkupList notes above about setting up the list\u0027s layout.",
          "descriptionHTML": "\u003cp\u003eThe list field should be set to either a LabelList or MarkupList node to be displayed in the Panel. See the LabelList and MarkupList notes above about setting up the list\u0027s layout.\u003c/p\u003e"
        },
        "createNextPanelIndex": {
          "type": "integer",
          "defaultValue": "N/A",
          "accessPermission": "READ_ONLY",
          "name": "createNextPanelIndex",
          "description": "Read-only When the createNextPanlOnItemFocus field is true, createNextPanel is set when a new panel needs to be created and added to the PanelSet. The value of the field is the index of the list\u0027s content that should be used to create and populate the new panel. The createNextPanelIndex field is guaranteed to be set exactly once whenever the next panel for the focused list item needs to be created.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-only\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWhen the createNextPanlOnItemFocus field is true, createNextPanel is set when a new panel needs to be created and added to the PanelSet. The value of the field is the index of the list\u0027s content that should be used to create and populate the new panel.\u003c/p\u003e\u003cp\u003eThe createNextPanelIndex field is guaranteed to be set exactly once whenever the next panel for the focused list item needs to be created.\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "overhangTitle": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "overhangTitle",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting the overhangTitle field will cause that text to be displayed as the title in the overhang when the panel slides into the left position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting the overhangTitle field will cause that text to be displayed as the title in the overhang when the panel slides into the left position of the PanelSet."
        },
        "createNextPanelOnItemFocus": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "createNextPanelOnItemFocus",
          "description": "When set to true, the Create Next Panel mechanism is enabled (i.e. the createNextPanelIndex field will be set when a new list item receives the focus). When set to false, the Create Next Panel mechanism is disabled (i.e. the createNextPanelIndex field will not be set when a new list item receives the focus).",
          "descriptionHTML": "When set to true, the Create Next Panel mechanism is enabled (i.e. the createNextPanelIndex field will be set when a new list item receives the focus). When set to false, the Create Next Panel mechanism is disabled (i.e. the createNextPanelIndex field will not be set when a new list item receives the focus)."
        },
        "goBackCount": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "goBackCount",
          "description": "Setting goBackCount field to a value greater than 1 causes the PanelSet to move the focus back that many panels when the user presses the left arrow button, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen.",
          "descriptionHTML": "Setting goBackCount field to a value greater than 1 causes the PanelSet to move the focus back that many panels when the user presses the left arrow button, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen."
        },
        "width": {
          "type": "float",
          "defaultValue": "388",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of the panel in pixels. In most cases, this should be set by setting the panelSize field to one of the pre-configured settings.",
          "descriptionHTML": "Specifies the width of the panel in pixels. In most cases, this should be set by setting the panelSize field to one of the pre-configured settings."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "leftOnly": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "leftOnly",
          "description": "The leftOnly field provides information to the PanelSet that this Panel should never appear in the right position of the PanelSet. When the panel slides into the right position, the PanelSet initiates another slide in the same direction so that the panel does not end up on the right.",
          "descriptionHTML": "The leftOnly field provides information to the PanelSet that this Panel should never appear in the right position of the PanelSet. When the panel slides into the right position, the PanelSet initiates another slide in the same direction so that the panel does not end up on the right."
        },
        "isFullScreen": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "isFullScreen",
          "description": "The isFullScreen field indicates that this panel should be the only panel displayed (i.e. it will take up both the left and right positions in the PanelSet.",
          "descriptionHTML": "The isFullScreen field indicates that this panel should be the only panel displayed (i.e. it will take up both the left and right positions in the PanelSet."
        },
        "optionsAvailable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "optionsAvailable",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting optionsAvailable will enable/disable the options button handling when the panel slides into the left position of the PanelSet. The overhang\u0027s options prompt will change appearance to provide feedback to the user that the options button is enabled/disabled.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting optionsAvailable will enable/disable the options button handling when the panel slides into the left position of the PanelSet. The overhang\u0027s options prompt will change appearance to provide feedback to the user that the options button is enabled/disabled."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "ListPanel",
      "description": "The ListPanel node class allows you to easily create a Panel that adheres to the Roku layout and behavior for panels that contain a LabelList or MarkupList node. The ListPanel provides the following functionality:Resolution appropriate positioning and sizing of the list node Automatic key focus handling (i.e. the list node is set to receive key events when the ListPanel is given the key focus by the PanelSet) Left-justified and right-justified labels that can be used to provide descriptive information about the list (e.g. \"1 of N\", etc.). These labels are automatically positioned and sized appropriately. Simple mechanism for setting up the case where focusing any item in the grid triggers the creation of a new panel to add to the PanelSet Default fade in/out animation of the next panel when the simple mechanism is used Default fade out mask effect applied to the list items at the bottom of the panelAutomatic Create Next Panel FunctionalityOne key feature of the ListPanel node is providing a simple mechanism for setting up the common use case where each time a new item in the grid receives the focus, a new \"next\" panel is added to the PanelSet. This mechanism is enabled or disabled by setting the createNextPanelOnItemFocus field to true or false.createNextPanelOnItemFocus should be set to true when a new right panel should be displayed each time the list\u0027s focused item changes. For example, in the Roku Homescreen, when you navigate up/down the Settings list, a new right panel is displayed that contains information about the currently focused list item. createNextPanelOnItemFocus should be set to false when the right panel should not change in response to the list\u0027s focus changes. When the create next panel mechanism is enabled and the user presses the up or down arrow key, the panel to the right of the ListPanel smoothly fades out, then when the user releases the arrow key, a new right panel is created, added to the PanelSet and smoothly faded in. To implement this, the ListPanel automatically triggers the fade out of the right panel when the up or down arrow key is pressed. When the arrow key is released, the ListPanel will set the createNextPanelIndex field to the index into the list\u0027s content that corresponds to the newly focused list item. In response to the createNextPanelIndex field being set, the ListPanel\u0027s control logic must be written to mmediately create the Panel node for the new right panel and set the nextPanel field to that Panel. The Panel creation must occur in the main scene graph render thread.The createNextPanelIndex field is guaranteed to be set exactly once whenever a new right panel needs to be created and populated with the data that corresponds to the specified index. This may happen when the ListPanel\u0027s data is changed, in response to up or down arrow key releases, or when the PanelSet\u0027s moves the focus onto the ListPanel from the left.For efficiency, sometimes the control logic for the ListPanel may create and hold onto Panel pointers internally so that the next Panel does not have to be newly created each the createNextPanelIndex field is set. If this is done, it is important to never reuse the current Panel node, as that Panel may still be fading out when the new next Panel needs to be created. A typical use case, where all the right Panels are identical other than the data they display, is to create a single pair of Panel nodes and alternate between them each time the createNextPanelIndex field is set, updating the panel data based on the specified list index.LabelList Specific UsageNotesIf you set the list field to a LabelList node, the default values for the itemSize, itemSpacing, numRows and translation fields for the LabelList will be automatically set to the recommended default values for Roku channels. By default, the panel will use the \"narrow\" panelSize. It is possible to override these default values, but in most cases, that will not be necessary.MarkupList Specific Usage NotesIf you set the list field to a MarkupList node, because the MarkupList is by nature custom, you will generally need to set the MarkupList\u0027s itemSize, itemSpacing and numRows fields. The ListPanel will position the list appropriately.",
      "descriptionHTML": "The \u003cstrong\u003eListPanel\u003c/strong\u003e\u0026nbsp;node class allows you to easily create a Panel that adheres to the Roku layout and behavior for panels that contain a\u0026nbsp;\u003cstrong\u003eLabelList \u003c/strong\u003eor \u003cstrong\u003eMarkupList\u003c/strong\u003e node. The\u0026nbsp;\u003cstrong\u003eListPanel\u0026nbsp;\u003c/strong\u003eprovides the following functionality:\u003cli\u003eResolution appropriate positioning and sizing of the list node\u003c/li\u003e\n\u003cli\u003eAutomatic key focus handling (i.e. the list node is set to receive key events when the ListPanel is given the key focus by the PanelSet)\u003c/li\u003e\n\u003cli\u003eLeft-justified and right-justified labels that can be used to provide descriptive information about the list (e.g. \"1 of N\", etc.). These labels are automatically positioned and sized appropriately.\u003c/li\u003e\n\u003cli\u003eS\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eimple mechanism for setting up the case where focusing any item in the grid triggers the creation of a new panel to add to the\u0026nbsp;\u003c/span\u003e\u003cstrong style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003ePanelSet\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eDefault fade in/out animation of the next panel when the simple mechanism is used\u003c/li\u003e\n\u003cli\u003eDefault fade out mask effect applied to the list items at the bottom of the panel\u003c/li\u003eAutomatic Create Next Panel FunctionalityOne key feature of the ListPanel node is providing a simple mechanism for setting up the common use case where each time a new item in the grid receives the focus, a new \"next\" panel is added to the PanelSet. This mechanism is enabled or disabled by setting the createNextPanelOnItemFocus field to true or false.createNextPanelOnItemFocus should be set to true when a new right panel should be displayed each time the list\u0027s focused item changes. For example, in the Roku Homescreen, when you navigate up/down the Settings list, a new right panel is displayed that contains information about the currently focused list item. createNextPanelOnItemFocus should be set to false when the right panel should not change in response to the list\u0027s focus changes.\u0026nbsp;\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eWhen the create next panel mechanism is enabled and the user presses the up or down arrow key, the panel to the right of the ListPanel smoothly fades out, then when the user releases the arrow key, a new right panel is created, added to the PanelSet and smoothly faded in. To implement this, the ListPanel automatically triggers the fade out of the right panel when the up or down arrow key is pressed. When the arrow key is released, the ListPanel will set the createNextPanelIndex field to the index into the list\u0027s content that corresponds to the newly focused list item. In response to the createNextPanelIndex field being set, the ListPanel\u0027s control logic must be written to mmediately create the Panel node for the new right panel and set the nextPanel field to that Panel. The Panel creation must occur in the main scene graph render thread.\u003c/span\u003eThe createNextPanelIndex field is guaranteed to be set exactly once whenever a new right panel needs to be created and populated with the data that corresponds to the specified index. This may happen when the ListPanel\u0027s data is changed, in response to up or down arrow key releases, or when the PanelSet\u0027s moves the focus onto the ListPanel from the left.For efficiency, sometimes the control logic for the ListPanel may create and hold onto Panel pointers internally so that the next Panel does not have to be newly created each the createNextPanelIndex field is set. If this is done, it is important to never reuse the current Panel node, as that Panel may still be fading out when the new next Panel needs to be created. A typical use case, where all the right Panels are identical other than the data they display, is to create a single pair of Panel nodes and alternate between them each time the createNextPanelIndex field is set, updating the panel data based on the specified list index.LabelList Specific UsageNotesIf you set the list field to a LabelList node, the default values for the itemSize, itemSpacing, numRows and translation fields for the LabelList will be automatically set to the recommended default values for Roku channels. By default, the panel will use the \"narrow\" panelSize. It is possible to override these default values, but in most cases, that will not be necessary.MarkupList Specific Usage NotesIf you set the list field to a MarkupList node, because the MarkupList is by nature custom, you will generally need to set the MarkupList\u0027s itemSize, itemSpacing and numRows fields. The ListPanel will position the list appropriately.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ListPanel",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "panelSize",
        "width",
        "height",
        "leftPosition",
        "overhangTitle",
        "clockText",
        "optionsAvailable",
        "leftOrientation",
        "leftOnly",
        "hasNextPanel",
        "isFullScreen",
        "goBackCount",
        "isBackEnabled",
        "selectButtonMovesPanelForward",
        "isOffscreenLeft",
        "list",
        "leftLabel",
        "rightLabel",
        "showSectionLabels",
        "createNextPanelIndex",
        "nextPanel",
        "createNextPanelOnItemFocus"
      ],
      "documentationVersion": 16
    },
    "FloatFieldInterpolator": {
      "parentName": "Node",
      "isAbstract": false,
      "fields": {
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "keyValue": {
          "type": "array of float\u0027s",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "keyValue",
          "description": "Specifies the key values or the interpolator\u0027s keyframes. Each value in the keyValue array corresponds to a value in the key field\u0027s array.The interpolator\u0027s behavior is undefined if the number of values in the key field does not match the number of values in the keyValue field.",
          "descriptionHTML": "\u003cp\u003eSpecifies the key values or the interpolator\u0027s keyframes. Each value in the \u003cem\u003ekeyValue\u003c/em\u003e array corresponds to a value in the \u003cem\u003ekey\u003c/em\u003e field\u0027s array.\u003c/p\u003eThe interpolator\u0027s behavior is undefined if the number of values in the \u003cem\u003ekey\u003c/em\u003e field does not match the number of values in the \u003cem\u003ekeyValue\u003c/em\u003e field."
        },
        "fieldToInterp": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "fieldToInterp",
          "description": "Specifies the field to interpolate. The string should contain the ID of a node in the scene and the name of a field of that node, separated by a colon. For example, \"title:width\" would indicate that the interpolator should be applied to the width field of a node whose id field was \"title\". The specified field must be of type float.",
          "descriptionHTML": "Specifies the field to interpolate. The string should contain the ID of a node in the scene and the name of a field of that node, separated by a colon. For example, \u003ccode\u003e\"title:width\"\u003c/code\u003e would indicate that the interpolator should be applied to the \u003ccode\u003ewidth\u003c/code\u003e field of a node whose \u003ccode\u003eid\u003c/code\u003e field was \u003ccode\u003e\"title\"\u003c/code\u003e. The specified field must be of type float."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "key": {
          "type": "array of float\u0027s",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "key",
          "description": "Specifies the key percentages for the interpolator\u0027s keyframes. Each key percentage should be a unique value from 0 to 1 indicating the percentage of the animation where the keyValue should occur.Behavior is undefined if the number of values in the key field does not match the number of values in the keyValue field.",
          "descriptionHTML": "\u003cp\u003eSpecifies the key percentages for the interpolator\u0027s keyframes. Each key percentage should be a unique value from 0 to 1 indicating the percentage of the animation where the keyValue should occur.\u003c/p\u003eBehavior is undefined if the number of values in the \u003cem\u003ekey\u003c/em\u003e field does not match the number of values in the \u003cem\u003ekeyValue\u003c/em\u003e field."
        },
        "fraction": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "fraction",
          "description": "Specifies the percentage to be used to compute a value for the field.",
          "descriptionHTML": "Specifies the percentage to be used to compute a value for the field."
        }
      },
      "name": "FloatFieldInterpolator",
      "description": "The FloatFieldInterpolator node class specifies a keyframe animation sequence to be applied to a floating point field of a node (such as, an opacity, width or height value.)All field interpolators include a set of key/keyValue pairs that define a keyframe of the animation. Field interpolators are generally used as children of an Animation node. As the animation progresses, it sets the fraction field of its field interpolators to a value between 0 and 1, indicating the percentage of the Animation\u0027s progress. The keyframes of the interpolator include a \"key\", the percentage where the keyframe should occur, and a \"keyValue\", the value that the field should have at that percentage.For example, if a FloatFieldInterpolator had three keyframes, (0.0, 10.0), (0.4, 200.0) and (1.0, 87.0), then when the interpolator\u0027s fraction field was 0.0 (i.e. 0%), the field would be set to 10.0. When fraction was 0.4 (i.e. 40%), the field would be set to 200.0. When fraction was 1.0 (i.e. 100%), the field would be set to 87.0.For values of fraction between 0.0 and 0.4 (e.g. 0.2 or 20%), the field value is determined by linearly interpolating the keyValues for the first two keyframes. In this case, since the key of 0.2 is halfway between the key at 0.0 and the key at 0.4, the field would be set to 10.0 + 0.5 * (10.0 + 200.0) \u003d 105.0. Similarly, when fraction is between the second and third keys (i.e. between 0.4 and 1.0), the field value is determined by linearly interpolating the keyValues of the second and third keyframes.If the first keyframe has a key percentage greater than zero, then the field value will be equal to the keyValue of the first keyframe until fraction reaches the first keyframe\u0027s key percentage. Similarly, if the last keyframe has a key percentage less than one, the field value will be set to the keyValue of the last keyframe from when fraction equals the the last keyframe\u0027s key percentage and will not change as fraction increases from that value to 1.0.Note that while linearly interpolation is used to compute the keyValue\u0027s for fraction values between successive keys, non-linear easing functions may be applied to the fraction values computed by the Animation node, so the overall animation may vary in speed.",
      "descriptionHTML": "The \u003cstrong\u003eFloatFieldInterpolator\u003c/strong\u003e node class specifies a keyframe animation sequence to be applied to a floating point field of a node (such as,\u0026nbsp;an opacity, width or height value.)All field interpolators include a set of key/keyValue pairs that define a keyframe of the animation. Field interpolators are generally used as children of an \u003cstrong\u003eAnimation\u003c/strong\u003e node. As the animation progresses, it sets the \u003cem\u003efraction\u003c/em\u003e field of its field interpolators to a value between 0 and 1, indicating the percentage of the Animation\u0027s progress. The keyframes of the interpolator include a \"key\", the percentage where the keyframe should occur, and a \"keyValue\", the value that the field should have at that percentage.For example, if a \u003cstrong\u003eFloatFieldInterpolator\u003c/strong\u003e had three keyframes, (0.0, 10.0), (0.4, 200.0) and (1.0, 87.0), then when the interpolator\u0027s \u003cem\u003efraction\u003c/em\u003e field was 0.0 (i.e. 0%), the field would be set to 10.0. When \u003cem\u003efraction\u003c/em\u003e was 0.4 (i.e. 40%), the field would be set to 200.0. When \u003cem\u003efraction\u003c/em\u003e was 1.0 (i.e. 100%), the field would be set to 87.0.For values of \u003cem\u003efraction\u003c/em\u003e between 0.0 and 0.4 (e.g. 0.2 or 20%), the field value is determined by linearly interpolating the keyValues for the first two keyframes. In this case, since the key of 0.2 is halfway between the key at 0.0 and the key at 0.4, the field would be set to 10.0 + 0.5 * (10.0 + 200.0) \u003d 105.0. Similarly, when \u003cem\u003efraction\u003c/em\u003e is between the second and third keys (i.e. between 0.4 and 1.0), the field value is determined by linearly interpolating the keyValues of the second and third keyframes.If the first keyframe has a key percentage greater than zero, then the field value will be equal to the keyValue of the first keyframe until \u003cem\u003efraction\u003c/em\u003e reaches the first keyframe\u0027s key percentage. Similarly, if the last keyframe has a key percentage less than one, the field value will be set to the keyValue of the last keyframe from when \u003cem\u003efraction\u003c/em\u003e equals the the last keyframe\u0027s key percentage and will not change as \u003cem\u003efraction\u003c/em\u003e increases from that value to 1.0.Note that while linearly interpolation is used to compute the keyValue\u0027s for \u003cem\u003efraction\u003c/em\u003e values between successive keys, non-linear easing functions may be applied to the \u003cem\u003efraction\u003c/em\u003e values computed by the \u003cstrong\u003eAnimation\u003c/strong\u003e node, so the overall animation may vary in speed.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/FloatFieldInterpolator",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "fieldToInterp",
        "key",
        "keyValue",
        "fraction"
      ],
      "documentationVersion": 25
    },
    "ContentNode": {
      "parentName": "Node",
      "isAbstract": false,
      "fields": {
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        }
      },
      "name": "ContentNode",
      "description": "The ContentNode node class allows you to specify the data used to configure a node or component. Many nodes and components require a ContentNode node as the specification of their content field in order to be properly configured. In general, lists, grids, and panels require a ContentNode node for configuration. The data included in a ContentNode node can be data such as the text for labels in the node or component, and the spacing between items in a list, grid, or panel, including data to create custom lists, grids, and panels. The reference information for every node or component that requires a ContentNode node includes a section that details the requirements of the ContentNode node for that node or component.ContentNode nodes defined as the specification for a node or component content field are typically structured as one ContentNode parent node, with a hierarchy of child nodes that specify the actual data, and sections of data if needed. For example, a node can have several sections that divide the entire list, each with their own section heading, and specific items in that section of the list. The ContentNode node for that LabelList node should have two levels of child ContentNode nodes, one level for the data to configure the list sections, and then another level of child ContentNode nodes for the data for each item in that list section.A ContentNode node can also be used to specify the data for custom components with defined interfaces, and for nodes and components that require Content Meta-Data.Creating ContentNode NodesTo create a ContentNode node object and populate it with data, you can define the ContentNode node in XML markup, or create it using BrightScript. In both cases, you will usually be first creating or defining a parent ContentNode node, then creating or defining children ContentNode nodes below the parent, with possibly other levels of children ContentNode nodes.As an example, to define a ContentNode node with one level of children ContentNode nodes, you should generally:\u003cContentNode role\u003d or id\u003d \u003e   \u003cContentNode content_meta-data_attribute \u003d \"attribute\" ... /\u003e   ... \u003c/ContentNode\u003eThe parent ContentNode node is defined with either a role or an id field, depending on how you want to assign or use the content data. For the nodes classes that have a content field that is to be assigned a ContentNode node, such as LabelList nodes, the parent ContentNode node should be defined as a child node of the node:\u003cLabelList  id \u003d \"labellist\" \u003e   \u003cContentNode  role \u003d \"content\" \u003e     \u003cContentNode title \u003d \"Renderable Nodes\" description \u003d \"Basic Nodes That Show Things\" /\u003e     \u003cContentNode title \u003d \"Z-Order/Parent-Child\" description \u003d \"Scene Graph Tree Order Matters\" /\u003e     \u003cContentNode title \u003d \"Animations\" description \u003d \"Moving Stuff Around and Flashing Lights\" /\u003e     \u003cContentNode title \u003d \"Events and Observers\" description \u003d \"Reacting When Stuff Happens\" /\u003e   \u003c/ContentNode\u003e \u003c/LabelList\u003eIn other cases, you can just use the id field to allow you to access the ContentNode node later as an object for any purpose. In both cases, define additional ContentNode nodes with content fields as children of the parent ContentNode node.To create a ContentNode node in BrightScript, you should generally:Create the ContentNode node object using createObject() Create child ContentNode node objects using createChild() Assign the data to the field(s) of each ContentNode child objectAs follows:ContentNode_object \u003d createObject(\"RoSGNode\",\"ContentNode\") ContentNode_child_object \u003d ContentNode_object.createChild(\"ContentNode\") ContentNode_child_object.field_name \u003d data ... Assigning ContentNode Node Data To Nodes/ComponentsFor nodes and components that require a ContentNode node as the specification of their content field, you can define it as a child of the node or component in XML markup using the role field, or just assign the ContentNode node object to the content field as follows:  NodeComponent.content \u003d ContentNode_objectFor other nodes and components that don\u0027t require a ContentNode node, you can use getChild() or a similar function to locate the specific child ContentNode node object that contains the data you want to assign to a particular node/component field:  ContentNode_child_object \u003d ContentNode_object.getChild(child_number)   NodeComponent.field_name \u003d ContentNode_child_object.field_name",
      "descriptionHTML": "The \u003cstrong\u003eContentNode\u003c/strong\u003e node class allows you to specify the data used to configure a node or component. Many nodes and components require a \u003cstrong\u003eContentNode\u003c/strong\u003e node as the specification of their \u003ccode\u003econtent\u003c/code\u003e field in order to be properly configured. In general, lists, grids, and panels require a \u003cstrong\u003eContentNode\u003c/strong\u003e node for configuration. The data included in a \u003cstrong\u003eContentNode\u003c/strong\u003e node can be data such as the text for labels in the node or component, and the spacing between items in a list, grid, or panel, including data to create custom lists, grids, and panels. The reference information for every node or component that requires a \u003cstrong\u003eContentNode\u003c/strong\u003e node includes a section that details the requirements of the \u003cstrong\u003eContentNode\u003c/strong\u003e node for that node or component.\u003cstrong\u003eContentNode\u003c/strong\u003e nodes defined as the specification for a node or component\u0026nbsp;\u003ccode\u003econtent\u003c/code\u003e field are typically structured as one \u003cstrong\u003eContentNode\u003c/strong\u003e parent node, with a hierarchy of child nodes that specify the actual data, and sections of data if needed. For example, a \u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"LabelList\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e node can have several sections that divide the entire list, each with their own section heading, and specific items in that section of the list. The \u003cstrong\u003eContentNode\u003c/strong\u003e node for that \u003cstrong\u003eLabelList\u003c/strong\u003e node should have two levels of child \u003cstrong\u003eContentNode\u003c/strong\u003e nodes, one level for the data to configure the list sections, and then another level of child \u003cstrong\u003eContentNode\u003c/strong\u003e nodes for the data for each item in that list section.A \u003cstrong\u003eContentNode\u003c/strong\u003e node can also be used to specify the data for custom components with defined interfaces, and for nodes and components that require\u0026nbsp;\n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"Content Meta-Data\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eContent Meta-Data\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e.Creating ContentNode NodesTo create a \u003cstrong\u003eContentNode\u003c/strong\u003e node object and populate it with data, you can define the \u003cstrong\u003eContentNode\u003c/strong\u003e node in XML markup, or create it using BrightScript. In both cases, you will usually be first creating or defining a parent \u003cstrong\u003eContentNode\u003c/strong\u003e node, then creating or defining children \u003cstrong\u003eContentNode\u003c/strong\u003e nodes below the parent, with possibly other levels of children \u003cstrong\u003eContentNode\u003c/strong\u003e nodes.As an example, to define a \u003cstrong\u003eContentNode\u003c/strong\u003e node with one level of children \u003cstrong\u003eContentNode\u003c/strong\u003e nodes, you should generally:\u003ccode\u003e\u0026lt;ContentNode\u0026nbsp;\u003cem\u003erole\u003d or id\u003d\u003c/em\u003e \u0026gt;\u003cbr\u003e\u003c/code\u003e\u003ccode\u003e\u0026nbsp; \u0026lt;ContentNode\u0026nbsp;\u003cem\u003econtent_meta-data_attribute\u003c/em\u003e \u003d \"\u003cem\u003eattribute\u003c/em\u003e\" ... /\u0026gt;\u003cbr\u003e\u0026nbsp;\u0026nbsp;...\u003cbr\u003e\u0026lt;/ContentNode\u0026gt;\u003c/code\u003eThe parent \u003cstrong\u003eContentNode\u003c/strong\u003e node is defined with either a \u003ccode\u003erole\u003c/code\u003e or an \u003ccode\u003eid\u003c/code\u003e field, depending on how you want to assign or use the content data. For the nodes classes that have a \u003ccode\u003econtent\u003c/code\u003e field that is to be assigned a \u003cstrong\u003eContentNode\u003c/strong\u003e node, such as \u003cstrong\u003eLabelList\u003c/strong\u003e nodes,\u0026nbsp;the parent \u003cstrong\u003eContentNode\u003c/strong\u003e node should be defined as a child node of the node:\u003ccode\u003e\u0026lt;LabelList\u0026nbsp; id \u003d \"labellist\" \u0026gt;\u003cbr\u003e\u0026nbsp; \u003c/code\u003e\u003ccode\u003e\u0026lt;ContentNode\u0026nbsp; \u003c/code\u003e\u003ccode\u003erole \u003d \"content\" \u0026gt;\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003c/code\u003e\u003ccode\u003e\u0026lt;ContentNode title \u003d \"Renderable Nodes\" description \u003d \"Basic Nodes That Show Things\" /\u0026gt;\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026lt;ContentNode title \u003d \"Z-Order/Parent-Child\" description \u003d \"Scene Graph Tree Order Matters\" /\u0026gt;\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026lt;ContentNode title \u003d \"Animations\" description \u003d \"Moving Stuff Around and Flashing Lights\" /\u0026gt;\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026lt;ContentNode title \u003d \"Events and Observers\" description \u003d \"Reacting When Stuff Happens\" /\u0026gt;\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026lt;/ContentNode\u0026gt;\u003cbr\u003e\u003c/code\u003e\u003ccode\u003e\u0026lt;/LabelList\u0026gt;\u003c/code\u003eIn other cases, you can just use the \u003ccode\u003eid\u003c/code\u003e field to allow you to access the \u003cstrong\u003eContentNode\u003c/strong\u003e node later as an object for any purpose. In both cases, define additional \u003cstrong\u003eContentNode\u003c/strong\u003e nodes with content fields as children of the parent \u003cstrong\u003eContentNode\u003c/strong\u003e node.To create a \u003cstrong\u003eContentNode\u003c/strong\u003e node in BrightScript, you should generally:\u003cli\u003eCreate the \u003cstrong\u003eContentNode\u003c/strong\u003e node object using \u003ccode\u003ecreateObject()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eCreate child \u003cstrong\u003eContentNode\u003c/strong\u003e node objects using \u003ccode\u003ecreateChild()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAssign the data to the field(s) of each \u003cstrong\u003eContentNode\u003c/strong\u003e child object\u003c/li\u003eAs follows:\u003ccode\u003e\u003cem\u003eContentNode_object\u003c/em\u003e \u003d createObject(\"RoSGNode\",\"ContentNode\")\u003cbr\u003e\u003c/code\u003e\u003ccode\u003e\u003cem\u003eContentNode_child_object\u003c/em\u003e \u003d\u0026nbsp;\u003cem\u003eContentNode_object\u003c/em\u003e.createChild(\"ContentNode\")\u003cbr\u003e\u003c/code\u003e\u003ccode\u003e\u003cem\u003eContentNode_child_object\u003c/em\u003e.\u003cem\u003efield_name\u003c/em\u003e \u003d \u003cem\u003edata\u003cbr\u003e\u003c/em\u003e\u003c/code\u003e\u003ccode\u003e...\u0026nbsp;\u003c/code\u003eAssigning ContentNode Node Data To Nodes/ComponentsFor nodes and components that require a \u003cstrong\u003eContentNode\u003c/strong\u003e node as the specification of their \u003ccode\u003econtent\u003c/code\u003e field, you can define it as a child of the node or component in XML markup using the \u003ccode\u003erole\u003c/code\u003e field, or just assign the \u003cstrong\u003eContentNode\u003c/strong\u003e node object to the \u003ccode\u003econtent\u003c/code\u003e field as follows:\u003ccode\u003e\u0026nbsp; \u003cem\u003eNodeComponent\u003c/em\u003e.content \u003d \u003cem\u003eContentNode_object\u003c/em\u003e\u003c/code\u003eFor other nodes and components that don\u0027t require a \u003cstrong\u003eContentNode\u003c/strong\u003e node, you can use \u003ccode\u003egetChild()\u003c/code\u003e or a similar function to locate the specific child \u003cstrong\u003eContentNode\u003c/strong\u003e node object that contains the data you want to assign to a particular node/component field:\u003ccode\u003e\u0026nbsp; \u003cem\u003eContentNode_child_object\u003c/em\u003e \u003d \u003cem\u003eContentNode_object\u003c/em\u003e.getChild(\u003cem\u003echild_number\u003c/em\u003e)\u003c/code\u003e\u003cbr\u003e\u003ccode\u003e\u0026nbsp; \u003cem\u003eNodeComponent\u003c/em\u003e.\u003cem\u003efield_name\u003c/em\u003e \u003d \u003cem\u003eContentNode_child_object\u003c/em\u003e.\u003cem\u003efield_name\u003c/em\u003e\u003c/code\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ContentNode",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable"
      ],
      "documentationVersion": 47
    },
    "Font": {
      "parentName": "Node",
      "isAbstract": false,
      "fields": {
        "size": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "size",
          "description": "Specifies the size of the font in points.",
          "descriptionHTML": "Specifies the size of the font in points."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "uri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "uri",
          "description": "Specifies a TrueType or OpenType font file. Currently only font files included in the application can be specified.",
          "descriptionHTML": "Specifies a TrueType or OpenType font file. Currently only font files included in the application can be specified."
        }
      },
      "name": "Font",
      "description": "The Font node class specifies the font to be used by a Label node, or any other nodes that render text.Nodes that use fonts include a field that stores a Font node. The font to use is specified by creating a Font node, and setting its uri and size fields.The uri field can be set to any TrueType/OpenType font file. For example, to specify a font in XML markup:\u003cLabel\u003e \u003cFont role\u003d\"font\" uri\u003d\"pkg:/fonts/font.ttf\" size\u003d\"24\" /\u003e \u003c/Label\u003eA default system font can also be specified, such as in the following:\u003cLabel id\u003d\"myLabel\" width\u003d\"200\" height\u003d\"200\" text\u003d\"Hello Label\" font\u003d\"font:MediumBoldSystemFont\" /\u003e The font can also be specified in BrightScript, for example:label \u003d CreateObject(\"roSGNode\", \"Label\") font \u003d CreateObject(\"roSGNode\", \"Font\") font.uri \u003d \"pkg:/fonts/font.ttf\" font.size \u003d 24 label.font \u003d font",
      "descriptionHTML": "The \u003cstrong\u003eFont\u003c/strong\u003e node class specifies the font to be used by a \u003cstrong\u003eLabel\u003c/strong\u003e node, or any other nodes that render text.Nodes that use fonts include a field that stores a \u003cstrong\u003eFont\u003c/strong\u003e node. The font to use is specified by\u0026nbsp;creating a \u003cstrong\u003eFont\u003c/strong\u003e node, and setting its \u003ccode\u003euri\u003c/code\u003e and \u003ccode\u003esize\u003c/code\u003e fields.\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eThe \u003c/span\u003e\u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003euri\u003c/code\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003e field can be set to any TrueType/OpenType font file. For example, to specify a font in XML markup:\u003c/span\u003e\u003cac:plain-text-body\u003e\n \u0026lt;Label\u0026gt; \u0026lt;Font role\u003d\"font\" uri\u003d\"pkg:/fonts/font.ttf\" size\u003d\"24\" /\u0026gt; \u0026lt;/Label\u0026gt; \n\u003c/ac:plain-text-body\u003eA default system font can also be specified, such as in the following:\u003cac:plain-text-body\u003e\n \u0026lt;Label id\u003d\"myLabel\" width\u003d\"200\" height\u003d\"200\" text\u003d\"Hello Label\" font\u003d\"font:MediumBoldSystemFont\" /\u0026gt;\n\u003c/ac:plain-text-body\u003e\u0026nbsp;The font can also be specified in BrightScript, for example:\u003cac:plain-text-body\u003e\n label \u003d CreateObject(\"roSGNode\", \"Label\") font \u003d CreateObject(\"roSGNode\", \"Font\") font.uri \u003d \"pkg:/fonts/font.ttf\" font.size \u003d 24 label.font \u003d font\n\u003c/ac:plain-text-body\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Font",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "uri",
        "size"
      ],
      "documentationVersion": 22
    },
    "PanelSet": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "isGoingBack": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_ONLY",
          "name": "isGoingBack",
          "description": "Read-Only Set to true when the PanelSet node panels are sliding from right to left.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eSet to true when the \u003cstrong\u003ePanelSet\u003c/strong\u003e node panels are sliding from right to left."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "slideDuration": {
          "type": "integer",
          "defaultValue": "500",
          "accessPermission": "READ_WRITE",
          "name": "slideDuration",
          "description": "Milliseconds of the slide transition. The default is 1/2 second.  ",
          "descriptionHTML": "Milliseconds of the slide transition. The default is 1/2 second. \u0026nbsp;"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "numPanels": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "numPanels",
          "description": "Read-Only Contains the current number of Panel nodes that are children of the PanelSet node.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eContains the current number of \u003cstrong\u003ePanel\u003c/strong\u003e nodes that are children of the \u003cstrong\u003ePanelSet\u003c/strong\u003e node."
        },
        "width": {
          "type": "float",
          "defaultValue": "1280",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of the PanelSet node. In most cases, this is set to the display width (such as 1280 for HD).",
          "descriptionHTML": "Specifies the width of the \u003cstrong\u003ePanelSet\u003c/strong\u003e node. In most cases, this is set to the display width (such as\u0026nbsp;1280 for HD)."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "height": {
          "type": "float",
          "defaultValue": "605",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the PanelSet node. In most cases, this is set to the the display height minus the overhang height.",
          "descriptionHTML": "Specifies the height of the \u003cstrong\u003ePanelSet\u003c/strong\u003e node. In most cases, this is set to the the display height minus the overhang height."
        }
      },
      "name": "PanelSet",
      "description": "The PanelSet node provides the panel sliding behavior seen in the Roku home screen. The PanelSet node manages the position of a set of child Panel nodes, and implements the left and right panel sliding behavior. Once a Panel node has been added to a PanelSet node, it remains a child of the PanelSet node unless it is replaced by another Panel node, or slides completely off the right side of the screen.The PanelSet node is designed to display two Panel nodes in most cases, one Panel node on the left and one on the right. When the PanelSet node has focus, and the user presses the Left or Right remote control key, the panels slide to the left or right one position.For example, suppose the PanelSet node has two Panel nodes as children, panel A and panel B. When the user presses the Left key, a new panel, panel C, should be created and added as a child of the the PanelSet node. Adding a panel as a child of the PanelSet node causes all the panels to slide left one position, so that panel A is now offscreen to the left, panel B is in the left position, and panel C is in the right position. If the user presses the Left key again, a new panel, panel D, should be created and added as a child node of the PanelSet node. Adding panel D causes the panels to slide left again so that panels A and B are offscreen to the left, panel C is in the left position, and panel D is in the right position.At this point, if the user presses the Right key, the panels will slide one position to the right, so panel D will slide offscreen to the right, panel C will slide to the right position, and panel B will slide to the left position (panel A is still offscreen to the left). When the sliding animation ends, since panel D is offscreen to the right, it is automatically removed as a child node of the PanelSet node.Panel LayoutFor consistency, it is recommended that panels be set to the default height. Similarly, panels should be set to one of four default width sizes. For each panel width, the default defines a corresponding left position for the panel. This is summarized in the table below, along with the default values for each of these fields:Panel Field Panel Size SD Value HD Value height all 403 605 width narrow 218 388   medium 292 520   wide 363 645   full 520 940 leftPosition narrow 60 105   medium 60 105   wide 63 112   full 100 170Narrow panels should be paired with wide panels, so that both panels fit in the alloted region without overlapping the PanelSet node previous and next arrow indicators. Similarly, medium panels should be paired with medium panels. Only one full-screen width panel can be displayed at a time, so full-screen panels cause both left and right panels to slide on/offscreen when they are added to the PanelSet node.When two panels are onscreen, a default gap is added between the left and right panels. For SD, the spacing is set to 20 pixels. For HD, the spacing is 30 pixels. The PanelSet node positions the left panel so that the panel origin is at (leftPosition, 0) in the PanelSet node coordinate system, where leftPosition is the value of the left Panel node leftPosition field. The PanelSet node positions the right panel so that the panel origin is at (leftPosition  leftWidth + spacing), where leftPosition and leftWidth are the left panel leftPosition and width fields, and spacing is the default horizontal spacing attribute.Note that the PanelSet node positions the origin of each Panel node coordinate system by setting the Panel node translation field, but it does not clip the panel to the rectangle defined by the Panel node width and height fields, so if the Panel node contains a child node with translation set to (-10, -5), that child will be rendered 10 pixels to the right and 5 pixels above the panel origin.Child ManagementThe regular roSGNode child management interface, ifSGNodeChildren , is used for adding panels to the PanelSet node. Since adding children to the PanelSet node can trigger the panels to slide left, care must be taken to use those functions in the expected manner.Typically, the first panel is created, the panel focusedChild field has an observer added, then the panel is added to the PanelSet node with appendChild(). Then focus is set on that panel, causing the focusedChild observer function to be called. The focusedChild observer function typically will create the second panel, add a focusedChild observer on that panel, then add the second panel to the PanelSet node with appendChild(), and so forth.If any panel contains a list or grid, the typical usage is that when the list or grid panel is on the left, each list/grid item creates a different panel on the right. Typically, the list or grid itemUnfocused and itemFocused fields are observed. When the itemUnfocused field changes, the list or grid panel will hide the panel on the right, then when the itemFocused field changes, it will create a new panel for the newly focused list or grid item, and call replaceChild() to cause the old panel to be replaced by the new one.The PanelSet node assumes that:Only Panel nodes are added as PanelSet node children Panels are added only using the appendChild() or createChild() roSGNode functions. The Panel node leftPosition field must be set prior to calling appendChild() or createChild(). Appending a child will trigger a PanelSet node slide action in most cases. Panels can be replaced using the replaceChild() roSGNode function. Panel children should never be removed from the PanelSet node using the removeChild() roSGNode function. The PanelSet node automatically removes Panel node children when they slide offscreen to the right. The insertChild() and removeChild() roSGNode functions are never used.",
      "descriptionHTML": "The \u003cstrong\u003ePanelSet\u003c/strong\u003e node provides the panel sliding behavior seen in the Roku home screen. The \u003cstrong\u003ePanelSet\u003c/strong\u003e node manages the position of a set of child \u003cstrong\u003ePanel\u003c/strong\u003e nodes, and implements the left and right\u0026nbsp;panel sliding behavior. Once a \u003cstrong\u003ePanel\u003c/strong\u003e node has been added to\u0026nbsp;a \u003cstrong\u003ePanelSet\u003c/strong\u003e node, it remains a child of the \u003cstrong\u003ePanelSet\u003c/strong\u003e node unless it is replaced by another \u003cstrong\u003ePanel\u003c/strong\u003e node, or slides completely off the right side of the screen.The \u003cstrong\u003ePanelSet\u003c/strong\u003e node is designed to display two \u003cstrong\u003ePanel\u003c/strong\u003e nodes in most cases, one \u003cstrong\u003ePanel\u003c/strong\u003e node on the left and one on the right. When the \u003cstrong\u003ePanelSet\u003c/strong\u003e node has focus, and the user presses the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e or \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e remote control key, the panels slide to the left or right one position.For example, suppose the \u003cstrong\u003ePanelSet\u003c/strong\u003e node has two \u003cstrong\u003ePanel\u003c/strong\u003e nodes as children, panel A and panel B. When the user presses the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e key, a new panel, panel C, should be created and added as a child of the the \u003cstrong\u003ePanelSet\u003c/strong\u003e node. Adding a panel as a child of the \u003cstrong\u003ePanelSet\u003c/strong\u003e node causes all the panels to slide left one position, so that panel A is now offscreen to the left, panel B is in the left position, and panel C is in the right position. If the user presses the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e key again, a new panel, panel D, should be created and added as a child node of the \u003cstrong\u003ePanelSet\u003c/strong\u003e node. Adding panel D causes the panels to slide left again so that panels A and B are offscreen to the left, panel C is in the left position, and panel D is in the right position.At this point, if the user presses the \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key, the panels will slide one position to the right, so panel D will slide offscreen to the right, panel C will slide to the right position, and panel B will slide to the left position (panel A is still offscreen to the left). When the sliding animation ends, since panel D is offscreen to the right, it is automatically removed as a child node of the \u003cstrong\u003ePanelSet\u003c/strong\u003e node.Panel LayoutFor consistency, it is recommended that panels be set to the default height. Similarly, panels should be set to one of four default width sizes. For each panel width, the default defines a corresponding left position for the panel. This is summarized in the table below, along with the default values for each of these fields:\u003ctbody\u003e\n \u003ctr\u003e\n  \u003cth\u003ePanel Field\u003c/th\u003e\n  \u003cth colspan\u003d\"1\"\u003ePanel Size\u003c/th\u003e\n  \u003cth\u003eSD Value\u003c/th\u003e\n  \u003cth colspan\u003d\"1\"\u003eHD Value\u003c/th\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd\u003eheight\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003eall\u003c/td\u003e\n  \u003ctd\u003e403\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e605\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd\u003ewidth\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003enarrow\u003c/td\u003e\n  \u003ctd\u003e218\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e388\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003emedium\u003c/td\u003e\n  \u003ctd\u003e292\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e520\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003ewide\u003c/td\u003e\n  \u003ctd\u003e\u003cspan\u003e363\u003c/span\u003e\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e\u003cspan\u003e645\u003c/span\u003e\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003efull\u003c/td\u003e\n  \u003ctd\u003e520\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e940\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd\u003eleftPosition\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003enarrow\u003c/td\u003e\n  \u003ctd\u003e60\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e105\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003emedium\u003c/td\u003e\n  \u003ctd\u003e60\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e105\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd colspan\u003d\"1\"\u003e\u0026nbsp;\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003ewide\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e63\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e112\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n  \u003ctd colspan\u003d\"1\"\u003e\u0026nbsp;\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003efull\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e100\u003c/td\u003e\n  \u003ctd colspan\u003d\"1\"\u003e170\u003c/td\u003e\n \u003c/tr\u003e\n\u003c/tbody\u003eNarrow panels should be paired with wide panels, so that both panels fit in the alloted region without overlapping the \u003cstrong\u003ePanelSet\u003c/strong\u003e node\u0026nbsp;previous and next\u0026nbsp;arrow indicators. Similarly, medium panels should be paired with medium panels. Only one full-screen width panel can be displayed at a time, so full-screen \u003cspan\u003epanels cause both left and right panels to slide on/offscreen when they are added to the \u003cstrong\u003ePanelSet\u003c/strong\u003e node.\u003c/span\u003eWhen two panels are onscreen, a default gap is added between the left and right panels. For SD, the spacing is set to 20 pixels. For HD, the spacing is 30 pixels. The \u003cstrong\u003ePanelSet\u003c/strong\u003e node positions the left panel so that the panel origin is at (\u003ccode\u003eleftPosition, 0\u003c/code\u003e) in the \u003cstrong\u003ePanelSet\u003c/strong\u003e node coordinate system, where \u003ccode\u003eleftPosition\u003c/code\u003e is the value of the left \u003cstrong\u003ePanel\u003c/strong\u003e node \u003ccode\u003eleftPosition\u003c/code\u003e field. The \u003cstrong\u003ePanelSet\u003c/strong\u003e node positions the right panel so that the panel origin is at (\u003ccode\u003eleftPosition \u0026nbsp;leftWidth + spacing\u003c/code\u003e), where \u003ccode\u003eleftPosition\u003c/code\u003e and \u003ccode\u003eleftWidth\u003c/code\u003e are the left panel \u003ccode\u003eleftPosition\u003c/code\u003e and \u003ccode\u003ewidth\u003c/code\u003e fields, and spacing is the\u0026nbsp;default horizontal spacing\u0026nbsp;attribute.Note that the \u003cstrong\u003ePanelSet\u003c/strong\u003e node positions the origin of each\u0026nbsp;\u003cstrong\u003ePanel\u003c/strong\u003e node coordinate system by setting the\u0026nbsp;\u003cstrong\u003ePanel\u003c/strong\u003e node \u003ccode\u003etranslation\u003c/code\u003e field, but it does not clip the panel to the rectangle defined by the \u003cstrong\u003ePanel\u003c/strong\u003e node\u0026nbsp;\u003ccode\u003ewidth\u003c/code\u003e and \u003ccode\u003eheight\u003c/code\u003e fields, so if the \u003cstrong\u003ePanel\u003c/strong\u003e node contains a child node with translation set to (\u003ccode\u003e-10, -5\u003c/code\u003e), that child will be rendered 10 pixels to the right and 5 pixels above the panel origin.Child ManagementThe regular \u003cstrong\u003eroSGNode\u003c/strong\u003e child management interface, \n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"ifSGNodeChildren\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eifSGNodeChildren\u003c/strong\u003e\n  \u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003e\u0026nbsp;\u003c/span\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003e, is used for adding panels to the PanelSet node. Since adding children to the PanelSet node can trigger the panels to slide left, care must be taken to use those functions in the expected manner.\u003c/span\u003eTypically, the first panel is created, the panel \u003ccode\u003efocusedChild\u003c/code\u003e field has an observer added, then the panel is added to the \u003cstrong\u003ePanelSet\u003c/strong\u003e node with \u003ccode\u003eappendChild()\u003c/code\u003e. Then focus is set on that panel, causing the \u003ccode\u003efocusedChild\u003c/code\u003e observer function to be called. The \u003ccode\u003efocusedChild\u003c/code\u003e observer function typically will create the second panel, add a \u003ccode\u003efocusedChild\u003c/code\u003e observer on that panel, then add the second panel to the \u003cstrong\u003ePanelSet\u003c/strong\u003e node with \u003ccode\u003eappendChild()\u003c/code\u003e, and so forth.If any panel contains a list or grid, the typical usage is that when the list or grid panel is on the left, each list/grid item creates a different panel on the right. Typically, the list or grid \u003ccode\u003eitemUnfocused\u003c/code\u003e and \u003ccode\u003eitemFocused\u003c/code\u003e fields are observed. When the\u0026nbsp;\u003ccode\u003eitemUnfocused\u003c/code\u003e field changes, the list or grid panel will hide the panel on the right, then when the\u0026nbsp;\u003ccode\u003eitemFocused\u003c/code\u003e field changes, it will create a new panel for the newly focused list or grid item, and call \u003ccode\u003ereplaceChild()\u003c/code\u003e to cause the old panel to be replaced by the new one.The \u003cstrong\u003ePanelSet\u003c/strong\u003e node assumes that:\u003cli\u003eOnly \u003cstrong\u003ePanel\u003c/strong\u003e nodes are added as \u003cstrong\u003ePanelSet\u003c/strong\u003e node children\u003c/li\u003e\n\u003cli\u003ePanels are added only using the \u003ccode\u003eappendChild()\u003c/code\u003e or \u003ccode\u003ecreateChild()\u003c/code\u003e \u003cstrong\u003eroSGNode\u003c/strong\u003e functions. The \u003cstrong\u003ePanel\u003c/strong\u003e node\u0026nbsp;\u003ccode\u003eleftPosition\u003c/code\u003e field must be set prior to calling \u003ccode\u003eappendChild()\u003c/code\u003e or \u003ccode\u003ecreateChild()\u003c/code\u003e. Appending a child will trigger a \u003cstrong\u003ePanelSet\u003c/strong\u003e node slide action in most cases.\u003c/li\u003e\n\u003cli\u003ePanels can be replaced using the \u003ccode\u003ereplaceChild()\u003c/code\u003e \u003cstrong\u003eroSGNode\u003c/strong\u003e function.\u003c/li\u003e\n\u003cli\u003ePanel children should never be removed from the \u003cstrong\u003ePanelSet\u003c/strong\u003e node using the \u003ccode\u003eremoveChild()\u003c/code\u003e \u003cstrong\u003eroSGNode\u003c/strong\u003e function. The \u003cstrong\u003ePanelSet\u003c/strong\u003e node automatically removes \u003cstrong\u003ePanel\u003c/strong\u003e node children when they slide offscreen to the right.\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003einsertChild()\u003c/code\u003e and \u003ccode\u003eremoveChild()\u003c/code\u003e \u003cstrong\u003eroSGNode\u003c/strong\u003e functions\u0026nbsp;are never\u0026nbsp;used.\u003c/li\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/PanelSet",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "width",
        "height",
        "slideDuration",
        "numPanels",
        "isGoingBack"
      ],
      "documentationVersion": 31
    },
    "GridPanel": {
      "parentName": "Panel",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "panelSize": {
          "type": "string",
          "defaultValue": "narrow",
          "accessPermission": "WRITE_ONLY",
          "name": "panelSize",
          "description": "Write-Only  Specifies one of the default panel sizes. Setting the field causes the width and leftPosition fields to be set to values that match the SDK2 preferred layout for a panel of the specified size. Value Meaning narrow Set the width and leftPosition fields to the values for a narrow Panel medium Set the width and leftPosition fields to the values for a medium width Panel wide Set the width and leftPosition fields to the values for a wide Panel full Set the width and leftPosition fields to the values for a full width Panel Note that PanelSet usage mandates that whenever two Panels are visible, they should include either one narrow and one wide panel or two medium width panels. If one Panel is visible, it\u0027s panelSize should be set to \"full\".",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003cbr\u003eSpecifies one of the default panel sizes. Setting the field causes the width and leftPosition fields to be set to values that match the SDK2 preferred layout for a panel of the specified size.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enarrow\u003c/td\u003e\n   \u003ctd\u003eSet the width and leftPosition fields to the values for a narrow Panel\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003emedium\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a medium width Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ewide\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a wide Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efull\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a full width Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e\u003cp\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eNote that PanelSet usage mandates that whenever two Panels are visible, they should include either one narrow and one wide panel or two medium width panels. If one Panel is visible, it\u0027s panelSize should be set to \"full\".\u003c/span\u003e\u003c/p\u003e",
          "possibleValues": {
            "wide": "Set the width and leftPosition fields to the values for a wide Panel",
            "narrow": "Set the width and leftPosition fields to the values for a narrow Panel",
            "medium": "Set the width and leftPosition fields to the values for a medium width Panel",
            "full": "Set the width and leftPosition fields to the values for a full width Panel"
          },
          "possibleValuesNames": [
            "narrow",
            "medium",
            "wide",
            "full"
          ]
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "rightLabel": {
          "type": "Node",
          "defaultValue": "Label node",
          "accessPermission": "READ_WRITE",
          "name": "rightLabel",
          "description": "The rightLabel field is set to a Label node that is positioned just above the right/top corner of the grid. Setting the Label node\u0027s text field will cause that text string to be displayed. Setting other fields of the Label node can be used to adjust the Label\u0027s text color and other visual attributes. The rightLabel is often used to display a \"1 of N\" message that reflects the index of the grid\u0027s focused item.",
          "descriptionHTML": "\u003cp\u003eThe rightLabel field is set to a Label node that is positioned just above the right/top corner of the grid. Setting the Label node\u0027s text field will cause that text string to be displayed. Setting other fields of the Label node can be used to adjust the Label\u0027s text color and other visual attributes.\u003c/p\u003e\u003cp\u003eThe rightLabel is often used to display a \"1 of N\" message that reflects the index of the grid\u0027s focused item.\u003c/p\u003e"
        },
        "leftPosition": {
          "type": "float",
          "defaultValue": "105",
          "accessPermission": "READ_WRITE",
          "name": "leftPosition",
          "description": "Specifies the horizontal position of the panel relative to the left edge of the PanelSet (which is a the left edge of the display by default). In most cases, this should be set by setting the panelSize field to one of the pre-configure settings.",
          "descriptionHTML": "Specifies the horizontal position of the panel relative to the left edge of the PanelSet (which is a the left edge of the display by default). In most cases, this should be set by setting the panelSize field to one of the pre-configure settings."
        },
        "leftLabel": {
          "type": "Node",
          "defaultValue": "Label node",
          "accessPermission": "READ_WRITE",
          "name": "leftLabel",
          "description": "The leftLabel field is set to a Label node that is positioned just above the left/top corner of the grid. Setting the Label node\u0027s text field will cause that text string to be displayed. Setting other fields of the Label node can be used to adjust the Label\u0027s text color and other visual attributes.",
          "descriptionHTML": "The leftLabel field is set to a Label node that is positioned just above the left/top corner of the grid. Setting the Label node\u0027s text field will cause that text string to be displayed. Setting other fields of the Label node can be used to adjust the Label\u0027s text color and other visual attributes."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "height": {
          "type": "float",
          "defaultValue": "-1",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the panel. In most cases, this will be set by the PanelSet and should treated as a read-only value.",
          "descriptionHTML": "Specifies the height of the panel. In most cases, this will be set by the PanelSet and should treated as a read-only value."
        },
        "clockText": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "clockText",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting the clockText field will cause that text to be displayed instead of the clock in the overhang when the panel slides into the left position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting the clockText field will cause that text to be displayed instead of the clock in the overhang when the panel slides into the left position of the PanelSet."
        },
        "nextPanel": {
          "type": "Node",
          "defaultValue": "false",
          "accessPermission": "WRITE_ONLY",
          "name": "nextPanel",
          "description": "Write-only When the createNextPanlOnItemFocus field is true, the nextPanel field should be set to a Panel node to the next panel to add to the PanelSet in response to the createNextPanelIndex field being set. It must be set immediately in repsonse to the createNextPanelIndex field being set.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eWrite-only\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWhen the createNextPanlOnItemFocus field is true, the nextPanel field should be set to a Panel node to the next panel to add to the PanelSet in response to the createNextPanelIndex field being set. It must be set immediately in repsonse to the createNextPanelIndex field being set.\u003c/p\u003e"
        },
        "selectButtonMovesPanelForward": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "selectButtonMovesPanelForward",
          "description": "When set to true, pressing the OK/Select button on the remote control causes the PanelSet focus to move to the next panel.",
          "descriptionHTML": "When set to true, pressing the OK/Select button on the remote control causes the PanelSet focus to move to the next panel."
        },
        "isBackEnabled": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "isBackEnabled",
          "description": "The isBackEnabled field provides information to the PanelSet as to whether or not this panel has another panel to its left. If set to true, the PanelSet\u0027s left arrow indicator is displayed and pressing the left arrow button on the remote triggers the PanelSet to move the focus \"goBackCount\" panels to the left, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s left arrow indicator is not displayed and the left arrow button does not trigger any change to the focused panel.",
          "descriptionHTML": "The isBackEnabled field provides information to the PanelSet as to whether or not this panel has another panel to its left. If set to true, the PanelSet\u0027s left arrow indicator is displayed and pressing the left arrow button on the remote triggers the PanelSet to move the focus \"goBackCount\" panels to the left, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s left arrow indicator is not displayed and the left arrow button does not trigger any change to the focused panel."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "hasNextPanel": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "hasNextPanel",
          "description": "The hasNextPanel field provides information to the PanelSet as to whether or not this panel has another panel to its right. If set to true, the PanelSet\u0027s right arrow indicator is displayed and pressing the right arrow button on the remote triggers the PanelSet to move the focus one panel to the right, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s right arrow indicator is not displayed and the right arrow button does not trigger any change to the focused panel.",
          "descriptionHTML": "The hasNextPanel field provides information to the PanelSet as to whether or not this panel has another panel to its right. If set to true, the PanelSet\u0027s right arrow indicator is displayed and pressing the right arrow button on the remote triggers the PanelSet to move the focus one panel to the right, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s right arrow indicator is not displayed and the right arrow button does not trigger any change to the focused panel."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "leftOrientation": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "leftOrientation",
          "description": "When the panel is used as part of the OverhangPanelSetScene, leftOrientation will be set to true when the panel moves into the left position of the PanelSet and set to false when the panel moves into the right position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, leftOrientation will be set to true when the panel moves into the left position of the PanelSet and set to false when the panel moves into the right position of the PanelSet."
        },
        "showSectionLabels": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "showSectionLabels",
          "description": "If showSectionLabels is set to true and the data for the grid node is divided into sections, the Title attribute of the current section will be displayed as the leftLabel of the grid. As the grid items scroll, the leftLabel will smoothly transition as each section of the grid reaches the focus position.",
          "descriptionHTML": "If showSectionLabels is set to true and the data for the grid node is divided into sections, the Title attribute of the current section will be displayed as the leftLabel of the grid. As the grid items scroll, the leftLabel will smoothly transition as each section of the grid reaches the focus position."
        },
        "isOffscreenLeft": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "isOffscreenLeft",
          "description": "This field is set by the PanelSet to indicate that the panel is positioned offscreen of the left edge of the PanelSet. This field is often observed to cancel outstanding load requests for images that are displayed on the panel.",
          "descriptionHTML": "This field is set by the PanelSet to indicate that the panel is positioned offscreen of the left edge of the PanelSet. This field is often observed to cancel outstanding load requests for images that are displayed on the panel."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "createNextPanelIndex": {
          "type": "integer",
          "defaultValue": "N/A",
          "accessPermission": "READ_ONLY",
          "name": "createNextPanelIndex",
          "description": "Read-only When the createNextPanlOnItemFocus field is true, createNextPanel is set when a new panel needs to be created and added to the PanelSet. The value of the field is the index of the grid\u0027s content that should be used to create and populate the new panel. The createNextPanelIndex field is guaranteed to be set exactly once whenever the next panel for the focused grid item needs to be created.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-only\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWhen the createNextPanlOnItemFocus field is true, createNextPanel is set when a new panel needs to be created and added to the PanelSet. The value of the field is the index of the grid\u0027s content that should be used to create and populate the new panel.\u003c/p\u003e\u003cp\u003eThe createNextPanelIndex field is guaranteed to be set exactly once whenever the next panel for the focused grid item needs to be created.\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "overhangTitle": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "overhangTitle",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting the overhangTitle field will cause that text to be displayed as the title in the overhang when the panel slides into the left position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting the overhangTitle field will cause that text to be displayed as the title in the overhang when the panel slides into the left position of the PanelSet."
        },
        "createNextPanelOnItemFocus": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "createNextPanelOnItemFocus",
          "description": "When set to true, the Create Next Panel mechanism is enabled (i.e. the createNextPanelIndex field will be set when a new grid item receives the focus). When set to false, the Create Next Panel mechanism is disabled (i.e. the createNextPanelIndex field will not be set when a new grid item receives the focus).",
          "descriptionHTML": "When set to true, the Create Next Panel mechanism is enabled (i.e. the createNextPanelIndex field will be set when a new grid item receives the focus). When set to false, the Create Next Panel mechanism is disabled (i.e. the createNextPanelIndex field will not be set when a new grid item receives the focus)."
        },
        "grid": {
          "type": "Node",
          "defaultValue": "NULL",
          "accessPermission": "READ_WRITE",
          "name": "grid",
          "description": "The grid field should be set to either a PosterGrid or MarkupGri node to be displayed in the Panel. In general, because the layout of any grid is usually custom, you will generally need to set the grid\u0027s itemSize, itemSpacing, numRows and numColumns fields. The GridPanel will position the grid appropriately.",
          "descriptionHTML": "\u003cp\u003eThe grid field should be set to either a PosterGrid or MarkupGri node to be displayed in the Panel. \u003cspan\u003eIn general, because the layout of any grid is usually custom, you will generally need to set the grid\u0027s itemSize, itemSpacing, numRows and numColumns fields. The GridPanel will position the grid appropriately.\u003c/span\u003e\u003c/p\u003e"
        },
        "goBackCount": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "goBackCount",
          "description": "Setting goBackCount field to a value greater than 1 causes the PanelSet to move the focus back that many panels when the user presses the left arrow button, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen.",
          "descriptionHTML": "Setting goBackCount field to a value greater than 1 causes the PanelSet to move the focus back that many panels when the user presses the left arrow button, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen."
        },
        "width": {
          "type": "float",
          "defaultValue": "388",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of the panel in pixels. In most cases, this should be set by setting the panelSize field to one of the pre-configured settings.",
          "descriptionHTML": "Specifies the width of the panel in pixels. In most cases, this should be set by setting the panelSize field to one of the pre-configured settings."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "leftOnly": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "leftOnly",
          "description": "The leftOnly field provides information to the PanelSet that this Panel should never appear in the right position of the PanelSet. When the panel slides into the right position, the PanelSet initiates another slide in the same direction so that the panel does not end up on the right.",
          "descriptionHTML": "The leftOnly field provides information to the PanelSet that this Panel should never appear in the right position of the PanelSet. When the panel slides into the right position, the PanelSet initiates another slide in the same direction so that the panel does not end up on the right."
        },
        "isFullScreen": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "isFullScreen",
          "description": "The isFullScreen field indicates that this panel should be the only panel displayed (i.e. it will take up both the left and right positions in the PanelSet.",
          "descriptionHTML": "The isFullScreen field indicates that this panel should be the only panel displayed (i.e. it will take up both the left and right positions in the PanelSet."
        },
        "optionsAvailable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "optionsAvailable",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting optionsAvailable will enable/disable the options button handling when the panel slides into the left position of the PanelSet. The overhang\u0027s options prompt will change appearance to provide feedback to the user that the options button is enabled/disabled.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting optionsAvailable will enable/disable the options button handling when the panel slides into the left position of the PanelSet. The overhang\u0027s options prompt will change appearance to provide feedback to the user that the options button is enabled/disabled."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "GridPanel",
      "description": "The GridPanel node class allows you to easily create a Panel that adheres to the Roku layout and behavior for panels that contain a PosterGrid or MarkupGrid node. The GridPanel node class provides the following functionality:Resolution appropriate positioning and sizing of the grid node Automatic key focus handling (i.e. the grid node is set to receive key events when the GridPanel is given the key focus by the PanelSet) Left-justified and right-justified labels that can be used to provide descriptive information about the grid (e.g. \"1 of N\", etc.). These labels are automatically positioned and sized appropriately. Simple mechanism for setting up the case where focusing any item in the grid triggers the creation of a new panel to add to the PanelSet Default fade in/out animation of the next panel when the simple mechanism is used Default fade out mask effect applied to the grid items at the bottom of the panelAutomatic Create Next Panel FunctionalityOne key feature of the GridPanel node is providing a simple mechanism for setting up the common use case where each time a new item in the list receives the focus, a new \"next\" panel is added to the PanelSet. This mechanism is enabled or disabled by setting the createNextPanelOnItemFocus field to true or false.createNextPanelOnItemFocus should be set to true when a new right panel should be displayed each time the grid\u0027s focused item changes. For example, in the Roku Homescreen, when you navigate up/down/left/right in Streaming Channels grid, a new right panel is displayed that contains information about the currently focused grid item. createNextPanelOnItemFocus should be set to false when the right panel should not change in response to the grid\u0027s focus changes. For example, when focus is on the installed channels grid in the Roku Homescreen, the right panel always displays an ad panel, regardless of which item is focused in the grid.When the create next panel mechanism is enabled and the user presses a navigation arrow key, the panel to the right of the GridPanel smoothly fades out, then when the user releases the arrow key, a new right panel is created, added to the PanelSet and smoothly faded in. To implement this, the GridPanel automatically triggers the fade out of the right panel when the navigation arrow key is pressed. When the arrow key is released, the GridPanel will set the createNextPanelIndex field to the index into the grid\u0027s content that corresponds to the newly focused grid item. In response to the createNextPanelIndex field being set, the GridPanel\u0027s control logic must be written to immediately create the Panel node for the new right panel and set the nextPanel field to that Panel. The Panel creation must occur in the main scene graph render thread.The createNextPanelIndex field is guaranteed to be set exactly once whenever a new right panel needs to be created and populated with the data that corresponds to the specified index. This may happen when the GridPanel\u0027s data is changed, in response to up or down arrow key releases, or when the PanelSet\u0027s moves the focus onto the GridPanel from the left.For efficiency, sometimes the control logic for the GridPanel may create and hold onto Panel pointers internally so that the next Panel does not have to be newly created each the createNextPanelIndex field is set. If this is done, it is important to never reuse the current Panel node, as that Panel may still be fading out when the new next Panel needs to be created. A typical use case, where all the right Panels are identical other than the data they display, is to create a single pair of Panel nodes and alternate between them each time the createNextPanelIndex field is set, updating the panel data based on the specified list index.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eGridPanel\u003c/strong\u003e\u0026nbsp;node class allows you to easily create a Panel that adheres to the Roku layout and behavior for panels that contain a\u0026nbsp;\u003cstrong\u003ePosterGrid\u0026nbsp;\u003c/strong\u003eor\u0026nbsp;\u003cstrong\u003eMarkupGrid\u003c/strong\u003e\u0026nbsp;node. The \u003cstrong\u003eGridPanel\u003c/strong\u003e\u0026nbsp;node class provides the following functionality:\u003cli\u003eResolution appropriate positioning and sizing of the grid node\u003c/li\u003e\n\u003cli\u003eAutomatic key focus handling (i.e. the grid node is set to receive key events when the GridPanel is given the key focus by the PanelSet)\u003c/li\u003e\n\u003cli\u003eLeft-justified and right-justified labels that can be used to provide descriptive information about the grid (e.g. \"1 of N\", etc.). These labels are automatically positioned and sized appropriately.\u003c/li\u003e\n\u003cli\u003eSimple mechanism for setting up the case where focusing any item in the grid triggers the creation of a new panel to add to the\u0026nbsp;\u003cstrong\u003ePanelSet\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eDefault fade in/out animation of the next panel when the simple mechanism is used\u003c/li\u003e\n\u003cli\u003eDefault fade out mask effect applied to the grid items at the bottom of the panel\u003c/li\u003eAutomatic Create Next Panel FunctionalityOne key feature of the GridPanel node is providing a simple mechanism for setting up the common use case where each time a new item in the list receives the focus, a new \"next\" panel is added to the PanelSet. This mechanism is enabled or disabled by setting the createNextPanelOnItemFocus field to true or false.createNextPanelOnItemFocus should be set to true when a new right panel should be displayed each time the grid\u0027s focused item changes. For example, in the Roku Homescreen, when you navigate up/down/left/right in Streaming Channels grid, a new right panel is displayed that contains information about the currently focused grid item. createNextPanelOnItemFocus should be set to false when the right panel should not change in response to the grid\u0027s focus changes. For example, when focus is on the installed channels grid in the Roku Homescreen, the right panel always displays an ad panel, regardless of which item is focused in the grid.\u003cspan\u003eWhen the create next panel mechanism is enabled and the user presses a navigation arrow key, the panel to the right of the GridPanel smoothly fades out, then when the user releases the arrow key, a new right panel is created, added to the PanelSet and smoothly faded in. To implement this, the GridPanel automatically triggers the fade out of the right panel when the navigation arrow key is pressed. When the arrow key is released, the GridPanel will set the createNextPanelIndex field to the index into the grid\u0027s content that corresponds to the newly focused grid item. In response to the createNextPanelIndex field being set, the GridPanel\u0027s control logic must be written to immediately create the Panel node for the new right panel and set the nextPanel field to that Panel. The Panel creation must occur in the main scene graph render thread.\u003c/span\u003eThe createNextPanelIndex field is guaranteed to be set exactly once whenever a new right panel needs to be created and populated with the data that corresponds to the specified index. This may happen when the GridPanel\u0027s data is changed, in response to up or down arrow key releases, or when the PanelSet\u0027s moves the focus onto the GridPanel from the left.For efficiency, sometimes the control logic for the GridPanel may create and hold onto Panel pointers internally so that the next Panel does not have to be newly created each the createNextPanelIndex field is set. If this is done, it is important to never reuse the current Panel node, as that Panel may still be fading out when the new next Panel needs to be created. A typical use case, where all the right Panels are identical other than the data they display, is to create a single pair of Panel nodes and alternate between them each time the createNextPanelIndex field is set, updating the panel data based on the specified list index.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/GridPanel",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "panelSize",
        "width",
        "height",
        "leftPosition",
        "overhangTitle",
        "clockText",
        "optionsAvailable",
        "leftOrientation",
        "leftOnly",
        "hasNextPanel",
        "isFullScreen",
        "goBackCount",
        "isBackEnabled",
        "selectButtonMovesPanelForward",
        "isOffscreenLeft",
        "grid",
        "leftLabel",
        "rightLabel",
        "showSectionLabels",
        "createNextPanelIndex",
        "nextPanel",
        "createNextPanelOnItemFocus"
      ],
      "documentationVersion": 10
    },
    "MarkupGrid": {
      "parentName": "ArrayGrid",
      "isAbstract": false,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, causes the list to quickly scroll so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e\u003cbr\u003eWhen set to a valid item index, causes the list to quickly scroll so that the specified index moves into the focus position."
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the grid has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the\u0026nbsp;grid has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Specifies whether or not the focus indicator bitmap is displayed",
          "descriptionHTML": "Specifies whether or not the focus indicator bitmap is displayed"
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "A vector specifying the horizontal spacing between columns, and the vertical spacing between rows in the grid.",
          "descriptionHTML": "A vector specifying the horizontal spacing between columns, and the vertical spacing between rows in the grid."
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "Specifies the bitmap file to use as a visual separator between the last and first grid items when the grid wraps. In most case, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use as a visual separator between the last and first\u0026nbsp;grid items when the\u0026nbsp;grid wraps. In most case, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "Specifies the font for section divider labels",
          "descriptionHTML": "Specifies the font for section divider labels"
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When a list item gains the key focus, set to the index of the focused item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list item gains the key focus, set to the index of the focused item."
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "Specifies the spacing after each column of the grid. This allows the spacing between columns to vary from column to column. The values override the horizontal spacing specified in the x-dimension value of the itemSpacing field. If the array contains fewer elements than the number of columns specified by the value of the numColumns field, the x-dimension value of the itemSpacing field is used as the spacing after the extra columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies the spacing after each column of the grid. This allows the spacing between columns to vary from column to column. The values override the horizontal spacing specified in the x-dimension value of the \u003ccode\u003eitemSpacing\u003c/code\u003e field. If the array contains fewer elements than the number of columns specified by the value of the \u003ccode\u003enumColumns\u003c/code\u003e field, the x-dimension value of the \u003ccode\u003eitemSpacing\u003c/code\u003e field is used as the spacing after the extra columns.\u003c/p\u003e"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of each item in the list or grid. For list or grid items that are posters, itemSize is the value of a basePosterSize field and any sub-elements included with the poster.",
          "descriptionHTML": "Specifies the width and height of each item in the list or grid. For list or grid items that are posters, \u003ccode\u003eitemSize\u003c/code\u003e is the value of a \u003ccode\u003ebasePosterSize\u003c/code\u003e field and any sub-elements included with the poster."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "Specifies the text color for section divider labels",
          "descriptionHTML": "Specifies the text color for section divider labels"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "Specifies whether the focus indicator bitmap is drawn below or on top of the grid items",
          "descriptionHTML": "Specifies whether the focus indicator bitmap is drawn below or on top of the\u0026nbsp;grid items"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, causes the list to immediately update so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, causes the list to immediately update so that the specified index moves into the focus position."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list or a column of grid items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect floatingFocus Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible. fixedFocusWrap Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down. fixedFocus Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list or a column\u0026nbsp;of grid items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efixedFocus\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eCauses the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible.",
            "fixedFocusWrap": "Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down.",
            "fixedFocus": "Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap",
            "fixedFocus"
          ]
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "sectionDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "Specifies the bitmap file to use as visual separator between sections of the grid. The section dividers can include an icon and a label in addition to the section divider bitmap. For sections that do not contain an icon or a title, the wrap divider bitmap is used for the section dividers instead. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as visual separator between sections of the grid. The section dividers can include an icon and a label in addition to the section divider bitmap. For sections that do not contain an icon or a title, the wrap divider bitmap\u0026nbsp;is used for the section dividers instead. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "117",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width.",
          "descriptionHTML": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When a list item is selected, set to the index of the selected item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item is selected, set to the index of the selected item."
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "Specifies the widths of the component for each column of the grid. This allows the width of each column of the grid to vary from column to column. The values override the width specified in the x-dimension value of the basePosterSize field. If the array contains fewer elements than the number of columns specified by the value of the numColumns field, the x-dimension value of the basePosterSize field is used as the width of the extra columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies the widths of the component for each column of the grid. This allows the width of each column of the grid to vary from column to column. The values override the width specified in\u0026nbsp;the x-dimension\u0026nbsp;value of the \u003ccode\u003ebasePosterSize\u003c/code\u003e field. If the array contains fewer elements than the number of columns specified by the value of the \u003ccode\u003enumColumns\u003c/code\u003e field, the x-dimension value of the \u003ccode\u003ebasePosterSize\u003c/code\u003e field is used as the width of the extra columns.\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "useAtlas": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "useAtlas",
          "description": "Enables a performance optimization when most of the poster items displayed in the grid have the same size. The field value toggles the use of a texture atlas that stores the posters in the grid. The default is true, since in many cases, most of the posters in the grid have the same size as determined by the basePosterSize field value. In this case, using the texture atlas can provide a rendering performance benefit. For grids that have more complicated layouts, that include several posters that have sizes that differ from the value of basePosterSize, or for grids where there are only a few large posters (about five to eight, or posters that are about a quarter of the screen height or width) displayed at the same time, it is best for this field to be set to false.",
          "descriptionHTML": "\u003cp\u003eEnables a performance optimization when most of the poster items displayed in the grid have the same size. The field value toggles the use of a texture atlas that stores the posters in the grid. The default is \u003ccode\u003etrue\u003c/code\u003e, since in many cases, most of the posters in the grid have the same size as determined by the \u003ccode\u003ebasePosterSize\u003c/code\u003e field value. In this case, using the texture atlas can provide a rendering performance benefit. For grids that have more complicated layouts, that include several posters that have sizes that differ from the value of \u003ccode\u003ebasePosterSize\u003c/code\u003e, or for grids where there are only a few large posters (about five to eight, or posters that are about a quarter of the screen height or width) displayed at the same time, it is best for this field to be set to \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e"
        },
        "itemComponentName": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "itemComponentName",
          "description": "Specifies the name of a XML component for the grid items. An instance of this component is created on demand for each visible item of the grid. The XML component must define a specific interface as detailed in MarkupGrid XML Component below.",
          "descriptionHTML": "Specifies the name of a XML component for the grid items. An instance of this component is created on demand for each visible item of the grid. The XML component must define a specific interface as detailed in \n\u003cac:link ac:anchor\u003d\"MarkupGridXMLComponent\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eMarkupGrid XML Component\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below."
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows in the grid. Note that the actual number of rows may be more or less than the number of visible rows depending on the number of items in the grid content.",
          "descriptionHTML": "Specifies the number of visible rows in the grid. Note that the actual number of rows may be more or less than the number of visible rows depending on the number of items in the grid content."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "46",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "Specifies the height of the section dividers. The width of the section dividers is determined by the width of the list items (such as x-dimension value of the basePosterSize field) and the sectionDividerLeftOffset field.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the section dividers. The width of the section dividers is determined by the width of the list items (such as\u0026nbsp;x-dimension value of the \u003ccode\u003ebasePosterSize\u003c/code\u003e field) and the \u003ccode\u003esectionDividerLeftOffset\u003c/code\u003e field.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content for the list. See Data Bindings below for more details. If the data contains section markers, section dividers are drawn between each section. These section dividers may contain an icon and/or a string. ",
          "descriptionHTML": "Specifies the content for the list. See \n\u003cac:link ac:anchor\u003d\"DataBindings\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eData Bindings\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below for more details.\u003cbr\u003eIf the data contains section markers, section dividers are drawn between each section. These section dividers may contain an icon and/or a string.\u0026nbsp;"
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "Number of pixels to offset the left edge of the section divider relative to the left edge of the grid items.",
          "descriptionHTML": "Number of pixels to offset the left edge of the section divider relative to the left edge of the\u0026nbsp;grid items."
        },
        "imageWellBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "imageWellBitmapUri",
          "description": "Specifies the bitmap file to use to suggest where images would appear for empty grids and empty sections of grids. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use to suggest where images would appear for empty grids and empty sections of grids. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "If set to false, each item in the grid data model is assigned to sequential cells in the grid (or the section if the data model includes section information). The data models use the X, Y, W, and H ContentNode attributes to specify which cells of the grid each item should occupy, where X is the column number, Y is the row number, W is the number of columns the item occupies, and H is the number of rows the item occupies. The field value should only be set to true for cases where one or more items in the grid should span multiple rows or columns.",
          "descriptionHTML": "\u003cp\u003eIf set to \u003ccode\u003efalse\u003c/code\u003e, each item in the grid data model is assigned to sequential cells in the grid (or the section if the data model includes section information). The data models use the X, Y, W, and H \u003cstrong\u003eContentNode\u003c/strong\u003e attributes to specify which cells of the grid each item should occupy, where X is the column number, Y is the row number, W is the number of columns the item occupies, and H is the number of rows the item occupies.\u003c/p\u003e\u003cp\u003eThe field value should only be set to \u003ccode\u003etrue\u003c/code\u003e for cases where one or more items in the grid should span multiple rows or columns.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "basePosterSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "basePosterSize",
          "description": "Specifies the width and height of a standard poster size for the grid items.",
          "descriptionHTML": "Specifies the width and height of a standard poster size for the grid items."
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "Specifies the heights of the poster for each row of the grid, allowing the height of each row of the grid to vary from row to row. The values set override the height specified as the y-dimension value of the basePosterSize field. If the array contains fewer elements than the number of rows needed to display all the items in the grid, the y-dimension value of the basePosterSize field is used as the height of the extra rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies the heights of the poster for each row of the grid, allowing the height of each row of the grid to vary from row to row. The \u003cspan\u003evalues set override the height specified as the y-dimension value of the \u003ccode\u003ebasePosterSize\u003c/code\u003e field. If the array contains fewer elements than the number of rows needed to display all the items in the grid, the y-dimension value of the \u003ccode\u003ebasePosterSize\u003c/code\u003e field is used as the height of the extra rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When a list item loses the key focus, set to the index of the unfocused item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list item loses the key focus, set to the index of the unfocused item."
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "Specifies the spacing after each row of the grid. This allows the spacing between rows to vary from row to row. The values override the vertical spacing specified in the y-dimension value of the itemSpacing field. If the array contains fewer elements than the number of rows needed to display all the items in the grid, the y-dimension value of the itemSpacing field is used as the spacing after the extra rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies the spacing after each row of the grid. This allows the spacing between rows to vary from row to row. The values override the vertical spacing specified in the y-dimension value of the \u003ccode\u003eitemSpacing\u003c/code\u003e field. If the array contains fewer elements than the number of rows needed to display all the items in the grid, the y-dimension value of the \u003ccode\u003eitemSpacing\u003c/code\u003e field is used as the spacing after the extra rows.\u003c/p\u003e"
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "36",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "Specifies the height of the divider. The wrap divider bitmap, a visual separator between the last and first grid items when the grid wraps, will be scaled to this height. The width of the wrap divider is set to the width of the grid items (such as the x-dimension value of the basePosterSize field).",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the divider. The wrap divider bitmap, a visual separator between the last and first grid items when the grid wraps, will be scaled to this height. The width of the wrap divider is set to the width of the\u0026nbsp;grid items (such as the x-dimension value of the \u003ccode\u003ebasePosterSize\u003c/code\u003e field).\u003c/p\u003e"
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "10",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "Specifies the spacing between the items appearing in the section divider (such as the spacing between the section divider icon, the section divider label, and the section divider bitmap). Note the section divider does not always include an icon and/or a title.",
          "descriptionHTML": "Specifies the spacing between the items appearing in the section divider (such as\u0026nbsp;the spacing between the section divider icon, the section divider label, and the section divider bitmap). Note the section divider does not always include an icon and/or a title."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in the grid",
          "descriptionHTML": "Specifies the number of columns in the grid"
        }
      },
      "name": "MarkupGrid",
      "description": "The MarkupGrid node class is a  is a generic grid class that can be used to display a set of items arranged into a 2D grid. The contents of each grid item is an instance of an XML component specified by the itemComponentName field. An instance of the XML component is used to display the data for each item in the grid data model. The appearance of the grid item as it enters/exits the grid focus position can be customized using scripting.The number of columns in the MarkupGrid node is fixed and the number of rows varies as needed to display all of the items in the grid data model. The items in the grid fill each row from left to right, then top to bottom. For example, if the grid data contains 8 items and the number of columns is set to 3, then items 1, 2 and 3 will be in the first row. Items 4, 5 and 6 will be in the second row. The third row will contain items 7 and 8 in the leftmost two columns and blank space in the right column.The layout of rows and columns in the grid is very flexible. Possible layouts include:a simple layout with all items in the grid having the same size a layout with the items in some rows having varying heights and/or the items in some columns having varying widths a layout with varying width rows and columns and items that occupy one or more rows and columnsThe grid items can be organized into sections that are demarcated by labelled horizontal divider lines between the sections.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eMarkupGrid\u003c/strong\u003e\u0026nbsp;node class is a\u0026nbsp;\u003cspan\u003e\u0026nbsp;is a generic grid class that can be used to display a set of items arranged into a 2D grid. The contents of each grid item is an instance of an XML component specified by the \u003ccode\u003eitemComponentName\u003c/code\u003e field. An instance of the XML component is used to display the data for each item in the\u0026nbsp;grid data model. The appearance of the\u0026nbsp;grid item as it enters/exits the\u0026nbsp;grid focus position can be customized using scripting.\u003c/span\u003eThe number of columns in the \u003cstrong\u003eMarkupGrid\u003c/strong\u003e node is fixed and the number of rows varies as needed to display all of the items in the grid data model. The items in the grid fill each row from left to right, then top to bottom. For example, if the grid data contains 8 items and the number of columns is set to 3, then items 1, 2 and 3 will be in the first row. Items 4, 5 and 6 will be in the second row. The third row will contain items 7 and 8 in the leftmost two columns and blank space in the right column.\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eThe layout of rows and columns in the grid is very flexible. Possible layouts include:\u003c/span\u003e\u003cli\u003ea simple layout with all items in the grid having the same size\u003c/li\u003e\n\u003cli\u003ea layout with the items in some rows having varying heights and/or the items in some columns having varying widths\u003c/li\u003e\n\u003cli\u003ea layout with varying width rows and columns and items that occupy one or more rows and columns\u003c/li\u003eThe grid items can be organized into sections that are demarcated by labelled horizontal divider lines between the sections.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/MarkupGrid",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "itemSize",
        "focusRow",
        "focusColumn",
        "horizFocusAnimationStyle",
        "vertFocusAnimationStyle",
        "wrapDividerWidth",
        "numRenderPasses",
        "sectionDividerWidth",
        "itemComponentName",
        "content",
        "basePosterSize",
        "useAtlas",
        "itemSpacing",
        "numColumns",
        "numRows",
        "rowHeights",
        "columnWidths",
        "rowSpacings",
        "columnSpacings",
        "fixedLayout",
        "imageWellBitmapUri",
        "drawFocusFeedback",
        "drawFocusFeedbackOnTop",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "wrapDividerBitmapUri",
        "wrapDividerHeight",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem"
      ],
      "documentationVersion": 47
    },
    "MaskGroup": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "maskSize": {
          "type": "vector2d",
          "defaultValue": "[ 0, 0 ]",
          "accessPermission": "READ_WRITE",
          "name": "maskSize",
          "description": "Specifies a scaling factor of the alpha mask coordinate system relative to the group coordinate system. If either element of the maskSize field value does not match the corresponding size of the mask bitmap, the mask bitmap is scaled to the specified size in the dimension. Setting either element of the maskSize field vector to 0 causes the mask bitmap to be used at its actual size in that dimension.",
          "descriptionHTML": "Specifies a scaling factor of the alpha mask coordinate system relative to the group coordinate system. If either element of the \u003ccode\u003emaskSize\u003c/code\u003e field value does not match the corresponding size of the mask bitmap, the mask bitmap is scaled to the specified size in the dimension. Setting either element of the \u003ccode\u003emaskSize\u003c/code\u003e field vector to 0 causes the mask bitmap to be used at its actual size in that dimension."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "maskBitmapWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "maskBitmapWidth",
          "description": "Read-Only Contains the actual width of the mask bitmap. The mask bitmap can be stretched horizontally by setting the x-dimension of the maskSize field value to a different value than the maskBitmapWidth field value.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eContains the actual width of the mask bitmap. The mask bitmap can be stretched horizontally by setting the x-dimension of the \u003ccode\u003emaskSize\u003c/code\u003e field value\u0026nbsp;to a different value than the \u003ccode\u003emaskBitmapWidth\u003c/code\u003e field value.\u003c/p\u003e"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "maskOffset": {
          "type": "vector2d",
          "defaultValue": "[0, 0 ]",
          "accessPermission": "READ_WRITE",
          "name": "maskOffset",
          "description": "Specifies an offset of the mask coordinate system relative to the group coordinate system. For example, if the maskOffset field value is set to [ 100, 0 ], then mask pixel [0, 0] is used as the alpha value for pixels rendered for the MaskGroup node coordinate [100, 0].",
          "descriptionHTML": "Specifies an offset of the mask coordinate system relative to the group coordinate system. For example, if the \u003ccode\u003emaskOffset\u003c/code\u003e field value is set to \u003ccode\u003e[ 100, 0 ]\u003c/code\u003e, then mask pixel \u003ccode\u003e[0, 0]\u003c/code\u003e is used as the alpha value for pixels rendered for the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node coordinate \u003ccode\u003e[100, 0]\u003c/code\u003e."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "maskUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "maskUri",
          "description": "Specifies the bitmap to use for the group alpha mask. The alpha value of each pixel rendered in the group is multiplied by the value of a pixel in the alpha mask. The mapping from pixel coordinates in the group to mask pixel coordinates is controlled by the maskSize and maskOffset field values. Those fields define a coordinate system for the mask bitmap relative to the group coordinate system. This mask coordinate system is used to map mask pixels to their corresponding pixels in the MaskGroup node.",
          "descriptionHTML": "Specifies the bitmap to use for the group alpha mask. The alpha value of each pixel rendered in the group is multiplied by the value of a pixel in the alpha mask. The mapping from pixel coordinates in the group to mask pixel coordinates is controlled by the \u003ccode\u003emaskSize\u003c/code\u003e and \u003ccode\u003emaskOffset\u003c/code\u003e field values. Those fields define a coordinate system for the mask bitmap relative to the group coordinate system. This mask coordinate system is used to map mask pixels to their corresponding pixels in the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node."
        },
        "maskBitmapHeight": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "maskBitmapHeight",
          "description": "Read-Only Contains the actual height of the mask bitmap. The mask bitmap can be stretched vertically by setting the y-dimension of the maskSize field value to a different value than the maskBitmapHeight field value.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eContains the actual height of the mask bitmap. The mask bitmap can be stretched vertically by setting the y-dimension of the \u003ccode\u003emaskSize\u003c/code\u003e field value\u0026nbsp;to a different value than the \u003ccode\u003emaskBitmapHeight\u003c/code\u003e field value."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "MaskGroup",
      "description": "The MaskGroup node class allows an alpha mask bitmap to be applied to the rendering of its children. This allows effects such as having a list fade out at the bottom to be easily created.MaskGroup nodes do not work on all Roku players (specifically, MaskGroup nodes only work on players that support OpenGL). On players whose graphics do not support OpenGL, a MaskGroup node just renders its children without applying the extra alpha mask.Unlike other bitmaps, the MaskGroup node class does not work with 9-patch images. If the bitmap size does not match the group bounding rectangle, the edge rows of the mask are repeated as needed.For example, suppose the MaskGroup node bounding rectangle has an origin at (0, 0), a width of 150 and a height of 80. If the mask bitmap were also 150 by 80, and the maskOffset and maskSize field values were left at their default values of [ 0, 0 ], then each pixel of the mask bitmap would be applied to the corresponding pixel of the MaskGroup node bounding rectangle. The figure below illustrates that case. On the right is a MaskGroup node that contains a Poster node. In the center is an alpha bitmap with the same size as the Poster node. On the right is the result of rendering the MaskGroup node with the image in the center used as a mask. The maskSize and maskOffset field values can be used to scale and offset the mask bitmap relative to the group coordinate system, as shown in the figure below. The mask is the same bitmap as in the figure above. In the below figure, the maskOffset field value has been set to (50, 30), offsetting the origin of the mask bitmap coordinate system relative to the origin of the MaskGroup node coordinate system 50 pixels to the left and 30 pixels down.The maskSize field value has been set to (100, 50), This causes the width of the mask bitmap to be scaled from 150 to 100, and the height of the mask bitmap to be scaled from 80 to 50, so that the mask right edge aligns with the right edge of the MaskGroup node bounding rectangle, and the mask bottom edge aligns with the bottom edge of the MaskGroup node bounding rectangle. The center of the figure shows the mask with the maskOffset and maskSize field values applied overlaid on top of the MaskGroup node. The right side of the figure shows the result of applying the mask to the MaskGroup node. Notice that the left column of pixels in the mask is used as the mask for all columns of the MaskGroup node that lie to the left of the mask, causing those columns to be rendered with full opacity. Similarly, and the top row of the mask is used as the mask for all rows of the MaskGroup node that lie above the mask, causing each of the rows to fade out on the right.  As shown in above, the transformed mask may not overlay all the rendered pixels of the MaskGroup node. In that case, the leftmost (rightmost) columns of the mask bitmap are used as the mask for any MaskGroup node pixels that are to the left (right) of the transformed mask. The top (bottom) row of the mask bitmap is used as the mask for MaskGroup node pixels that are above (below) the transformed mask.",
      "descriptionHTML": "The \u003cstrong\u003eMaskGroup\u003c/strong\u003e\u0026nbsp;node class allows an alpha mask bitmap to be applied to the rendering of its children. This allows effects such as having a list fade out at the bottom to be easily created.\u003cac:rich-text-body\u003e\n \u003cstrong\u003eMaskGroup\u003c/strong\u003e nodes do not work on all Roku\u0026nbsp;players (specifically, \n \u003cstrong\u003eMaskGroup\u003c/strong\u003e nodes only work on\u0026nbsp;players that support OpenGL). On\u0026nbsp;players whose graphics do not support OpenGL, a \n \u003cstrong\u003eMaskGroup\u003c/strong\u003e node just renders its children without applying the extra alpha mask.\n\u003c/ac:rich-text-body\u003eUnlike other bitmaps, the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node class does not work with 9-patch images. If the bitmap size does not match the group bounding rectangle, the edge rows of the mask are repeated as needed.For example, suppose the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node\u0026nbsp;bounding rectangle has an origin at (0, 0), a width of 150 and a height of 80. If the mask bitmap were also 150 by 80, and the \u003ccode\u003emaskOffset\u003c/code\u003e and \u003ccode\u003emaskSize\u003c/code\u003e field values were left at their default values of \u003ccode\u003e[ 0, 0\u0026nbsp;]\u003c/code\u003e, then each pixel of the mask bitmap would be applied to the corresponding pixel of the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node bounding rectangle. The figure below illustrates that case. On the right is a \u003cstrong\u003eMaskGroup\u003c/strong\u003e node that contains a \u003cstrong\u003ePoster\u003c/strong\u003e node. In the center is an alpha bitmap with the same size as the \u003cstrong\u003ePoster\u003c/strong\u003e node. On the right is the result of rendering the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node with the image in the center used as a mask.\u003cac:image ac:align\u003d\"center\"\u003e\n \u003cri:attachment ri:filename\u003d\"maskExample1.png\" /\u003e\n\u003c/ac:image\u003e\u0026nbsp;\u003cspan\u003eThe \u003ccode\u003emaskSize\u003c/code\u003e and \u003ccode\u003emaskOffset\u003c/code\u003e field values can be used to scale and offset the mask bitmap relative to the group coordinate system, as shown in the figure below. The mask is the same bitmap as in the figure above. In the below figure, the \u003ccode\u003emaskOffset\u003c/code\u003e field value has been set to (50, 30), offsetting the origin of the mask bitmap coordinate system relative to the origin of the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node\u0026nbsp;coordinate system 50 pixels to the left and 30 pixels down.The \u003ccode\u003emaskSize\u003c/code\u003e field value has been set to (100, 50), This causes the width of the mask bitmap to be scaled from 150 to 100, and the height of the mask bitmap to be scaled from 80 to 50, so that the mask right edge aligns with the right edge of the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node\u0026nbsp;bounding rectangle, and the mask bottom edge aligns with the bottom edge of the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node\u0026nbsp;bounding rectangle. The center of the figure shows the mask with the \u003ccode\u003emaskOffset\u003c/code\u003e and \u003ccode\u003emaskSize\u003c/code\u003e field values applied overlaid on top of the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node. The right side of the figure shows the result of applying the mask to the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node. Notice that the left column of pixels in the mask is used as the mask for all columns of the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node that lie to the left of the mask, causing those columns to be rendered with full opacity. Similarly, and the top row of the mask is used as the mask for all rows of the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node that lie above the mask, causing each of the rows to fade out on the right.\u003c/span\u003e\u003cspan\u003e\n \u003cac:image ac:align\u003d\"center\"\u003e\n  \u003cri:attachment ri:filename\u003d\"maskExample2.png\" /\u003e\n \u003c/ac:image\u003e\u003c/span\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u0026nbsp;\u003cspan\u003eAs shown in above, the transformed mask may not overlay all the rendered pixels of the \u003cstrong\u003eMaskGroup\u003c/strong\u003e node. In that case, the leftmost (rightmost) columns of the mask bitmap are used as the mask for any \u003cstrong\u003eMaskGroup\u003c/strong\u003e node pixels that are to the left (right) of the transformed mask. The top (bottom) row of the mask bitmap is used as the mask for \u003cstrong\u003eMaskGroup\u003c/strong\u003e node pixels that are above (below) the transformed mask.\u003c/span\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/MaskGroup",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "maskUri",
        "maskSize",
        "maskOffset",
        "maskBitmapWidth",
        "maskBitmapHeight"
      ],
      "documentationVersion": 18
    },
    "ArrayGrid": {
      "parentName": "Group",
      "isAbstract": true,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, causes the list or grid to quickly scroll so that the item at the specified index moves into focus, or focus moves to the item.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, causes the list or grid to quickly scroll so that the item at the specified index moves into focus, or focus moves to the item.\u003c/span\u003e"
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows displayed. Note that the actual number of rows may be more or less than the number specified depending on the number of items in the list or grid content.",
          "descriptionHTML": "Specifies the number of visible rows displayed. \u003cspan\u003eNote that the actual number of rows may be more or less than the number specified depending on the number of items in the list or grid content. \u003c/span\u003e"
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "If the drawFocusFeedback field value is set to true, specifies a custom bitmap to be drawn on list or grid items to indicate the focus has moved to that item. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions as well as margins to fit around the item, which is the type of bitmap used as the system default.",
          "descriptionHTML": "If the \u003ccode\u003edrawFocusFeedback\u003c/code\u003e field value is set to \u003ccode\u003etrue\u003c/code\u003e, specifies a custom bitmap to be drawn on list or grid items to indicate the focus has moved to that item. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions as well as margins to fit around the item, which is the type of bitmap used as the system default."
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the height of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the height of the section divider bitmap."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Causes a specified bitmap to be drawn on list or grid items to indicate focus has moved to that item.",
          "descriptionHTML": "Causes a specified bitmap to be drawn on list or grid items to indicate focus has moved to that item."
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "Specifies the horizontal and vertical spacing between the list or grid items. For lists, the vector2d Y-value specifies the vertical spacing between items in the list, and the vector2d X-value is ignored.",
          "descriptionHTML": "Specifies the horizontal and vertical spacing between the list or grid items. For lists, the vector2d Y-value specifies the vertical spacing between items in the list, and the vector2d X-value is ignored."
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content meta-data for the list or grid. This field must be set with a ContentNode node that specifies the content meta-data for the list or grid in order for the list or grid to be displayed. See the Data Bindings section of each list or grid reference description for details on the content meta-data that must be specified in the ContentNode node.",
          "descriptionHTML": "Specifies the content meta-data for the list or grid. This field must be set with a \u003cstrong\u003eContentNode\u003c/strong\u003e node that specifies the content meta-data for the list or grid in order for the list or grid to be displayed. See the \u003cstrong\u003eData Bindings\u003c/strong\u003e section of each list or grid reference description for details on the content meta-data that must be specified in the \u003cstrong\u003eContentNode\u003c/strong\u003e node."
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies a custom bitmap to use as a visual divider between the last and first list or grid items, when the list or grid wraps. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.",
          "descriptionHTML": "\u003cp\u003eIf the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies a custom bitmap to use as a visual divider between the last and first\u0026nbsp;list or grid items, when the\u0026nbsp;list or grid wraps. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.\u003c/p\u003e"
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom font to use for the section title text. Only set this field to use a different font than the system default.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom font to use for the section title text. Only set this field to use a different font than the system default."
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the left offset of the section divider from the list or grid.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the left offset of the section divider from the list or grid."
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When focus moves to a list or grid item, set to the index of the focused item.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eWhen focus moves to a list or grid item, set to the index of the focused item.\u003c/p\u003e"
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "Specifies differing spaces between each grid column, to allow the spacing between columns to vary from column to column. This field is not used by lists. The specified values override the itemSpacing field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSpacing field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each grid column, to allow the\u0026nbsp;spacing between\u0026nbsp;columns to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of each item in the list or grid. For list or grid items that are posters, itemSize is the value of a basePosterSize field and any sub-elements included with the poster.",
          "descriptionHTML": "Specifies the width and height of each item in the list or grid. For list or grid items that are posters, \u003ccode\u003eitemSize\u003c/code\u003e is the value of a \u003ccode\u003ebasePosterSize\u003c/code\u003e field and any sub-elements included with the poster."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom color to use for the section title text. Only set this field to use a different text color than the system default.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom color to use for the section title text. Only set this field to use a different text color than the system default."
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "If the drawFocusFeedback field value is set to true, specifies whether the specified focus indicator bitmap is drawn on top of the focused list or grid items. The default value draws the specified focus indicator bitmap below the focused list or grid item.",
          "descriptionHTML": "If the \u003ccode\u003edrawFocusFeedback\u003c/code\u003e field value is set to \u003ccode\u003etrue\u003c/code\u003e, specifies whether the specified focus indicator bitmap is drawn on top of the focused list or grid items. The default value draws the specified focus indicator bitmap below the focused list or grid item."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, causes the list or grid to immediately update so that the item at the specified index moves into focus, or focus moves to the item.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, causes the list or grid to immediately update so that the item at the specified index moves into focus, or focus moves to the item."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list or a column of grid items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect floatingFocus Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible. fixedFocusWrap Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down. fixedFocus Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list or a column\u0026nbsp;of grid items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efixedFocus\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eCauses the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible.",
            "fixedFocusWrap": "Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down.",
            "fixedFocus": "Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap",
            "fixedFocus"
          ]
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a ContentNode node for the grid. This field is not used by lists.",
          "descriptionHTML": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a \u003cstrong\u003eContentNode\u003c/strong\u003e node for the grid. This field is not used by lists."
        },
        "sectionDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom bitmap to use as a visual divider between the sections of the list or grid. Only set this field to use a bitmap with a different appearance than the system default. For sections that do not include an icon or a title, the system default or custom bitmap specified as the wrapDividerBitmapUri field value is used for the section dividers. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.",
          "descriptionHTML": "\u003cp\u003eIf the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom bitmap to use as a visual divider between the sections of the list or grid. Only set this field to use a bitmap with a different appearance than the system default. For sections that do not include an icon or a title, the system default or custom bitmap specified as the \u003ccode\u003ewrapDividerBitmapUri\u003c/code\u003e field value is used for the section dividers. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.\u003c/p\u003e"
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the minimum width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the minimum width\u0026nbsp;of the section divider bitmap."
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "Specifies differing heights for each list or grid row, to allow the height of each row to vary from row to row. The specified values override the itemSize field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSize field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing heights for each list or grid row, to allow the height of each row to vary from row to row.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When focus moves away from a list or grid item, set to the index of the unfocused item.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eWhen focus moves away from a list or grid item, set to the index of the unfocused item.\u003c/p\u003e"
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "Specifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row. The specified values override the itemSpacing field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSpacing field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row.\u003c/p\u003e\u003cp\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/p\u003e"
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "If the drawFocusFeedback field value is set to true, specifies a custom bitmap to be drawn on list or grid items to indicate focus on that item, when the list or grid itself does not have focus. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions as well as margins to fit around the item, which is the type of bitmap used as the system default.",
          "descriptionHTML": "If the \u003ccode\u003edrawFocusFeedback\u003c/code\u003e field value is set to \u003ccode\u003etrue\u003c/code\u003e, specifies a custom bitmap to be drawn on list or grid items to indicate focus on that item, when the list or grid itself does not have focus. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions as well as margins to fit around the item, which is the type of bitmap used as the system default."
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When a list or grid item is selected, set to the index of the selected item.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list or grid\u0026nbsp;item is selected, set to the index of the selected item.\u003c/p\u003e"
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "36",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the height of a bitmap used as a visual divider between the last and first list or grid items, when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the height of a bitmap used as a visual divider between the last and first list or grid items, when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "If the ContentNode node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "Specifies differing widths for each grid column, to allow the width of each column to vary from column to column. This field is not used by lists. The specified values override the itemSize field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSize field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing widths for each grid column, to allow the\u0026nbsp;width of each column to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in a grid. This field is not used for lists.",
          "descriptionHTML": "Specifies the number of columns in a grid. This field is not used for lists."
        }
      },
      "name": "ArrayGrid",
      "description": "The ArrayGrid node class is an abstract base class that provides functionality to the list and grid node classes that are extended from ArrayGrid. The field value settings and their effect in this abstract base class depend in many cases on whether a list, or a grid, node class is extended from ArrayGrid, and the specific type of list or grid.The following node classes extended from ArrayGrid derive their basic functionality from the ArrayGrid abstract node class: ",
      "descriptionHTML": "The \u003cstrong\u003eArrayGrid\u003c/strong\u003e node class is an abstract base class that provides functionality to the list and grid node classes that are extended from \u003cstrong\u003eArrayGrid\u003c/strong\u003e. The field value settings and their effect in this abstract base class depend in many cases on whether a list, or a grid, node\u0026nbsp;class is extended from \u003cstrong\u003eArrayGrid\u003c/strong\u003e, and the specific type of list or grid.The following node classes extended from \u003cstrong\u003eArrayGrid\u003c/strong\u003e derive their basic functionality from the \u003cstrong\u003eArrayGrid\u003c/strong\u003e abstract node class:\u003cli\u003e\u003cstrong\u003e\n  \u003cac:link\u003e\n   \u003cri:page ri:content-title\u003d\"LabelList\" /\u003e\n  \u003c/ac:link\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\n  \u003cac:link\u003e\n   \u003cri:page ri:content-title\u003d\"MarkupList\" /\u003e\n  \u003c/ac:link\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\n  \u003cac:link\u003e\n   \u003cri:page ri:content-title\u003d\"PosterGrid\" /\u003e\n  \u003c/ac:link\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\n  \u003cac:link\u003e\n   \u003cri:page ri:content-title\u003d\"MarkupGrid\" /\u003e\n  \u003c/ac:link\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\n  \u003cac:link\u003e\n   \u003cri:page ri:content-title\u003d\"RowList\" /\u003e\n  \u003c/ac:link\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\n  \u003cac:link\u003e\n   \u003cri:page ri:content-title\u003d\"EPGGrid\" /\u003e\n  \u003c/ac:link\u003e\u0026nbsp;\u003c/strong\u003e\u003c/li\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ArrayGrid",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "content",
        "itemSize",
        "itemSpacing",
        "numRows",
        "numColumns",
        "focusRow",
        "focusColumn",
        "horizFocusAnimationStyle",
        "vertFocusAnimationStyle",
        "drawFocusFeedbackOnTop",
        "drawFocusFeedback",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "wrapDividerBitmapUri",
        "wrapDividerWidth",
        "wrapDividerHeight",
        "fixedLayout",
        "numRenderPasses",
        "rowHeights",
        "columnWidths",
        "rowSpacings",
        "columnSpacings",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerWidth",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem"
      ],
      "documentationVersion": 45
    },
    "Keyboard": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the URI of an image file to be loaded to replace the keyboard focus indicator. This should be a 9-patch image so that it can be stretched to the appropriate size for the double width keys.",
          "descriptionHTML": "Specifies the URI of an image file to be loaded to replace the keyboard focus indicator. This should be a 9-patch image so that it can be stretched to the appropriate size for the double width keys."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "showTextEditBox": {
          "type": "boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "showTextEditBox",
          "description": "Specifies whether or not the Keyboard node internal TextEditBox node is displayed. In most cases, it is desirable to display the TextEditBox node so that the user can see the string as it is entered. In some cases though, you might want to show only the keyboard part of the Keyboard node. In those cases, the text field of the node will still contain the string entered by the user, so it can displayed in some different manner.",
          "descriptionHTML": "\u003cp\u003eSpecifies whether or not the \u003cstrong\u003eKeyboard\u003c/strong\u003e node\u0026nbsp;internal \u003cstrong\u003eTextEditBox\u003c/strong\u003e node is displayed. In most cases, it is desirable to display the \u003cstrong\u003eTextEditBox\u003c/strong\u003e node so that the user can see the string as it is entered.\u003c/p\u003e\u003cp\u003eIn some cases though, you might want to show only the keyboard part of the \u003cstrong\u003eKeyboard\u003c/strong\u003e node. In those cases, the text field of the node will still contain the string entered by the user, so it can displayed in some different manner.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "focusedKeyColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "focusedKeyColor",
          "description": "Specifies the color of the key labels and icons when the Keyboard node has the focus",
          "descriptionHTML": "\u003cspan\u003eSpecifies the color of the key labels and icons when the \u003c/span\u003e\u003cstrong\u003eKeyboard\u003c/strong\u003e node has \u003cspan\u003ethe focus\u003c/span\u003e"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "textEditBox": {
          "type": "TextEditBox node",
          "defaultValue": "system default",
          "accessPermission": "READ_ONLY",
          "name": "textEditBox",
          "description": "Read-Only This provides access to the Keyboard node internal TextEditBox node so that its appearance can be modified. You should not set this field, but you can set the fields of the TextEditBox node (such as, myKeyboard.textEditBox.textColor \u003d \"0xFF0000FF\").",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eThis provides access to the \u003cstrong\u003eKeyboard\u003c/strong\u003e node\u0026nbsp;internal \u003cstrong\u003eTextEditBox\u003c/strong\u003e node so that its appearance can be modified. You should not set this field, but you can set the fields of the \u003cstrong\u003eTextEditBox\u003c/strong\u003e node (such as, \u003ccode\u003emyKeyboard.textEditBox.textColor \u003d \"0xFF0000FF\"\u003c/code\u003e).\u003c/p\u003e"
        },
        "keyColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "keyColor",
          "description": "Specifies the color of the key labels and icons when the Keyboard node does not have the focus",
          "descriptionHTML": "Specifies the color of the key labels and icons when the \u003cstrong\u003eKeyboard\u003c/strong\u003e node does not have the focus"
        },
        "keyboardBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "keyboardBitmapUri",
          "description": "Specifies the URI of an image file to be loaded to replace the default keyboard image drawn underneath the key label and icons. Note that this image must be carefully designed so that the key positions match the default image. Template images for SD, HD and FHD resolutions are provided below.",
          "descriptionHTML": "\u003cp\u003e\u003cspan\u003eSpecifies the URI of an image file to be loaded to replace the default keyboard image drawn underneath the key label and icons. \u003c/span\u003e\u003c/p\u003e\u003cp\u003eNote that this image must be carefully designed so that the key positions match the default image. Template images for SD, HD and FHD resolutions are provided below.\u003c/p\u003e"
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "text": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "text",
          "description": "Contains the string of characters that has been entered",
          "descriptionHTML": "Contains the string of characters that has been entered"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "Keyboard",
      "description": "The Keyboard node class allows a user to enter a string of alphanumeric characters. The string entered is displayed in a TextEditBox node that is part of the Keyboard node.The Keyboard node must have the key focus in order to work properly. By default, a Keyboard node toggles between uppercase and lowercase letters when the Options remote key is pressed, to speed the entry of mixed-case strings by the user. It is important not to override this behavior, particularly if a Keyboard node is used as an internal node for a KeyboardDialog node.The default appearance of a Keyboard node is very transparent, allowing the keyboard to pick up most of its color from what is rendered underneath it. The appearance can be customized by changing the keyboardBitmapUri and other fields.",
      "descriptionHTML": "The \u003cstrong\u003eKeyboard\u003c/strong\u003e\u0026nbsp;node class allows a user to enter a string of alphanumeric characters. The string entered is displayed in a\u0026nbsp;\n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"TextEditBox\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eTextEditBox\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e node that is part of the \u003cstrong\u003eKeyboard\u003c/strong\u003e node.The \u003cstrong\u003eKeyboard\u003c/strong\u003e node must have the key focus in order to work properly. By default, a \u003cstrong\u003eKeyboard\u003c/strong\u003e node toggles between uppercase and lowercase letters when the \u003cstrong\u003e\u003cspan style\u003d\"color: rgb(153,51,102);\"\u003eOptions\u003c/span\u003e\u003c/strong\u003e remote key is pressed, to speed the entry of mixed-case strings by the user. It is important not to override this behavior, particularly if a \u003cstrong\u003eKeyboard\u003c/strong\u003e node is used as an internal node for a \n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"KeyboardDialog\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eKeyboardDialog\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e node.The default appearance of\u0026nbsp;a\u0026nbsp;\u003cstrong\u003eKeyboard\u003c/strong\u003e\u0026nbsp;node is very transparent, allowing the keyboard to pick up most of its color from what is rendered underneath it. The appearance can be customized by changing the \u003ccode\u003ekeyboardBitmapUri\u003c/code\u003e and other fields.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Keyboard",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "text",
        "keyColor",
        "focusedKeyColor",
        "keyboardBitmapUri",
        "focusBitmapUri",
        "textEditBox",
        "showTextEditBox"
      ],
      "documentationVersion": 17
    },
    "SequentialAnimation": {
      "parentName": "AnimationBase",
      "isAbstract": false,
      "fields": {
        "delay": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "delay",
          "description": "Delays the start of the animation by the specified number of seconds",
          "descriptionHTML": "Delays the start of the animation by the specified number of seconds"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "repeat": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "repeat",
          "description": "Controls whether the animation stops when it finishes (false) or repeats from the beginning (true)",
          "descriptionHTML": "Controls whether the animation stops when it finishes (false) or repeats from the beginning (true)"
        },
        "control": {
          "type": "option string",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "control",
          "description": "Controls the animation. Supported options include: Option Effect none Initial state with no associated action start Always plays the animation from the beginning stop Stops the animation in its current state pause Pauses the animation in its current state resume If paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning. finish Jumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.  ",
          "descriptionHTML": "\u003cp\u003eControls the animation. Supported\u0026nbsp;options include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eInitial state with no associated action\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estart\u003c/td\u003e\n   \u003ctd\u003eAlways plays the animation from the beginning\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estop\u003c/td\u003e\n   \u003ctd\u003eStops the animation in its current state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epause\u003c/td\u003e\n   \u003ctd\u003ePauses the animation in its current state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eresume\u003c/td\u003e\n   \u003ctd\u003eIf paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efinish\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eJumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.\u0026nbsp;\u0026nbsp;\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "resume": "If paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning.",
            "stop": "Stops the animation in its current state",
            "start": "Always plays the animation from the beginning",
            "finish": "Jumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.",
            "none": "Initial state with no associated action",
            "pause": "Pauses the animation in its current state"
          },
          "possibleValuesNames": [
            "none",
            "start",
            "stop",
            "pause",
            "resume",
            "finish"
          ]
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "state": {
          "type": "value string",
          "defaultValue": "stopped",
          "accessPermission": "READ_ONLY",
          "name": "state",
          "description": "Read-Only  Indicates the state of the animation. Values include: Value Meaning running Indicates that the animation is in progress paused Indicates that the animation has been paused stopped Indicates that the animation has either run to completion or has been explicitly stopped",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003e Indicates the state of the animation. Values include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003erunning\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation is in progress\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epaused\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation has been paused\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estopped\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation has either run to completion or has been explicitly stopped\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "running": "Indicates that the animation is in progress",
            "paused": "Indicates that the animation has been paused",
            "stopped": "Indicates that the animation has either run to completion or has been explicitly stopped"
          },
          "possibleValuesNames": [
            "running",
            "paused",
            "stopped"
          ]
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        }
      },
      "name": "SequentialAnimation",
      "description": "The SequentialAnimation node class allows you to specify that a set of animations should occur sequentially. The children of the SequentialAnimation node specify the set of animations to be executed. Note that the use of the delay field in the child animations allows a delay between any two animations to be specified, if desired.The state field is set to running when any of the child animations is in progress. Once all the animations have run to completion, the state field is set to stopped. ",
      "descriptionHTML": "The \u003cstrong\u003eSequentialAnimation\u003c/strong\u003e node class allows you to specify that a set of animations should occur sequentially. The children of the \u003cstrong\u003eSequentialAnimation\u003c/strong\u003e node specify the set of animations to be executed. Note that the use of the \u003ccode\u003edelay\u003c/code\u003e field in the child animations allows a delay between any two animations to be specified, if desired.The \u003ccode\u003estate\u003c/code\u003e field is set to \u003ccode\u003erunning\u003c/code\u003e when any of the child animations is in progress. Once all the animations have run to completion, the \u003ccode\u003estate\u003c/code\u003e field is set to \u003ccode\u003estopped\u003c/code\u003e.\u0026nbsp;",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/SequentialAnimation",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "control",
        "state",
        "repeat",
        "delay"
      ],
      "documentationVersion": 20
    },
    "Panel": {
      "parentName": "Group",
      "isAbstract": false,
      "fields": {
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "panelSize": {
          "type": "string",
          "defaultValue": "narrow",
          "accessPermission": "WRITE_ONLY",
          "name": "panelSize",
          "description": "Write-Only  Specifies one of the default panel sizes. Setting the field causes the width and leftPosition fields to be set to values that match the SDK2 preferred layout for a panel of the specified size. Value Meaning narrow Set the width and leftPosition fields to the values for a narrow Panel medium Set the width and leftPosition fields to the values for a medium width Panel wide Set the width and leftPosition fields to the values for a wide Panel full Set the width and leftPosition fields to the values for a full width Panel Note that PanelSet usage mandates that whenever two Panels are visible, they should include either one narrow and one wide panel or two medium width panels. If one Panel is visible, it\u0027s panelSize should be set to \"full\".",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003cbr\u003eSpecifies one of the default panel sizes. Setting the field causes the width and leftPosition fields to be set to values that match the SDK2 preferred layout for a panel of the specified size.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enarrow\u003c/td\u003e\n   \u003ctd\u003eSet the width and leftPosition fields to the values for a narrow Panel\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003emedium\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a medium width Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ewide\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a wide Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efull\u003c/td\u003e\n   \u003ctd\u003e\u003cspan\u003eSet the width and leftPosition fields to the values for a full width Panel\u003c/span\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e\u003cp\u003e\u003cspan style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003eNote that PanelSet usage mandates that whenever two Panels are visible, they should include either one narrow and one wide panel or two medium width panels. If one Panel is visible, it\u0027s panelSize should be set to \"full\".\u003c/span\u003e\u003c/p\u003e",
          "possibleValues": {
            "wide": "Set the width and leftPosition fields to the values for a wide Panel",
            "narrow": "Set the width and leftPosition fields to the values for a narrow Panel",
            "medium": "Set the width and leftPosition fields to the values for a medium width Panel",
            "full": "Set the width and leftPosition fields to the values for a full width Panel"
          },
          "possibleValuesNames": [
            "narrow",
            "medium",
            "wide",
            "full"
          ]
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "leftPosition": {
          "type": "float",
          "defaultValue": "105",
          "accessPermission": "READ_WRITE",
          "name": "leftPosition",
          "description": "Specifies the horizontal position of the panel relative to the left edge of the PanelSet (which is a the left edge of the display by default). In most cases, this should be set by setting the panelSize field to one of the pre-configure settings.",
          "descriptionHTML": "Specifies the horizontal position of the panel relative to the left edge of the PanelSet (which is a the left edge of the display by default). In most cases, this should be set by setting the panelSize field to one of the pre-configure settings."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "height": {
          "type": "float",
          "defaultValue": "-1",
          "accessPermission": "READ_WRITE",
          "name": "height",
          "description": "Specifies the height of the panel. In most cases, this will be set by the PanelSet and should treated as a read-only value.",
          "descriptionHTML": "Specifies the height of the panel. In most cases, this will be set by the PanelSet and should treated as a read-only value."
        },
        "clockText": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "clockText",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting the clockText field will cause that text to be displayed instead of the clock in the overhang when the panel slides into the left position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting the clockText field will cause that text to be displayed instead of the clock in the overhang when the panel slides into the left position of the PanelSet."
        },
        "selectButtonMovesPanelForward": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "selectButtonMovesPanelForward",
          "description": "When set to true, pressing the OK/Select button on the remote control causes the PanelSet focus to move to the next panel.",
          "descriptionHTML": "When set to true, pressing the OK/Select button on the remote control causes the PanelSet focus to move to the next panel."
        },
        "isBackEnabled": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "isBackEnabled",
          "description": "The isBackEnabled field provides information to the PanelSet as to whether or not this panel has another panel to its left. If set to true, the PanelSet\u0027s left arrow indicator is displayed and pressing the left arrow button on the remote triggers the PanelSet to move the focus \"goBackCount\" panels to the left, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s left arrow indicator is not displayed and the left arrow button does not trigger any change to the focused panel.",
          "descriptionHTML": "The isBackEnabled field provides information to the PanelSet as to whether or not this panel has another panel to its left. If set to true, the PanelSet\u0027s left arrow indicator is displayed and pressing the left arrow button on the remote triggers the PanelSet to move the focus \"goBackCount\" panels to the left, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s left arrow indicator is not displayed and the left arrow button does not trigger any change to the focused panel."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "hasNextPanel": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "hasNextPanel",
          "description": "The hasNextPanel field provides information to the PanelSet as to whether or not this panel has another panel to its right. If set to true, the PanelSet\u0027s right arrow indicator is displayed and pressing the right arrow button on the remote triggers the PanelSet to move the focus one panel to the right, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s right arrow indicator is not displayed and the right arrow button does not trigger any change to the focused panel.",
          "descriptionHTML": "The hasNextPanel field provides information to the PanelSet as to whether or not this panel has another panel to its right. If set to true, the PanelSet\u0027s right arrow indicator is displayed and pressing the right arrow button on the remote triggers the PanelSet to move the focus one panel to the right, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen. If set to false, the PanelSet\u0027s right arrow indicator is not displayed and the right arrow button does not trigger any change to the focused panel."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "leftOrientation": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "leftOrientation",
          "description": "When the panel is used as part of the OverhangPanelSetScene, leftOrientation will be set to true when the panel moves into the left position of the PanelSet and set to false when the panel moves into the right position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, leftOrientation will be set to true when the panel moves into the left position of the PanelSet and set to false when the panel moves into the right position of the PanelSet."
        },
        "isOffscreenLeft": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "isOffscreenLeft",
          "description": "This field is set by the PanelSet to indicate that the panel is positioned offscreen of the left edge of the PanelSet. This field is often observed to cancel outstanding load requests for images that are displayed on the panel.",
          "descriptionHTML": "This field is set by the PanelSet to indicate that the panel is positioned offscreen of the left edge of the PanelSet. This field is often observed to cancel outstanding load requests for images that are displayed on the panel."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "overhangTitle": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "overhangTitle",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting the overhangTitle field will cause that text to be displayed as the title in the overhang when the panel slides into the left position of the PanelSet.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting the overhangTitle field will cause that text to be displayed as the title in the overhang when the panel slides into the left position of the PanelSet."
        },
        "goBackCount": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "goBackCount",
          "description": "Setting goBackCount field to a value greater than 1 causes the PanelSet to move the focus back that many panels when the user presses the left arrow button, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen.",
          "descriptionHTML": "Setting goBackCount field to a value greater than 1 causes the PanelSet to move the focus back that many panels when the user presses the left arrow button, sliding the Panels as needed to make sure the panel that has the focus ends up onscreen."
        },
        "width": {
          "type": "float",
          "defaultValue": "388",
          "accessPermission": "READ_WRITE",
          "name": "width",
          "description": "Specifies the width of the panel in pixels. In most cases, this should be set by setting the panelSize field to one of the pre-configured settings.",
          "descriptionHTML": "Specifies the width of the panel in pixels. In most cases, this should be set by setting the panelSize field to one of the pre-configured settings."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "leftOnly": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "leftOnly",
          "description": "The leftOnly field provides information to the PanelSet that this Panel should never appear in the right position of the PanelSet. When the panel slides into the right position, the PanelSet initiates another slide in the same direction so that the panel does not end up on the right.",
          "descriptionHTML": "The leftOnly field provides information to the PanelSet that this Panel should never appear in the right position of the PanelSet. When the panel slides into the right position, the PanelSet initiates another slide in the same direction so that the panel does not end up on the right."
        },
        "isFullScreen": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "isFullScreen",
          "description": "The isFullScreen field indicates that this panel should be the only panel displayed (i.e. it will take up both the left and right positions in the PanelSet.",
          "descriptionHTML": "The isFullScreen field indicates that this panel should be the only panel displayed (i.e. it will take up both the left and right positions in the PanelSet."
        },
        "optionsAvailable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "optionsAvailable",
          "description": "When the panel is used as part of the OverhangPanelSetScene, setting optionsAvailable will enable/disable the options button handling when the panel slides into the left position of the PanelSet. The overhang\u0027s options prompt will change appearance to provide feedback to the user that the options button is enabled/disabled.",
          "descriptionHTML": "When the panel is used as part of the OverhangPanelSetScene, setting optionsAvailable will enable/disable the options button handling when the panel slides into the left position of the PanelSet. The overhang\u0027s options prompt will change appearance to provide feedback to the user that the options button is enabled/disabled."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "Panel",
      "description": "The Panel node is used to create sliding panels for channel UI, similar to those in the Roku OS home screen,",
      "descriptionHTML": "The \u003cstrong\u003ePanel\u003c/strong\u003e\u0026nbsp;node is used to create sliding panels for channel UI, similar to those in the Roku OS home screen,",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Panel",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "panelSize",
        "width",
        "height",
        "leftPosition",
        "overhangTitle",
        "clockText",
        "optionsAvailable",
        "leftOrientation",
        "leftOnly",
        "hasNextPanel",
        "isFullScreen",
        "goBackCount",
        "isBackEnabled",
        "selectButtonMovesPanelForward",
        "isOffscreenLeft"
      ],
      "documentationVersion": 23
    },
    "Timer": {
      "parentName": "Node",
      "isAbstract": false,
      "fields": {
        "duration": {
          "type": "time",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "duration",
          "description": "Specifies the time in seconds before the Timer node fires after the control field value is set to start. To specify time values down to millisecond granularity, use a float type (0.001 equals one millisecond). ",
          "descriptionHTML": "Specifies the time in seconds before the \u003cstrong\u003eTimer\u003c/strong\u003e node fires after the \u003ccode\u003econtrol\u003c/code\u003e field value is set to \u003ccode\u003estart\u003c/code\u003e. To specify time values down to millisecond granularity, use a float type (0.001 equals one millisecond).\u0026nbsp;"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "repeat": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "repeat",
          "description": "If set to true, the Timer node fires repeatedly, each time the specified duration field value elapses. If set to false, the Timer node only fires once until restarted.",
          "descriptionHTML": "If set to \u003ccode\u003etrue\u003c/code\u003e, the \u003cstrong\u003eTimer\u003c/strong\u003e node fires repeatedly, each time the specified \u003ccode\u003eduration\u003c/code\u003e field value elapses. If set to \u003ccode\u003efalse\u003c/code\u003e, the \u003cstrong\u003eTimer\u003c/strong\u003e node only fires once until restarted."
        },
        "fire": {
          "type": "Event",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "fire",
          "description": "Observe-Only Triggers observer callback functions when the Timer node fires.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eObserve-Only\u003c/strong\u003e \u003cbr\u003eTriggers observer callback functions when the \u003cstrong\u003eTimer\u003c/strong\u003e node fires.\u003c/p\u003e"
        },
        "control": {
          "type": "string",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "control",
          "description": "Used to control the operation of the Timer node. Recognized values include: Value Effect none No effect start Starts the Timer node operation stop Stops a running Timer node",
          "descriptionHTML": "\u003cp\u003eUsed to control the operation of the \u003cstrong\u003eTimer\u003c/strong\u003e node. Recognized values include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eNo effect\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estart\u003c/td\u003e\n   \u003ctd\u003eStarts the \u003cstrong\u003eTimer\u003c/strong\u003e node operation\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estop\u003c/td\u003e\n   \u003ctd\u003eStops a running \u003cstrong\u003eTimer\u003c/strong\u003e node\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "stop": "Stops a running Timer node",
            "start": "Starts the Timer node operation",
            "none": "No effect"
          },
          "possibleValuesNames": [
            "none",
            "start",
            "stop"
          ]
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        }
      },
      "name": "Timer",
      "description": "The Timer node class generates an observable event after a specified amount of time has elapsed.",
      "descriptionHTML": "The \u003cstrong\u003eTimer\u003c/strong\u003e node class generates an observable event after a specified\u0026nbsp;amount of time\u0026nbsp;has elapsed.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Timer",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "control",
        "repeat",
        "duration",
        "fire"
      ],
      "documentationVersion": 18
    },
    "ButtonGroup": {
      "parentName": "LayoutGroup",
      "isAbstract": false,
      "fields": {
        "itemSpacings": {
          "type": "array of floats",
          "defaultValue": "[ ]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacings",
          "description": "Controls the spacing before or after each child in the layout direction. By default, no space is added between the children. If the field value array is set with a single value, and the addItemSpacingAfterChild field value is set to true, that amount of space is inserted after each child is positioned. If the addItemSpacingAfterChild field value is set to false, the space is inserted before each child is positioned. If the field value array has more than one value, the first value specifies the spacing before or after the first item, the second value specifies the spacing before or after the second item, and so on. If there are fewer values in the field value array than needed, the final value is repeated as needed. If there are more values in the field value array than needed, the extra values are ignored.",
          "descriptionHTML": "\u003cp\u003eControls the spacing before or after each child in the layout direction. By default, no space is added between the children.\u003c/p\u003e\u003cp\u003eIf the field value array is set with a single value, and the \u003ccode\u003eaddItemSpacingAfterChild\u003c/code\u003e field value is set to \u003ccode\u003etrue\u003c/code\u003e, that amount of space is inserted after each child is positioned. If the\u0026nbsp;\u003ccode\u003eaddItemSpacingAfterChild\u003c/code\u003e field value is set to \u003ccode\u003efalse\u003c/code\u003e, the space is inserted before each child is positioned.\u003c/p\u003e\u003cp\u003eIf the field value array has more than one value, the first value specifies the spacing before or after the first item, the second value specifies the spacing before or after the second item, and so on. If there are fewer values in the field value array than needed, the final value is repeated as needed. If there are more values in the field value array than needed, the extra values are ignored.\u003c/p\u003e"
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "buttonHeight": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "buttonHeight",
          "description": "Specifies the height of each Button node in the group. Only set to override the system default.",
          "descriptionHTML": "Specifies the height of each \u003cstrong\u003eButton\u003c/strong\u003e node in the group. Only set to override the system default."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap to be used as the background for the Button node that has focus. Only set to override the system default.",
          "descriptionHTML": "Specifies the bitmap to be used as the background for the \u003cstrong\u003eButton\u003c/strong\u003e node that has focus. Only set to override the system default."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "focusedTextColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "focusedTextColor",
          "description": "Specifies the button label color for the Button node that has focus, if any. Only set to override the system default.",
          "descriptionHTML": "Specifies the button label color for the \u003cstrong\u003eButton\u003c/strong\u003e node that has focus, if any. Only set to override the system default."
        },
        "buttonFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonFocused",
          "description": "Read-Only Set to the index of the focused button whenever a button in the group receives the key focus.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eSet to the index of the focused button whenever a button in the group receives the key focus."
        },
        "focusedTextFont": {
          "type": "Font",
          "defaultValue": "system: MediumBoldSystemFont",
          "accessPermission": "READ_WRITE",
          "name": "focusedTextFont",
          "description": "Specifies the Font node for the Button node that has focus, if any. Only set to override the system default.",
          "descriptionHTML": "Specifies the \u003cstrong\u003eFont\u003c/strong\u003e node for the \u003cstrong\u003eButton\u003c/strong\u003e node that has focus, if any. Only set to override the system default."
        },
        "vertAlignment": {
          "type": "string",
          "defaultValue": "top",
          "accessPermission": "READ_WRITE",
          "name": "vertAlignment",
          "description": "Specifies the alignment point in the vertical direction. The effect of the value set depends on the whether the layoutDirection field value is set to either horiz or vert. Value layoutDirection  Use top  horiz Aligns the top edges of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the top edge of the children vert Sets the LayoutGroup node local y-coordinate origin at the top edge of the first child center  horiz Aligns the centers of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the center alignment point vert Sets the LayoutGroup node local y-coordinate origin at the center of the vertical column of children bottom  horiz Aligns the bottom edges of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the bottom edge of the children vert Sets the LayoutGroup node local y-coordinate origin at the bottom edge of the last child",
          "descriptionHTML": "\u003cp\u003eSpecifies the alignment point in the vertical direction. The effect of the value set depends on the whether the \u003ccode\u003elayoutDirection\u003c/code\u003e field value is set to either \u003ccode\u003ehoriz\u003c/code\u003e or \u003ccode\u003evert\u003c/code\u003e.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth colspan\u003d\"1\"\u003elayoutDirection\u0026nbsp;\u003c/th\u003e\n   \u003cth\u003eUse\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003etop\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd\u003eAligns the top edges of each child in the row, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the top edge of the children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the top edge of the first child\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003ecenter\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd\u003eAligns the centers of each child in the row, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the center alignment point\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the center of the vertical column of children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003ebottom\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd\u003eAligns the bottom edges of each child in the row, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the bottom edge of the children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local y-coordinate origin at the bottom edge of the last child\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "top": "Aligns the top edges of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the top edge of the children - Sets the LayoutGroup node local y-coordinate origin at the top edge of the first child",
            "bottom": "Aligns the bottom edges of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the bottom edge of the children - Sets the LayoutGroup node local y-coordinate origin at the bottom edge of the last child",
            "center": "Aligns the centers of each child in the row, and sets the LayoutGroup node local y-coordinate origin at the center alignment point - Sets the LayoutGroup node local y-coordinate origin at the center of the vertical column of children"
          },
          "possibleValuesNames": [
            "top",
            "center",
            "bottom"
          ]
        },
        "layoutDirection": {
          "type": "string",
          "defaultValue": "vert",
          "accessPermission": "READ_WRITE",
          "name": "layoutDirection",
          "description": "Controls the layout direction. Value Use horiz Positions the children in a row from left to right vert Positions the children in a column from top to bottom",
          "descriptionHTML": "\u003cp\u003eControls the layout direction.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eUse\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003ehoriz\u003c/td\u003e\n   \u003ctd\u003ePositions the children in a row from left to right\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003evert\u003c/td\u003e\n   \u003ctd\u003ePositions the children in a column from top to bottom\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "horiz": "Positions the children in a row from left to right",
            "vert": "Positions the children in a column from top to bottom"
          },
          "possibleValuesNames": [
            "horiz",
            "vert"
          ]
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "rightJustify": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "rightJustify",
          "description": "Specifies whether the button labels and icons should be right- or left-justified. When right-justified and there is an icon, it appears to the right of the button label.",
          "descriptionHTML": "Specifies whether the button labels and icons should be right- or left-justified. When right-justified and there is an icon, it appears to the right of the button label."
        },
        "iconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "iconUri",
          "description": "Specifies the bitmap for the button icon for all unfocused Button nodes in the group. Only set to override the system default.",
          "descriptionHTML": "Specifies the bitmap for the button icon for all unfocused \u003cstrong\u003eButton\u003c/strong\u003e nodes in the group. Only set to override the system default."
        },
        "maxWidth": {
          "type": "float",
          "defaultValue": "32767",
          "accessPermission": "READ_WRITE",
          "name": "maxWidth",
          "description": "When set, specifies the maximum width for the Button nodes in the group. The maxWidth field must be greater than or equal to the minWidth field.",
          "descriptionHTML": "When set, specifies the maximum width for the \u003cstrong\u003eButton\u003c/strong\u003e nodes in the group. The \u003ccode\u003emaxWidth\u003c/code\u003e field must be greater than or equal to the \u003ccode\u003eminWidth\u003c/code\u003e field."
        },
        "addItemSpacingAfterChild": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "addItemSpacingAfterChild",
          "description": "Controls how the spaces specified in the itemSpacings field are inserted. By default, the field value is set to true. This causes the specified spaces to be inserted after the child is positioned. If the field value is set to false, the specified item space is inserted before the child is positioned.",
          "descriptionHTML": "\u003cp\u003eControls how the spaces\u0026nbsp;specified in the\u0026nbsp;\u003ccode\u003eitemSpacings\u003c/code\u003e field are inserted. By default, the field value is set to \u003ccode\u003etrue\u003c/code\u003e. This causes the specified spaces to be inserted \u003cem\u003eafter\u003c/em\u003e the child is positioned. If the field value is set to \u003ccode\u003efalse\u003c/code\u003e, the specified item space is inserted \u003cem\u003ebefore\u003c/em\u003e the child is positioned.\u003c/p\u003e"
        },
        "focusButton": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "focusButton",
          "description": "Write-Only  Causes the button with the specified index to receive the focus when the ButtonGroup node has the key focus. Note that if the ButtonGroup node does not have the key focus when the focusButton field is set, the specified button will display the focus \"footprint\" as its background.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003eCauses the button with the specified index to receive the focus when the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node has the key focus. Note that if the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node does not have the key focus when the \u003ccode\u003efocusButton\u003c/code\u003e field is set, the specified button will display the focus \"footprint\" as its background."
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "buttons": {
          "type": "array of strings",
          "defaultValue": "[ ]",
          "accessPermission": "WRITE_ONLY",
          "name": "buttons",
          "description": "Write-Only Allows a set of Button nodes to be easily created by providing an array of button labels. Each string in the array will result in a Button node to be added to the ButtonGroup node, using the string as the button label.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eAllows a set of \u003cstrong\u003eButton\u003c/strong\u003e nodes to be easily created by providing an array of button labels. Each string in the array will result in a \u003cstrong\u003eButton\u003c/strong\u003e node to be added to the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node, using the string as the button label."
        },
        "horizAlignment": {
          "type": "string",
          "defaultValue": "left",
          "accessPermission": "READ_WRITE",
          "name": "horizAlignment",
          "description": "Specifies the alignment point in the horizontal direction. The effect of the value set depends on the whether the layoutDirection field value is set to either horiz or vert. Value layoutDirection  Use left  vert Aligns the left edges of each child in the column, and sets the LayoutGroup node local x-coordinate origin at the left edge of the children horiz Sets the LayoutGroup node local x-coordinate origin at the left edge of the first child center  vert Aligns the centers of each child in the column, and sets the LayoutGroup node local x-coordinate origin at the center alignment point horiz Sets the LayoutGroup node local x-coordinate origin at the center of the horizontal row of children right  vert Aligns the right edges of each child in the column, and sets the LayoutGroup node local x-coordinate origin is at the right edge of the children horiz Sets the LayoutGroup node local x-coordinate origin at the right edge of the last child",
          "descriptionHTML": "\u003cp\u003eSpecifies the alignment point in the horizontal direction. The effect of the value set depends on the whether the \u003ccode\u003elayoutDirection\u003c/code\u003e field value is set to either \u003ccode\u003ehoriz\u003c/code\u003e or \u003ccode\u003evert\u003c/code\u003e.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth colspan\u003d\"1\"\u003elayoutDirection\u0026nbsp;\u003c/th\u003e\n   \u003cth\u003eUse\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003eleft\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd\u003eAligns the left edges of each child in the column, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node\u0026nbsp;local x-coordinate origin at the left edge of the children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local x-coordinate origin at the left edge of the first child\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003ecenter\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd\u003eAligns the centers of each child in the column, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e\u0026nbsp;node\u0026nbsp;local x-coordinate origin at the center alignment point\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local x-coordinate origin at the center of the horizontal row of children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd rowspan\u003d\"2\"\u003eright\u0026nbsp;\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003evert\u003c/td\u003e\n   \u003ctd\u003eAligns the right edges of each child in the column, and sets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e\u0026nbsp;node\u0026nbsp;local x-coordinate origin is at the right edge of the children\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003ehoriz\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eSets the \u003cstrong\u003eLayoutGroup\u003c/strong\u003e node local x-coordinate origin at the right edge of the last child\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "left": "Aligns the left edges of each child in the column, and sets the LayoutGroup node local x-coordinate origin at the left edge of the children - Sets the LayoutGroup node local x-coordinate origin at the left edge of the first child",
            "center": "Aligns the centers of each child in the column, and sets the LayoutGroup node local x-coordinate origin at the center alignment point - Sets the LayoutGroup node local x-coordinate origin at the center of the horizontal row of children",
            "right": "Aligns the right edges of each child in the column, and sets the LayoutGroup node local x-coordinate origin is at the right edge of the children - Sets the LayoutGroup node local x-coordinate origin at the right edge of the last child"
          },
          "possibleValuesNames": [
            "left",
            "center",
            "right"
          ]
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "buttonSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "buttonSelected",
          "description": "Read-Only Set to the index of the selected button whenever the user selects a button in the group.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eSet to the index of the selected button whenever the user selects a button in the group."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "minWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "minWidth",
          "description": "Specifies the minimum width for the Button nodes in the group. The minWidth field must be less than or equal to the maxWidth field. Only set to override the system default.",
          "descriptionHTML": "Specifies the minimum width for the \u003cstrong\u003eButton\u003c/strong\u003e nodes in the group. The \u003ccode\u003eminWidth\u003c/code\u003e field must be less than or equal to the \u003ccode\u003emaxWidth\u003c/code\u003e field. Only set to override the system default."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "textColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "textColor",
          "description": "Specifies the button label color for all unfocused Button nodes in the group. Only set to override the system default.",
          "descriptionHTML": "\u003cp\u003eSpecifies the button label color for all unfocused \u003cstrong\u003eButton\u003c/strong\u003e nodes in the group. Only set to override the system default.\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the bitmap to be used as the focus footprint background, when focus is not on the ButtonGroup node. The focus footprint is a visual indicator of the button that will take focus when focus moves back onto the ButtonGroup node. Only set to override the system default.",
          "descriptionHTML": "Specifies the bitmap to be used as the focus footprint background, when focus is not on the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node. The focus footprint is a visual indicator of the button that will take focus when focus moves back onto the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node. Only set to override the system default."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "textFont": {
          "type": "Font",
          "defaultValue": "system: MediumSystemFont",
          "accessPermission": "READ_WRITE",
          "name": "textFont",
          "description": "Specifies the Font node for all unfocused Button nodes in the group. Only set to override the system default.",
          "descriptionHTML": "Specifies the \u003cstrong\u003eFont\u003c/strong\u003e node for all unfocused \u003cstrong\u003eButton\u003c/strong\u003e nodes in the group. Only set to override the system default."
        },
        "focusedIconUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusedIconUri",
          "description": "Specifies the bitmap for the focused button icon. Only set to override the system default.",
          "descriptionHTML": "Specifies the bitmap for the focused button icon. Only set to override the system default."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        }
      },
      "name": "ButtonGroup",
      "description": "The ButtonGroup node class manages the layout, visual attributes, and focus management of a vertical list of Button nodes. When the ButtonGroup node has focus, it sets the key focus on a single one of its child Button nodes.The buttons can be easily created using default button appearances by setting the buttons field to an array of strings containing the labels for each button.  A single observer can watch for any of the Button nodes in the group to be selected by observing the buttonSelected field. By default, Button nodes added to the group will have the default button appearance. Several fields exist that allow you to change an attribute of the appearance of all Button nodes in the group.",
      "descriptionHTML": "The\u0026nbsp;\u003cstrong\u003eButtonGroup\u003c/strong\u003e\u0026nbsp;node class manages the layout, visual attributes, and focus management of a vertical list of \u003cstrong\u003eButton\u003c/strong\u003e nodes. When the \u003cstrong\u003eButtonGroup\u003c/strong\u003e node has focus, it sets the key focus on a single one of its child \u003cstrong\u003eButton\u003c/strong\u003e nodes.\u003cli\u003eThe buttons can be easily created using default button appearances by setting the buttons field to an array of strings containing the labels for each button.\u0026nbsp;\u003c/li\u003e\n\u003cli\u003eA single observer can watch for any of the \u003cstrong\u003eButton\u003c/strong\u003e nodes in the group to be selected by observing the \u003ccode\u003ebuttonSelected\u003c/code\u003e field.\u003c/li\u003e\n\u003cli\u003eBy default, \u003cstrong\u003eButton\u003c/strong\u003e nodes added to the group will have the default button appearance. Several fields exist that allow you to change an attribute of the appearance of all \u003cstrong\u003eButton\u003c/strong\u003e nodes in the group.\u003c/li\u003e",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/ButtonGroup",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "layoutDirection",
        "horizAlignment",
        "vertAlignment",
        "itemSpacings",
        "addItemSpacingAfterChild",
        "textColor",
        "focusedTextColor",
        "textFont",
        "focusedTextFont",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "iconUri",
        "focusedIconUri",
        "minWidth",
        "maxWidth",
        "buttonHeight",
        "rightJustify",
        "buttonSelected",
        "buttonFocused",
        "focusButton",
        "buttons"
      ],
      "documentationVersion": 21
    },
    "Animation": {
      "parentName": "AnimationBase",
      "isAbstract": false,
      "fields": {
        "duration": {
          "type": "Time",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "duration",
          "description": "Sets the duration of the animation in seconds.",
          "descriptionHTML": "Sets the duration of the animation in seconds."
        },
        "easeOutPercent": {
          "type": "float",
          "defaultValue": "0.5",
          "accessPermission": "READ_WRITE",
          "name": "easeOutPercent",
          "description": "If easeFunction is set to piecewise, easeOutPercent sets the percentage of the animation duration during which ease-out is applied. Note that the values of easeInPercent plus easeOutPercent must be less than or equal to 1. For all other values of easeFunction, easeOutPercent is ignored.",
          "descriptionHTML": "\u003cp\u003eIf \u003ccode\u003eeaseFunction\u003c/code\u003e is set to \u003ccode\u003epiecewise\u003c/code\u003e, \u003ccode\u003eeaseOutPercent\u003c/code\u003e sets the percentage of the animation duration during which ease-out is applied. Note that the values of \u003ccode\u003eeaseInPercent\u003c/code\u003e plus \u003ccode\u003eeaseOutPercent\u003c/code\u003e must be less than or equal to 1.\u003c/p\u003e\u003cp\u003eFor all other values of \u003ccode\u003eeaseFunction\u003c/code\u003e, \u003ccode\u003eeaseOutPercent\u003c/code\u003e is ignored.\u003c/p\u003e"
        },
        "easeFunction": {
          "type": "string",
          "defaultValue": "inOutCubic",
          "accessPermission": "READ_WRITE",
          "name": "easeFunction",
          "description": "Specifies the interpolator function to be used for the animation. Value Ease-In/Ease-Out Function linear No ease-in or ease-out inQuad Quadratic ease-in function, no ease-out inCubic Cubic ease-in function, no ease-out inQuartic Quartic ease-in function, no ease-out inQuintic Quintic ease-in function, no ease-out inExpo Exponential ease-in function, no ease-out outQuad Quadratic ease-out function, no ease-in outCubic Cubic ease-out function, no ease-in outQuartic Quartic ease-out function, no ease-in outQuintic Quintic ease-out function, no ease-in outExpo Exponential ease-out function, no ease-in inOutQuad Quadratic ease-in and ease-out function inOutCubic Cubic ease-in and ease-out function inOutQuartic Quartic ease-in and ease-out function inOutQuintic Quintic ease-in and ease-out function inOutExpo Exponential ease-in and ease-out function piecewise Quadratic ease-in and ease-out function with extra control over the percentage of the duration during which ease-in and ease-out occurs. The extra control is specified using the easeInPercent and easeOutPercent fields.",
          "descriptionHTML": "\u003cp\u003eSpecifies the interpolator function to be used for the animation.\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eEase-In/Ease-Out\u0026nbsp;Function\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003elinear\u003c/td\u003e\n   \u003ctd\u003eNo ease-in or ease-out\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einQuad\u003c/td\u003e\n   \u003ctd\u003eQuadratic ease-in function, no ease-out\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einCubic\u003c/td\u003e\n   \u003ctd\u003eCubic ease-in function, no ease-out\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einQuartic\u003c/td\u003e\n   \u003ctd\u003eQuartic ease-in function, no ease-out\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einQuintic\u003c/td\u003e\n   \u003ctd\u003eQuintic ease-in function, no ease-out\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einExpo\u003c/td\u003e\n   \u003ctd\u003eExponential ease-in function, no ease-out\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eoutQuad\u003c/td\u003e\n   \u003ctd\u003eQuadratic ease-out function, no ease-in\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eoutCubic\u003c/td\u003e\n   \u003ctd\u003eCubic ease-out function, no ease-in\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eoutQuartic\u003c/td\u003e\n   \u003ctd\u003eQuartic ease-out function, no ease-in\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eoutQuintic\u003c/td\u003e\n   \u003ctd\u003eQuintic ease-out function, no ease-in\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eoutExpo\u003c/td\u003e\n   \u003ctd\u003eExponential ease-out function, no ease-in\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einOutQuad\u003c/td\u003e\n   \u003ctd\u003eQuadratic ease-in and ease-out function\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einOutCubic\u003c/td\u003e\n   \u003ctd\u003eCubic ease-in and ease-out function\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einOutQuartic\u003c/td\u003e\n   \u003ctd\u003eQuartic ease-in and ease-out function\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einOutQuintic\u003c/td\u003e\n   \u003ctd\u003eQuintic ease-in and ease-out function\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003einOutExpo\u003c/td\u003e\n   \u003ctd\u003eExponential ease-in and ease-out function\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003epiecewise\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eQuadratic ease-in and ease-out function with extra control over the percentage of the duration during which ease-in and ease-out occurs. The extra control is specified using the \u003ccode\u003eeaseInPercent\u003c/code\u003e and \u003ccode\u003eeaseOutPercent\u003c/code\u003e fields.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "linear": "No ease-in or ease-out",
            "outCubic": "Cubic ease-out function, no ease-in",
            "inOutQuintic": "Quintic ease-in and ease-out function",
            "piecewise": "Quadratic ease-in and ease-out function with extra control over the percentage of the duration during which ease-in and ease-out occurs. The extra control is specified using the easeInPercent and easeOutPercent fields.",
            "inQuartic": "Quartic ease-in function, no ease-out",
            "inExpo": "Exponential ease-in function, no ease-out",
            "inQuad": "Quadratic ease-in function, no ease-out",
            "inQuintic": "Quintic ease-in function, no ease-out",
            "inCubic": "Cubic ease-in function, no ease-out",
            "inOutExpo": "Exponential ease-in and ease-out function",
            "outQuintic": "Quintic ease-out function, no ease-in",
            "outQuad": "Quadratic ease-out function, no ease-in",
            "inOutQuartic": "Quartic ease-in and ease-out function",
            "inOutCubic": "Cubic ease-in and ease-out function",
            "outQuartic": "Quartic ease-out function, no ease-in",
            "outExpo": "Exponential ease-out function, no ease-in",
            "inOutQuad": "Quadratic ease-in and ease-out function"
          },
          "possibleValuesNames": [
            "linear",
            "inQuad",
            "inCubic",
            "inQuartic",
            "inQuintic",
            "inExpo",
            "outQuad",
            "outCubic",
            "outQuartic",
            "outQuintic",
            "outExpo",
            "inOutQuad",
            "inOutCubic",
            "inOutQuartic",
            "inOutQuintic",
            "inOutExpo",
            "piecewise"
          ]
        },
        "delay": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "delay",
          "description": "Delays the start of the animation by the specified number of seconds",
          "descriptionHTML": "Delays the start of the animation by the specified number of seconds"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "repeat": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "repeat",
          "description": "Controls whether the animation stops when it finishes (false) or repeats from the beginning (true)",
          "descriptionHTML": "Controls whether the animation stops when it finishes (false) or repeats from the beginning (true)"
        },
        "control": {
          "type": "option string",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "control",
          "description": "Controls the animation. Supported options include: Option Effect none Initial state with no associated action start Always plays the animation from the beginning stop Stops the animation in its current state pause Pauses the animation in its current state resume If paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning. finish Jumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.  ",
          "descriptionHTML": "\u003cp\u003eControls the animation. Supported\u0026nbsp;options include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eInitial state with no associated action\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estart\u003c/td\u003e\n   \u003ctd\u003eAlways plays the animation from the beginning\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estop\u003c/td\u003e\n   \u003ctd\u003eStops the animation in its current state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epause\u003c/td\u003e\n   \u003ctd\u003ePauses the animation in its current state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eresume\u003c/td\u003e\n   \u003ctd\u003eIf paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efinish\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eJumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.\u0026nbsp;\u0026nbsp;\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "resume": "If paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning.",
            "stop": "Stops the animation in its current state",
            "start": "Always plays the animation from the beginning",
            "finish": "Jumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.",
            "none": "Initial state with no associated action",
            "pause": "Pauses the animation in its current state"
          },
          "possibleValuesNames": [
            "none",
            "start",
            "stop",
            "pause",
            "resume",
            "finish"
          ]
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "state": {
          "type": "value string",
          "defaultValue": "stopped",
          "accessPermission": "READ_ONLY",
          "name": "state",
          "description": "Read-Only  Indicates the state of the animation. Values include: Value Meaning running Indicates that the animation is in progress paused Indicates that the animation has been paused stopped Indicates that the animation has either run to completion or has been explicitly stopped",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003e Indicates the state of the animation. Values include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003erunning\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation is in progress\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epaused\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation has been paused\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estopped\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation has either run to completion or has been explicitly stopped\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "running": "Indicates that the animation is in progress",
            "paused": "Indicates that the animation has been paused",
            "stopped": "Indicates that the animation has either run to completion or has been explicitly stopped"
          },
          "possibleValuesNames": [
            "running",
            "paused",
            "stopped"
          ]
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "easeInPercent": {
          "type": "float",
          "defaultValue": "0.5",
          "accessPermission": "READ_WRITE",
          "name": "easeInPercent",
          "description": "If easeFunction is set to piecewise, easeInPercent sets the percentage of the animation duration during which ease-in is applied. Note that the values of easeInPercent plus easeOutPercent must be less than or equal to 1.For all other values of easeFunction, easeInPercent is ignored.",
          "descriptionHTML": "\u003cp\u003eIf \u003ccode\u003eeaseFunction\u003c/code\u003e is set to \u003ccode\u003epiecewise\u003c/code\u003e, \u003ccode\u003eeaseInPercent\u003c/code\u003e sets the percentage of the animation duration during which ease-in is applied. Note that the values of \u003ccode\u003eeaseInPercent\u003c/code\u003e plus \u003ccode\u003eeaseOutPercent\u003c/code\u003e must be less than or equal to 1.\u003c/p\u003eFor all other values of \u003ccode\u003eeaseFunction\u003c/code\u003e, \u003ccode\u003eeaseInPercent\u003c/code\u003e is ignored."
        }
      },
      "name": "Animation",
      "description": "The Animation node class provides animations of renderable nodes, by applying interpolator functions to the values in specified renderable node fields. For an animation to take effect, an Animation node definition must include a child field interpolator node (, , ) definition for each renderable node field that is animated.The Animation node class provides a simple linear interpolator function, where the animation takes place smoothly and simply from beginning to end. The Animation node class also provides several more complex interpolator functions to allow custom animation effects. For example, you can move a graphic image around the screen at differing speeds and curved trajectories at different times in the animation by specifying the appropriate function in the easeFunction field (quadratic and exponential are two examples of functions that can be specified). The interpolator functions are divided into two parts: the beginning of the animation (ease-in), and the end of the animation (ease-out). You can apply a specified interpolator function to either or both ease-in and ease-out, or specify no function for either or both (which is the linear function). You can also change the portion of the animation that is ease-in and ease-out to arbitrary fractional values for a quadratic interpolator function applied to both ease-in and ease-out.",
      "descriptionHTML": "The \u003cstrong\u003eAnimation\u003c/strong\u003e node class provides animations of renderable nodes, by\u0026nbsp;applying interpolator functions to the values in specified renderable node fields. For an animation to take effect, an\u0026nbsp;\u003cstrong\u003eAnimation\u003c/strong\u003e node definition must include a child field interpolator\u0026nbsp;node (\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"FloatFieldInterpolator\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e, \u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"Vector2DFieldInterpolator\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e, \u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ColorFieldInterpolator\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e) definition\u0026nbsp;for each renderable node field that is animated.The \u003cstrong\u003eAnimation\u003c/strong\u003e node class provides a simple linear\u0026nbsp;interpolator\u0026nbsp;function, where the animation takes place smoothly and simply from beginning to end. The \u003cstrong\u003eAnimation\u003c/strong\u003e node class also provides several more complex interpolator functions to allow custom animation effects. For example, you can move a graphic image around the screen at differing speeds and curved trajectories at different times in the animation by specifying the appropriate function in the \u003ccode\u003eeaseFunction\u003c/code\u003e field (quadratic and exponential are\u0026nbsp;two examples of functions that\u0026nbsp;can be specified). The interpolator functions are divided into two parts: the beginning of the animation (ease-in), and the end of the animation (ease-out). You can apply a specified interpolator function to either or both ease-in and ease-out, or specify no function for\u0026nbsp;either or both (which is the linear function). You can also change the portion of the animation that is ease-in and ease-out to arbitrary fractional values for a quadratic interpolator function applied to both ease-in and ease-out.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/Animation",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "control",
        "state",
        "repeat",
        "delay",
        "duration",
        "easeFunction",
        "easeInPercent",
        "easeOutPercent"
      ],
      "documentationVersion": 30
    },
    "AnimationBase": {
      "parentName": "Node",
      "isAbstract": true,
      "fields": {
        "delay": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "delay",
          "description": "Delays the start of the animation by the specified number of seconds",
          "descriptionHTML": "Delays the start of the animation by the specified number of seconds"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "repeat": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "repeat",
          "description": "Controls whether the animation stops when it finishes (false) or repeats from the beginning (true)",
          "descriptionHTML": "Controls whether the animation stops when it finishes (false) or repeats from the beginning (true)"
        },
        "control": {
          "type": "option string",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "control",
          "description": "Controls the animation. Supported options include: Option Effect none Initial state with no associated action start Always plays the animation from the beginning stop Stops the animation in its current state pause Pauses the animation in its current state resume If paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning. finish Jumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.  ",
          "descriptionHTML": "\u003cp\u003eControls the animation. Supported\u0026nbsp;options include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003enone\u003c/td\u003e\n   \u003ctd\u003eInitial state with no associated action\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estart\u003c/td\u003e\n   \u003ctd\u003eAlways plays the animation from the beginning\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estop\u003c/td\u003e\n   \u003ctd\u003eStops the animation in its current state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epause\u003c/td\u003e\n   \u003ctd\u003ePauses the animation in its current state\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003eresume\u003c/td\u003e\n   \u003ctd\u003eIf paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efinish\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eJumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.\u0026nbsp;\u0026nbsp;\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "resume": "If paused, resumes the animation from its current state. If the animation is not paused, plays the animation from the beginning.",
            "stop": "Stops the animation in its current state",
            "start": "Always plays the animation from the beginning",
            "finish": "Jumps to the end of the animation, then stops. All animated fields will be immediately set to their final values as if the animation had completed.",
            "none": "Initial state with no associated action",
            "pause": "Pauses the animation in its current state"
          },
          "possibleValuesNames": [
            "none",
            "start",
            "stop",
            "pause",
            "resume",
            "finish"
          ]
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "state": {
          "type": "value string",
          "defaultValue": "stopped",
          "accessPermission": "READ_ONLY",
          "name": "state",
          "description": "Read-Only  Indicates the state of the animation. Values include: Value Meaning running Indicates that the animation is in progress paused Indicates that the animation has been paused stopped Indicates that the animation has either run to completion or has been explicitly stopped",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u0026nbsp;\u003cbr\u003e Indicates the state of the animation. Values include:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eValue\u003c/th\u003e\n   \u003cth\u003eMeaning\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003erunning\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation is in progress\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003epaused\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation has been paused\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003estopped\u003c/td\u003e\n   \u003ctd\u003eIndicates that the animation has either run to completion or has been explicitly stopped\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "running": "Indicates that the animation is in progress",
            "paused": "Indicates that the animation has been paused",
            "stopped": "Indicates that the animation has either run to completion or has been explicitly stopped"
          },
          "possibleValuesNames": [
            "running",
            "paused",
            "stopped"
          ]
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        }
      },
      "name": "AnimationBase",
      "description": "AnimationBase is an abstract node class that contains the fields common to the , , and nodes. The purpose of the AnimationBase node class is to provide the basic functionality needed to animate screen elements, such as moving them across the display screen, fading them in and out of view, or changing their color. All node classes extended from AnimationBase require the use of the interpolator node classes FloatFieldInterpolator, Vector2DFieldInterpolator, and  as child nodes to achieve a specific animation effect.",
      "descriptionHTML": "\u003cstrong\u003eAnimationBase\u003c/strong\u003e is an abstract node class that contains the fields common to the \u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"Animation\" /\u003e\n \u003c/ac:link\u003e, \n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"SequentialAnimation\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e, and \u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ParallelAnimation\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e nodes. The purpose of the \u003cstrong\u003eAnimationBase\u003c/strong\u003e node class is to provide the basic functionality needed to animate screen elements, such as moving them across the display screen, fading them in and out of view, or changing their color. All node classes extended from \u003cstrong\u003eAnimationBase\u003c/strong\u003e require the use of the interpolator node classes \n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"FloatFieldInterpolator\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eFloatFieldInterpolator\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e, \n\u003cac:link\u003e\n \u003cri:page ri:content-title\u003d\"Vector2DFieldInterpolator\" /\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eVector2DFieldInterpolator\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e, and\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ColorFieldInterpolator\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e\u0026nbsp;as child nodes to achieve a specific animation effect.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/AnimationBase",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "control",
        "state",
        "repeat",
        "delay"
      ],
      "documentationVersion": 41
    },
    "MarkupList": {
      "parentName": "ArrayGrid",
      "isAbstract": false,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e\u003cbr\u003eWhen set to a valid item index, this causes the list to quickly scroll so that the specified index moves into the focus position."
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins.\u0026nbsp;Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Specifies whether or not the focus indicator bitmap is displayed",
          "descriptionHTML": "Specifies whether or not the focus indicator bitmap is displayed"
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "The second value of the vector specifies the vertical spacing between items in the list. The first value of the vector is ignored.",
          "descriptionHTML": "The second value of the vector specifies the vertical spacing between items in the list. The first value of the vector is ignored."
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "Specifies the bitmap file to use as a visual separator between the last and first list items when the list wraps. In most case, this should be a 9-patch image that specifies both expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file to use as a visual separator between the last and first list items when the list wraps. In most case, this should be a 9-patch image that specifies both expandable regions.\u0026nbsp;Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "Specifies the font for section divider labels",
          "descriptionHTML": "\u003cp\u003eSpecifies the font for section divider labels\u003c/p\u003e"
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When a list item gains the key focus, itemFocused is set to the index of the focused item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list item gains the key focus, itemFocused is set to the index of the focused item."
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "Specifies differing spaces between each grid column, to allow the spacing between columns to vary from column to column. This field is not used by lists. The specified values override the itemSpacing field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSpacing field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each grid column, to allow the\u0026nbsp;spacing between\u0026nbsp;columns to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of each item in the list",
          "descriptionHTML": "Specifies the width and height of each item in the list"
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "0xddddddff",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "Specifies the text color for section divider labels",
          "descriptionHTML": "Specifies the text color for section divider labels"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items",
          "descriptionHTML": "Specifies whether the focus indicator bitmap is drawn below or on top of the list items"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, this causes the list to immediately update so that the specified index moves into the focus position."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list or a column of grid items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect floatingFocus Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible. fixedFocusWrap Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down. fixedFocus Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list or a column\u0026nbsp;of grid items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efixedFocus\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eCauses the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible.",
            "fixedFocusWrap": "Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down.",
            "fixedFocus": "Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap",
            "fixedFocus"
          ]
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "sectionDividerBitmapUri": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "Specifies the bitmap file to use as visual separator between sections of the grid. The section dividers can include an icon and a label in addition to the section divider bitmap. Note that for sections that do not contain an icon or a title, the wrapDividerBitmapUri is used for the section dividers instead.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as visual separator between sections of the grid. The section dividers can include an icon and a label in addition to the section divider bitmap.\u003c/p\u003e\u003cp\u003eNote that for sections that do not contain an icon or a title, the wrapDividerBitmapUri is used for the section dividers instead.\u003c/p\u003e"
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "117",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width.",
          "descriptionHTML": "Specifies the minimum width of the section divider bitmap. The section divider label will be ellipsized if necessary in order to ensure that the section divider bitmap meets the minimum width."
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "Specifies the bitmap file used for the focus indicator when the list does not have focus. In most cases, this should be a 9-patch image that specifies both expandable regions as well as margins.\u0026nbsp;Only set this field to specify a custom bitmap that differs in appearance from the default bitmap."
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When a list item is selected, itemSelected is set to the index of the selected item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e \u003cbr\u003eWhen a list item is selected, itemSelected is set to the index of the selected item."
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "Specifies differing widths for each grid column, to allow the width of each column to vary from column to column. This field is not used by lists. The specified values override the itemSize field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSize field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing widths for each grid column, to allow the\u0026nbsp;width of each column to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "itemComponentName": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "itemComponentName",
          "description": "Specifies the name of a XML component for the list items. An instance of this component is created on demand for each visible item of the list. The XML component must define a specific interface as detailed in MarkupList XML Component below.",
          "descriptionHTML": "Specifies the name of a XML component for the list items. An instance of this component is created on demand for each visible item of the list. The XML component must define a specific interface as detailed in \n\u003cac:link ac:anchor\u003d\"MarkupListXMLComponent\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eMarkupList XML Component\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below."
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "12",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows displayed. Note that the actual number of rows may be more or less than the number of visible columns depending on the number of items in the grid\u0027s content.",
          "descriptionHTML": "Specifies the number of visible rows displayed. Note that the actual number of rows may be more or less than the number of visible columns depending on the number of items in the grid\u0027s content."
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "40",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "Specifies the height of the section dividers. The width of the section dividers is determined by the width of the list items (e.g. itemSize[0]) and the sectionDividerLeftOffset field.",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the section dividers.\u003c/p\u003e\u003cp\u003eThe width of the section dividers is determined by the width of the list items (e.g. itemSize[0]) and the sectionDividerLeftOffset field.\u003c/p\u003e"
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content for the list. The binding between the data model defined by the ContentNode node and its child nodes and the visual elements of the MarkupList node XML component are determined by the scripting in the component. See Data Bindings below for more details.",
          "descriptionHTML": "Specifies the content for the list. The binding between the data model defined by the \u003cstrong\u003eContentNode\u003c/strong\u003e node and its child nodes\u0026nbsp;and the visual elements of the \u003cstrong\u003eMarkupList\u003c/strong\u003e node XML component are determined by the scripting in the component. See \n\u003cac:link ac:anchor\u003d\"DataBindings\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eData Bindings\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below for more details."
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items.",
          "descriptionHTML": "Number of pixels to offset the left edge of the section divider relative to the left edge of the list items."
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a ContentNode node for the grid. This field is not used by lists.",
          "descriptionHTML": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a \u003cstrong\u003eContentNode\u003c/strong\u003e node for the grid. This field is not used by lists."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "Specifies differing heights for each list or grid row, to allow the height of each row to vary from row to row. The specified values override the itemSize field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSize field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing heights for each list or grid row, to allow the height of each row to vary from row to row.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When a list item loses the key focus, itemFocused is set to the index of the unfocused item.",
          "descriptionHTML": "\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list item loses the key focus, itemFocused is set to the index of the unfocused item."
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "Specifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row. The specified values override the itemSpacing field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSpacing field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row.\u003c/p\u003e\u003cp\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/p\u003e"
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "24",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "Specifies the height of the divider. The wrapDividerBitmap will be scaled to this height. The width of the wrap divider is set to the width of the list items (i.e. itemSize[0]) ",
          "descriptionHTML": "\u003cp\u003eSpecifies the height of the divider. The wrapDividerBitmap will be scaled to this height.\u003c/p\u003e\u003cp\u003eThe width of the wrap divider is set to the width of the list items (i.e. itemSize[0])\u0026nbsp;\u003c/p\u003e"
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "10",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "Specifies the spacing between the items appearing in the section divider (e.g. the spacing between the section divider icon, the section divider label, and the section divider bitmap). Note the section divider does not always include an icon and/or a title.",
          "descriptionHTML": "Specifies the spacing between the items appearing in the section divider (e.g. the spacing between the section divider icon, the section divider label, and the section divider bitmap). Note the section divider does not always include an icon and/or a title."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in a grid. This field is not used for lists.",
          "descriptionHTML": "Specifies the number of columns in a grid. This field is not used for lists."
        }
      },
      "name": "MarkupList",
      "description": "The MarkupList node class is a generic list class that can be used to display a list of items. The contents of each list item is an instance of an XML component specified by the itemComponentName field value. An instance of the XML component is used to display the data for each item in the list data model. The appearance of the list item as it enters/exits the list focus position can be customized using BrightScript.",
      "descriptionHTML": "The \u003cstrong\u003eMarkupList\u003c/strong\u003e\u0026nbsp;node class is a generic list class that can be used to display a list of items. The contents of each list item is an instance of an XML component specified by the \u003ccode\u003eitemComponentName\u003c/code\u003e field value. An instance of the XML component is used to display the data for each item in the list data model. The appearance of the list item as it enters/exits the list focus position can be customized using BrightScript.",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/MarkupList",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "numColumns",
        "focusRow",
        "focusColumn",
        "horizFocusAnimationStyle",
        "vertFocusAnimationStyle",
        "wrapDividerWidth",
        "fixedLayout",
        "numRenderPasses",
        "rowHeights",
        "columnWidths",
        "rowSpacings",
        "columnSpacings",
        "sectionDividerWidth",
        "itemComponentName",
        "content",
        "itemSize",
        "itemSpacing",
        "numRows",
        "drawFocusFeedback",
        "drawFocusFeedbackOnTop",
        "focusBitmapUri",
        "focusFootprintBitmapUri",
        "wrapDividerBitmapUri",
        "wrapDividerHeight",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem"
      ],
      "documentationVersion": 46
    },
    "EPGGrid": {
      "parentName": "ArrayGrid",
      "isAbstract": false,
      "fields": {
        "wrapDividerWidth": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerWidth",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the\u0026nbsp;width of a bitmap used as a visual divider between the last and first list or grid items when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "nowBarBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "nowBarBitmapUri",
          "description": "Specifies the bitmap file used for the Now Bar (a vertical bar indicating the current time). In most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cp\u003e\u003cspan\u003eSpecifies the bitmap file used for the Now Bar (a vertical bar indicating the current time). In most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e\u003c/p\u003e"
        },
        "animateToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "animateToItem",
          "description": "Write-Only When set to a valid item index, causes the list or grid to quickly scroll so that the item at the specified index moves into focus, or focus moves to the item.",
          "descriptionHTML": "\u003cspan\u003e\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, causes the list or grid to quickly scroll so that the item at the specified index moves into focus, or focus moves to the item.\u003c/span\u003e"
        },
        "horizFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "horizFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a row of grid items in response to the remote direction pad Left and Right key presses. This field is not used for lists. The possible values are: Option Effect floatingFocus Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible. fixedFocusWrap Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a row of grid items in response to the remote direction pad \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eLeft\u003c/strong\u003e\u003c/span\u003e and \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRight\u003c/strong\u003e\u003c/span\u003e key presses. This field is not used for lists. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row,\u0026nbsp;and the items will scroll left or right if there were items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float left or right until it reaches the end of the row, at which point the focus indicator will stay fixed on the first or last item in the row, and the items will scroll left or right if there were items that were not visible.",
            "fixedFocusWrap": "Causes the row to wrap around when the focus indicator reaches the first or last item in the row, as long as the row contains enough items to fill the row. If the row does not contain enough items to fill the row, the focus indicator will float left and right."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap"
          ]
        },
        "nowNextMode": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "nowNextMode",
          "description": "When set to true, the EPG grid displays two vertical columns of programs, showing Now and Next for each channel",
          "descriptionHTML": "When set to true, the EPG grid displays\u0026nbsp;two vertical columns of programs, showing Now and Next for each channel"
        },
        "focusBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusBitmapUri",
          "description": "Specifies the bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cp\u003eSpecifies the\u0026nbsp;bitmap file used for the focus indicator when the list has focus. In most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.\u003c/p\u003e"
        },
        "drawFocusFeedback": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedback",
          "description": "Causes a specified bitmap to be drawn on list or grid items to indicate focus has moved to that item.",
          "descriptionHTML": "Causes a specified bitmap to be drawn on list or grid items to indicate focus has moved to that item."
        },
        "itemSpacing": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSpacing",
          "description": "Specifies the horizontal and vertical spacing between the list or grid items. For lists, the vector2d Y-value specifies the vertical spacing between items in the list, and the vector2d X-value is ignored.",
          "descriptionHTML": "Specifies the horizontal and vertical spacing between the list or grid items. For lists, the vector2d Y-value specifies the vertical spacing between items in the list, and the vector2d X-value is ignored."
        },
        "maxDays": {
          "type": "integer",
          "defaultValue": "7",
          "accessPermission": "READ_WRITE",
          "name": "maxDays",
          "description": "Specifies the total width of the EPG grid in days",
          "descriptionHTML": "Specifies the total width of the EPG grid in days"
        },
        "leftEdgeTargetTime": {
          "type": "time",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "leftEdgeTargetTime",
          "description": "This is the time that the left edge of the EPG grid either represents, or is in the process of animating to represent. Setting it causes the EPG grid to animate to that time. The field value is initially set such that the now bar is as close to the left edge of the EPG grid as allowed by rules of the minimumNowBarOffset field value. The field value is ignored when the grid is in Now/Next mode (see the nowNextMode field).",
          "descriptionHTML": "\u003cp\u003eThis is the time that the left edge of the EPG grid either represents, or is in the process of animating to represent. Setting it causes the EPG grid to animate to that time. The field value is initially set such that the now bar is as close to the left edge of the EPG grid as allowed by rules of the \u003ccode\u003eminimumNowBarOffset\u003c/code\u003e field value. The field value is ignored when the grid is in Now/Next mode (see the \u003ccode\u003enowNextMode\u003c/code\u003e field).\u003c/p\u003e"
        },
        "wrapDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerBitmapUri",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies a custom bitmap to use as a visual divider between the last and first list or grid items, when the list or grid wraps. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.",
          "descriptionHTML": "\u003cp\u003eIf the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies a custom bitmap to use as a visual divider between the last and first\u0026nbsp;list or grid items, when the\u0026nbsp;list or grid wraps. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.\u003c/p\u003e"
        },
        "sectionDividerFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerFont",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom font to use for the section title text. Only set this field to use a different font than the system default.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom font to use for the section title text. Only set this field to use a different font than the system default."
        },
        "itemFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemFocused",
          "description": "Read-Only When focus moves to a list or grid item, set to the index of the focused item.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eWhen focus moves to a list or grid item, set to the index of the focused item.\u003c/p\u003e"
        },
        "columnSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnSpacings",
          "description": "Specifies differing spaces between each grid column, to allow the spacing between columns to vary from column to column. This field is not used by lists. The specified values override the itemSpacing field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSpacing field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each grid column, to allow the\u0026nbsp;spacing between\u0026nbsp;columns to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "itemSize": {
          "type": "vector2d",
          "defaultValue": "[0,0]",
          "accessPermission": "READ_WRITE",
          "name": "itemSize",
          "description": "Specifies the width and height of each item in the list or grid. For list or grid items that are posters, itemSize is the value of a basePosterSize field and any sub-elements included with the poster.",
          "descriptionHTML": "Specifies the width and height of each item in the list or grid. For list or grid items that are posters, \u003ccode\u003eitemSize\u003c/code\u003e is the value of a \u003ccode\u003ebasePosterSize\u003c/code\u003e field and any sub-elements included with the poster."
        },
        "id": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "id",
          "description": "Adds a dictionary entry that allows the node to be retrieved with ifSGDictionary findNode() function",
          "descriptionHTML": "Adds a dictionary entry that allows the node to be retrieved with \u003cstrong\u003eifSGDictionary\u003c/strong\u003e \u003ccode\u003efindNode()\u003c/code\u003e function"
        },
        "numRenderPasses": {
          "type": "integer",
          "defaultValue": "1",
          "accessPermission": "READ_WRITE",
          "name": "numRenderPasses",
          "description": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you must specify the rendering operation number for each of the item sub-elements as the renderPass field value for that sub-element. No sub-element that has a renderPass field value of 0 (the default), or has a renderPass field value greater than the value of the numRenderPasses field, will render.",
          "descriptionHTML": "Specifies the number of rendering operations to display a complex list or grid. This allows you to achieve a performance increase by specifying that individual sub-elements of the list or grid items occur on sequential rendering operations, rather than all of the item sub-elements being rendered in one rendering operation, which is the default. If you set this field to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e specify the rendering operation number for each of the item sub-elements as the \u003ccode\u003erenderPass\u003c/code\u003e field value for that sub-element. No sub-element that has a \u003ccode\u003erenderPass\u003c/code\u003e field value of 0 (the default), or has a \u003ccode\u003erenderPass\u003c/code\u003e field value greater than the value of the \u003ccode\u003enumRenderPasses\u003c/code\u003e field, will render."
        },
        "sectionDividerTextColor": {
          "type": "color",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerTextColor",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom color to use for the section title text. Only set this field to use a different text color than the system default.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom color to use for the section title text. Only set this field to use a different text color than the system default."
        },
        "drawFocusFeedbackOnTop": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "drawFocusFeedbackOnTop",
          "description": "If the drawFocusFeedback field value is set to true, specifies whether the specified focus indicator bitmap is drawn on top of the focused list or grid items. The default value draws the specified focus indicator bitmap below the focused list or grid item.",
          "descriptionHTML": "If the \u003ccode\u003edrawFocusFeedback\u003c/code\u003e field value is set to \u003ccode\u003etrue\u003c/code\u003e, specifies whether the specified focus indicator bitmap is drawn on top of the focused list or grid items. The default value draws the specified focus indicator bitmap below the focused list or grid item."
        },
        "programUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "programUnfocused",
          "description": "The program number of the last program to have the focus (the program that just lost the focus)",
          "descriptionHTML": "The program number of the last program to have the focus (the program that just lost the focus)"
        },
        "scaleRotateCenter": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "scaleRotateCenter",
          "description": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations",
          "descriptionHTML": "Describes the location of a point in the node local coordinate that serves as the center of the scale and rotation operations"
        },
        "jumpToItem": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "WRITE_ONLY",
          "name": "jumpToItem",
          "description": "Write-Only When set to a valid item index, causes the list or grid to immediately update so that the item at the specified index moves into focus, or focus moves to the item.",
          "descriptionHTML": "\u003cstrong\u003eWrite-Only\u003c/strong\u003e \u003cbr\u003eWhen set to a valid item index, causes the list or grid to immediately update so that the item at the specified index moves into focus, or focus moves to the item."
        },
        "visible": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "visible",
          "description": "If true, the node and its children are rendered. If false, the node and its children do not render.",
          "descriptionHTML": "If true, the node and its children are rendered. If false, the node and its children do not render."
        },
        "overlayBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "overlayBitmapUri",
          "description": "Specifies an overlay that is drawn on top of the entire EPG. This is used by default to make the bottom visible rows of the EPG grid appear to fade out, but could be used to add any overlay be drawn on top of the EPG grid. In most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. The overlay bitmap is drawn over the full width of the EPG grid with its bottom aligned to the bottom of the EPG grid. If the overlayHeight field value is greater than 0, the image will be stretched to the specified height (that is, from the bottom of the EPG grid to the specified height). If overlayHeight field value is set to 0, the bitmap will be drawn at its default height.",
          "descriptionHTML": "\u003cp\u003eSpecifies an overlay that is drawn on top of the entire EPG. This is used by default to make the bottom visible rows of the EPG grid appear to fade out, but could be used to add any overlay be drawn on top of the EPG grid.\u0026nbsp;\u003cspan\u003eIn most cases, this should be a 9-patch image that specifies expandable regions. \u003c/span\u003e Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.\u003c/p\u003e\u003cp\u003eThe overlay bitmap is drawn over the full width of the EPG grid with its bottom aligned to the bottom of the EPG grid. If the \u003ccode\u003eoverlayHeight\u003c/code\u003e field value is greater than 0, the image will be stretched to the specified height (that is, from the bottom of the EPG grid to the specified height). If \u003ccode\u003eoverlayHeight\u003c/code\u003e field value is set to 0, the bitmap will be drawn at its default height.\u003c/p\u003e"
        },
        "programFocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "programFocused",
          "description": "The program number of the focused program (within the focused channel)",
          "descriptionHTML": "The program number of the focused program (within the focused channel)"
        },
        "vertFocusAnimationStyle": {
          "type": "option string",
          "defaultValue": "floatingFocus",
          "accessPermission": "READ_WRITE",
          "name": "vertFocusAnimationStyle",
          "description": "Specifies the how the focus indicator moves in a list or a column of grid items in response to the remote direction pad Up and Down key presses. The possible values are: Option Effect floatingFocus Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible. fixedFocusWrap Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down. fixedFocus Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.",
          "descriptionHTML": "\u003cp\u003eSpecifies the how the focus indicator moves in a\u0026nbsp;list or a column\u0026nbsp;of grid items in response to the remote direction pad\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eUp\u003c/strong\u003e\u003c/span\u003e and\u0026nbsp;\u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eDown\u003c/strong\u003e\u003c/span\u003e key presses. The possible values are:\u003c/p\u003e\n\u003ctable\u003e\n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003cth\u003eOption\u003c/th\u003e\n   \u003cth\u003eEffect\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efloatingFocus\u003c/td\u003e\n   \u003ctd\u003eCauses the focus indicator to float\u0026nbsp;up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column,\u0026nbsp;and the items will scroll\u0026nbsp;up or down if there are items that were not visible.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd\u003efixedFocusWrap\u003c/td\u003e\n   \u003ctd\u003eCauses the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float\u0026nbsp;up and down.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd colspan\u003d\"1\"\u003efixedFocus\u003c/td\u003e\n   \u003ctd colspan\u003d\"1\"\u003eCauses the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached.\u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e",
          "possibleValues": {
            "floatingFocus": "Causes the focus indicator to float up or down until it reaches the end of the list or grid column, at which point the focus indicator will stay fixed on the first or last item in the list or grid column, and the items will scroll up or down if there are items that were not visible.",
            "fixedFocusWrap": "Causes the column to wrap around when the focus indicator reaches the first or last item in the list or grid column, as long as the list or grid column contains enough items to fill the list or grid column. If the list or grid column does not contain enough items to fill the list or grid column, the focus indicator will float up and down.",
            "fixedFocus": "Causes the focus to stay fixed on the upper leftmost item. As the user scrolls down, the row containing the previously selected item scrolls up off screen. Scrolling continues until the last row is reached."
          },
          "possibleValuesNames": [
            "floatingFocus",
            "fixedFocusWrap",
            "fixedFocus"
          ]
        },
        "channelInfoWidth": {
          "type": "float",
          "defaultValue": "189",
          "accessPermission": "READ_WRITE",
          "name": "channelInfoWidth",
          "description": "Width of the column showing the channel names in the EPG grid.",
          "descriptionHTML": "Width of the column showing the channel names in the EPG grid."
        },
        "focusColumn": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusColumn",
          "description": "Specifies the column that will have fixed focus for grids if the horizFocusAnimationStyle field value is set to fixedFocusWrap. This field is not used for lists.",
          "descriptionHTML": "Specifies the column that will have fixed focus for grids if the \u003ccode\u003ehorizFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e. This field is not used for lists."
        },
        "sectionDividerBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerBitmapUri",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies a custom bitmap to use as a visual divider between the sections of the list or grid. Only set this field to use a bitmap with a different appearance than the system default. For sections that do not include an icon or a title, the system default or custom bitmap specified as the wrapDividerBitmapUri field value is used for the section dividers. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.",
          "descriptionHTML": "\u003cp\u003eIf the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies a custom bitmap to use as a visual divider between the sections of the list or grid. Only set this field to use a bitmap with a different appearance than the system default. For sections that do not include an icon or a title, the system default or custom bitmap specified as the \u003ccode\u003ewrapDividerBitmapUri\u003c/code\u003e field value is used for the section dividers. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions, which is the type of bitmap used as the system default.\u003c/p\u003e"
        },
        "jumpToProgram": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "jumpToProgram",
          "description": "Set this field to the program index of the program you wish to have focus (in the focused channel). The grid will immediately jump to and focus on this program.",
          "descriptionHTML": "Set this field to the program index of the program you wish to have focus (in the focused channel). The grid will immediately jump to and focus on this program."
        },
        "focusable": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "focusable",
          "description": "Provides a hint as to whether or not this node can take the key focus",
          "descriptionHTML": "Provides a hint as to whether or not this node can take the key focus"
        },
        "sectionDividerMinWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerMinWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the minimum width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the minimum width\u0026nbsp;of the section divider bitmap."
        },
        "programTitleFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "programTitleFont",
          "description": "Specifies the font for the program titles",
          "descriptionHTML": "Specifies the font for the program titles"
        },
        "childRenderOrder": {
          "type": "option string",
          "defaultValue": "renderLast",
          "accessPermission": "READ_WRITE",
          "name": "childRenderOrder",
          "description": "If the value is renderFirst, any drawing done by this node will be done before the node children are rendered. If the value is renderLast, any drawing done by this node will be done after the node children are rendered.",
          "descriptionHTML": "If the value is \u003ccode\u003erenderFirst\u003c/code\u003e, any drawing done by this node will be done before the node children are rendered. If the value is \u003ccode\u003erenderLast\u003c/code\u003e, any drawing done by this node will be done after the node children are rendered."
        },
        "programTitleColor": {
          "type": "color",
          "defaultValue": "0xffffffff",
          "accessPermission": "READ_WRITE",
          "name": "programTitleColor",
          "description": "Specifies the text color for program titles when the program is unfocused",
          "descriptionHTML": "Specifies the text color for program titles when the program is unfocused"
        },
        "minimumNowBarOffset": {
          "type": "time",
          "defaultValue": "300",
          "accessPermission": "READ_WRITE",
          "name": "minimumNowBarOffset",
          "description": "Specifies (in seconds) the nearest that the Now bar (bar indicating the current time) can be to the left-hand edge of the EPG grid. If the Now bar advances to the minimumNowBarOffset field value plus 30 minutes, the EPG grid will automatically scroll right 30 minutes.",
          "descriptionHTML": "\u003cspan\u003eSpecifies (in seconds) the nearest that the Now bar (bar indicating the current time) can be to the left-hand edge of the EPG grid. If the Now bar advances to the \u003ccode\u003eminimumNowBarOffset\u003c/code\u003e field value plus 30 minutes, the EPG grid will automatically scroll right 30 minutes. \u003c/span\u003e"
        },
        "focusFootprintBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "focusFootprintBitmapUri",
          "description": "If the drawFocusFeedback field value is set to true, specifies a custom bitmap to be drawn on list or grid items to indicate focus on that item, when the list or grid itself does not have focus. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions as well as margins to fit around the item, which is the type of bitmap used as the system default.",
          "descriptionHTML": "If the \u003ccode\u003edrawFocusFeedback\u003c/code\u003e field value is set to \u003ccode\u003etrue\u003c/code\u003e, specifies a custom bitmap to be drawn on list or grid items to indicate focus on that item, when the list or grid itself does not have focus. Only set this field to use a bitmap with a different appearance than the system default. In most cases, you will want to use a 9-patch PNG bitmap with both expandable regions as well as margins to fit around the item, which is the type of bitmap used as the system default."
        },
        "itemSelected": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemSelected",
          "description": "Read-Only When a list or grid item is selected, set to the index of the selected item.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003c/strong\u003e\u003cbr\u003eWhen a list or grid\u0026nbsp;item is selected, set to the index of the selected item.\u003c/p\u003e"
        },
        "contentStartTime": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "contentStartTime",
          "description": "The earliest time that the EPG grid can be moved to",
          "descriptionHTML": "\u003cspan\u003eThe earliest time that the EPG grid can be moved to \u003c/span\u003e"
        },
        "programTitleFocusedColor": {
          "type": "color",
          "defaultValue": "0xff",
          "accessPermission": "READ_WRITE",
          "name": "programTitleFocusedColor",
          "description": "Specifies the text color for program titles when the program is focused",
          "descriptionHTML": "\u003cspan\u003eSpecifies the text color for program titles when the program is focused\u003c/span\u003e"
        },
        "programNowNextTimeColor": {
          "type": "color",
          "defaultValue": "0xffffff99",
          "accessPermission": "READ_WRITE",
          "name": "programNowNextTimeColor",
          "description": "When nowNextMode is true, specifies the text color for the time that appears in the now/next program cells when the program is unfocused",
          "descriptionHTML": "\u003cspan\u003eWhen nowNextMode is true, specifies the text color for the time that appears in the now/next program cells when the program is unfocused\u003c/span\u003e"
        },
        "infoGridGap": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "infoGridGap",
          "description": "Spacing between the channel names column and the main grid.",
          "descriptionHTML": "Spacing between the channel names column and the main grid."
        },
        "channelInfoFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "channelInfoFont",
          "description": "Specifies the font for the channel names",
          "descriptionHTML": "Specifies the font for the channel names"
        },
        "columnWidths": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "columnWidths",
          "description": "Specifies differing widths for each grid column, to allow the width of each column to vary from column to column. This field is not used by lists. The specified values override the itemSize field vector2d X-value for each grid column corresponding to its position in the array, in left to right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the itemSize field vector2d X-value is used for any unspecified columns.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing widths for each grid column, to allow the\u0026nbsp;width of each column to vary from\u0026nbsp;column to column. This field is not used by lists.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value for each grid column corresponding to its position in the array, in\u0026nbsp;left\u0026nbsp;to\u0026nbsp;right order. If the array contains fewer elements than the number of columns needed to display all the items in the grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d X-value is used for any unspecified columns. \u003c/span\u003e\u003c/p\u003e"
        },
        "sectionDividerWidth": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerWidth",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the width of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the width of the section divider bitmap."
        },
        "autoDismissTime": {
          "type": "time",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "autoDismissTime",
          "description": "Specified the time (in seconds) that the EPG grid will be displayed before automatically hiding itself. Setting it to 0 will cause the EPG grid to never hide itself.",
          "descriptionHTML": "Specified the time (in seconds) that the EPG grid will be displayed before automatically hiding itself. Setting it to 0 will cause the EPG grid to never hide itself."
        },
        "focusRow": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "focusRow",
          "description": "Specifies the row that will have fixed focus if the vertFocusAnimationStyle field value is set to fixedFocusWrap.",
          "descriptionHTML": "Specifies the row that will have fixed focus if the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e."
        },
        "inheritParentOpacity": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentOpacity",
          "description": "If true, the node opacity is determined by multiplying opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes. If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value.",
          "descriptionHTML": "If true, the node opacity is determined by multiplying\u0026nbsp;opacity attribute of the node by the opacity of the parent node, which may have been determined by multiplying the opacity of its ancestor nodes.\u0026nbsp;If false, the node opacity is determined by the opacity attribute set for the node or the default opacity attribute value."
        },
        "numRows": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numRows",
          "description": "Specifies the number of visible rows displayed. Note that the actual number of rows may be more or less than the number specified depending on the number of items in the list or grid content.",
          "descriptionHTML": "Specifies the number of visible rows displayed. \u003cspan\u003eNote that the actual number of rows may be more or less than the number specified depending on the number of items in the list or grid content. \u003c/span\u003e"
        },
        "focusedChild": {
          "type": "N/A",
          "defaultValue": "N/A",
          "accessPermission": "READ_WRITE",
          "name": "focusedChild",
          "description": "When a node or one of its children gains or loses the keyboard focus, the focusedChild field will be set and call its observer functions. In the observer function, typically, you use ifSGNodeFocus functions to query whether this node or some other node has the key focus or is in the key focus chain. Accessing the value of the field will result in script errors.",
          "descriptionHTML": "\u003cp\u003eWhen a node or one of its children gains or loses the keyboard focus, the \u003ccode style\u003d\"line-height: 13.0pt;font-size: 10.0pt;\"\u003efocusedChild\u003c/code\u003e field will be set and call its observer functions. In the observer function, typically, you use \u003cstrong\u003eifSGNodeFocus\u003c/strong\u003e functions to query whether this node or some other node has the key focus or is in the key focus chain.\u003c/p\u003e\u003cp\u003eAccessing the value of the field will result in script errors.\u003c/p\u003e"
        },
        "sectionDividerHeight": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerHeight",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the height of the section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the height of the section divider bitmap."
        },
        "scale": {
          "type": "vector2d",
          "defaultValue": "[1.0,1.0]",
          "accessPermission": "READ_WRITE",
          "name": "scale",
          "description": "Defines the scale factor to be applied to the node local coordinate",
          "descriptionHTML": "Defines the scale factor to be applied to the node local coordinate"
        },
        "content": {
          "type": "ContentNode",
          "defaultValue": "none",
          "accessPermission": "READ_WRITE",
          "name": "content",
          "description": "Specifies the content for the list. See Data Bindings below for more details.",
          "descriptionHTML": "Specifies the content for the list. See \n\u003cac:link ac:anchor\u003d\"DataBindings\"\u003e\n \u003cac:link-body\u003e\n  \u003cstrong\u003eData Bindings\u003c/strong\u003e\n \u003c/ac:link-body\u003e\n\u003c/ac:link\u003e below for more details."
        },
        "channelInfoBackgroundBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "channelInfoBackgroundBitmapUri",
          "description": "Specifies the bitmap file to use as the background for the channel names in the grid. In most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as the background for the channel names in the grid. \u003cspan\u003eIn most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e\u003c/p\u003e"
        },
        "duration": {
          "type": "double",
          "defaultValue": "9000",
          "accessPermission": "READ_WRITE",
          "name": "duration",
          "description": "Width (in seconds) of the visible section of the EPG grid. As an example, setting it to 10800 will cause the EPG grid to display 3 hours worth of programs horizontally.",
          "descriptionHTML": "\u003cspan\u003eWidth (in seconds) of the visible section of the EPG grid. As an example, setting it to 10800 will cause the EPG grid to display 3 hours worth of programs horizontally. \u003c/span\u003e"
        },
        "programHorizMargin": {
          "type": "float",
          "defaultValue": "14",
          "accessPermission": "READ_WRITE",
          "name": "programHorizMargin",
          "description": "Specifies the width of left and right margins of program cell text.",
          "descriptionHTML": "Specifies the width of left and right margins of program cell text."
        },
        "nowBarWidth": {
          "type": "float",
          "defaultValue": "4",
          "accessPermission": "READ_WRITE",
          "name": "nowBarWidth",
          "description": "Specifies the width of the Now bar",
          "descriptionHTML": "Specifies the width of the Now bar"
        },
        "programBackgroundBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "programBackgroundBitmapUri",
          "description": "Specifies the bitmap file to use as the background for the program names in the grid. In most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as the background for the program names in the grid. \u003cspan\u003eIn most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap. \u003c/span\u003e\u003c/p\u003e"
        },
        "overlayHeight": {
          "type": "float",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "overlayHeight",
          "description": "Specifies the height of the overlay image (see the overlayBitmapUri field). If set to 0 the overlay image is drawn at its default height.",
          "descriptionHTML": "Specifies the height of the overlay image (see the\u0026nbsp;\u003ccode\u003eoverlayBitmapUri\u003c/code\u003e field). If set to 0 the overlay image is drawn at its default height."
        },
        "sectionDividerLeftOffset": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerLeftOffset",
          "description": "If the ContentNode node specifies sections for a list or grid, specifies the left offset of the section divider from the list or grid.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, specifies the left offset of the section divider from the list or grid."
        },
        "nowBarHeight": {
          "type": "float",
          "defaultValue": "410",
          "accessPermission": "READ_WRITE",
          "name": "nowBarHeight",
          "description": "Specifies the height of the Now bar",
          "descriptionHTML": "Specifies the height of the Now bar"
        },
        "useTunerTime": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "useTunerTime",
          "description": "When set to true, and the time derived from the tuner is available, then the EPGGrid node will use the time derived from the tuner. Otherwise the system time will be used.",
          "descriptionHTML": "When set to true, and the time derived from the tuner is available, then the \u003cstrong\u003eEPGGrid\u003c/strong\u003e node will use the time derived from the tuner. Otherwise the system time will be used."
        },
        "timeLabelOffset": {
          "type": "float",
          "defaultValue": "14",
          "accessPermission": "READ_WRITE",
          "name": "timeLabelOffset",
          "description": "Specifies the offset from the edge of the grid of the leftmost time label",
          "descriptionHTML": "Specifies the offset from the edge of the grid of the leftmost time label"
        },
        "homeChannel": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "homeChannel",
          "description": "This represents the index of the channel that is the home channel. The intended use is to be the channel that was being watched when the EPG grid was called up. Pressing Rewind on the remote control when the grid is all the way left (that is, Now bar showing or in Now/Next mode) will cause the grid to focus on this channel. Index 0 is the first channel in the grid.",
          "descriptionHTML": "This represents the index of the channel that is the home channel. The intended use is to be the channel that was being watched when the EPG grid was called up. Pressing \u003cspan style\u003d\"color: rgb(128,0,128);\"\u003e\u003cstrong\u003eRewind\u003c/strong\u003e\u003c/span\u003e on the remote control when the grid is all the way left (that is, Now bar showing or in Now/Next mode) will cause the grid to focus on this channel. Index 0 is the first channel in the grid."
        },
        "timeLabelFont": {
          "type": "font",
          "defaultValue": "system default",
          "accessPermission": "READ_WRITE",
          "name": "timeLabelFont",
          "description": "Specifies the font for the time labels that are drawn along the top of the EPG",
          "descriptionHTML": "Specifies the font for the time labels that are drawn along the top of the EPG"
        },
        "channelInfoColumnLabel": {
          "type": "string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "channelInfoColumnLabel",
          "description": "Specifies text used as a label for the channel info column (the left most column).  If this is empty the label will be set to the day of the week that the left-hand edge of the EPGGrid represents.",
          "descriptionHTML": "\u003cp\u003eSpecifies text used as a label for the channel info column (the left most column).\u0026nbsp; If this is empty the label will be set to the day of the week that the left-hand edge of the EPGGrid represents.\u003c/p\u003e"
        },
        "programNowNextTimeFocusedColor": {
          "type": "color",
          "defaultValue": "0x99",
          "accessPermission": "READ_WRITE",
          "name": "programNowNextTimeFocusedColor",
          "description": "When nowNextMode is true, specifies the text color for the time that appears in the Now/Next program cells when the program is focused",
          "descriptionHTML": "When nowNextMode is true, specifies the text color for the time that appears in the Now/Next program cells when the program is focused"
        },
        "fixedLayout": {
          "type": "Boolean",
          "defaultValue": "false",
          "accessPermission": "READ_WRITE",
          "name": "fixedLayout",
          "description": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a ContentNode node for the grid. This field is not used by lists.",
          "descriptionHTML": "Specifies that a grid will have a layout of items of different widths configured by parameters included in a \u003cstrong\u003eContentNode\u003c/strong\u003e node for the grid. This field is not used by lists."
        },
        "rotation": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "rotation",
          "description": "Defines the rotation angle about the scaleRotateCenter point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported.",
          "descriptionHTML": "Defines the rotation angle about the \u003ccode\u003escaleRotateCenter\u003c/code\u003e point (in radians) of the node local coordinate system. Positive values specify a counterclockwise rotation, negative values specify a clockwise rotation. For some Roku Player hardware, only rotations of 0, 90, 180 and 270 degrees are supported."
        },
        "timeBarBitmapUri": {
          "type": "URI string",
          "defaultValue": "",
          "accessPermission": "READ_WRITE",
          "name": "timeBarBitmapUri",
          "description": "Specifies the bitmap file to use as the background of the time bar that appears above the EPG channel grid. In most cases, this should be a 9-patch image that specifies expandable regions. Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.",
          "descriptionHTML": "\u003cp\u003eSpecifies the bitmap file to use as the background of the time bar that appears above the EPG channel grid.\u0026nbsp;\u003cspan\u003eIn most cases, this should be a 9-patch image that specifies expandable regions. \u003c/span\u003e Only set this field to specify a custom bitmap that differs in appearance from the default bitmap.\u003c/p\u003e"
        },
        "inheritParentTransform": {
          "type": "Boolean",
          "defaultValue": "true",
          "accessPermission": "READ_WRITE",
          "name": "inheritParentTransform",
          "description": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its translation, rotation, scale and scaleRotateCenter fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the Scene component).",
          "descriptionHTML": "If true, the node overall transformation is determined by combining the accumulated transformation matrix of all of its ancestors in the scene graph with the node local 2D transformation matrix described by its \u003ccode\u003etranslation\u003c/code\u003e, \u003ccode\u003erotation\u003c/code\u003e, \u003ccode\u003escale\u003c/code\u003e and \u003ccode\u003escaleRotateCenter\u003c/code\u003e fields. If false, the accumulated transformation of all of its ancestors in the Scene Graph is ignored and only the node local transformation matrix is used. This causes the node to be transformed relative to the root of the Scene Graph (that is, the \u003cstrong\u003eScene\u003c/strong\u003e component)."
        },
        "programNowNextTimeTitleGap": {
          "type": "float",
          "defaultValue": "15",
          "accessPermission": "READ_WRITE",
          "name": "programNowNextTimeTitleGap",
          "description": "Specifies the gap between the Now and Next entries",
          "descriptionHTML": "Specifies the gap between the Now and Next entries"
        },
        "rowHeights": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowHeights",
          "description": "Specifies differing heights for each list or grid row, to allow the height of each row to vary from row to row. The specified values override the itemSize field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSize field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing heights for each list or grid row, to allow the height of each row to vary from row to row.\u003c/p\u003e\u003cp\u003e\u003cspan\u003eThe specified values override the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSize\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/span\u003e\u003c/p\u003e"
        },
        "renderPass": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "renderPass",
          "description": "Used in combination with the numRenderPasses field of nodes extended from the  abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value unless you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the numRenderPasses field value for the list or grid to a value greater than 1. If the numRenderPasses field value for the list or grid is set to a value greater than 1, you must set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the numRenderPasses field value. If the numRenderPasses field is set to a value greater than 1, and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the numRenderPasses field value, the list or grid item sub-element will not render.",
          "descriptionHTML": "Used in combination with\u0026nbsp;the \u003ccode\u003enumRenderPasses\u003c/code\u003e field of nodes extended from the\u0026nbsp;\u003cstrong\u003e\n \u003cac:link\u003e\n  \u003cri:page ri:content-title\u003d\"ArrayGrid\" /\u003e\n \u003c/ac:link\u003e\u003c/strong\u003e abstract node class, to optimize rendering of lists and grids. This should never be set to a non-zero value \u003cem\u003eunless\u003c/em\u003e you are optimizing the performance of a list or grid rendering by specifying the sequence of rendering operations for sub-elements of the list or grid items, and have set the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid to a value greater than 1. If the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value for the list or grid is set to a value greater than 1, you \u003cem\u003emust\u003c/em\u003e set this field to a value greater than 0 for all sub-elements of the list or grid items, and not greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value. If the\u0026nbsp;\u003ccode\u003enumRenderPasses\u003c/code\u003e field is set to a value greater than 1,\u0026nbsp;and you set this field for a list or grid item sub-element to 0 (the default), or a value greater than the \u003ccode\u003enumRenderPasses\u003c/code\u003e field value, the list or grid item sub-element will not render."
        },
        "itemUnfocused": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_ONLY",
          "name": "itemUnfocused",
          "description": "Read-Only When focus moves away from a list or grid item, set to the index of the unfocused item.",
          "descriptionHTML": "\u003cp\u003e\u003cstrong\u003eRead-Only\u003cbr\u003e\u003c/strong\u003eWhen focus moves away from a list or grid item, set to the index of the unfocused item.\u003c/p\u003e"
        },
        "rowSpacings": {
          "type": "array of floats",
          "defaultValue": "[]",
          "accessPermission": "READ_WRITE",
          "name": "rowSpacings",
          "description": "Specifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row. The specified values override the itemSpacing field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the itemSpacing field vector2d Y-value is used for any unspecified rows.",
          "descriptionHTML": "\u003cp\u003eSpecifies differing spaces between each list or grid row, to allow the spacing between rows to vary from row to row.\u003c/p\u003e\u003cp\u003eThe specified values override the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value for each list or grid row corresponding to its position in the array, in top to bottom order. If the array contains fewer elements than the number of rows needed to display all the items in the list or grid, the \u003ccode\u003eitemSpacing\u003c/code\u003e field vector2d Y-value is used for any unspecified rows.\u003c/p\u003e"
        },
        "programNowNextHorizMargin": {
          "type": "float",
          "defaultValue": "14",
          "accessPermission": "READ_WRITE",
          "name": "programNowNextHorizMargin",
          "description": "Specifies the width of left and right margins of program cell text in Now/Next mode.",
          "descriptionHTML": "Specifies the width of left and right margins of program cell text in Now/Next mode."
        },
        "channelInfoTextColor": {
          "type": "color",
          "defaultValue": "0xffffff99",
          "accessPermission": "READ_WRITE",
          "name": "channelInfoTextColor",
          "description": "Specifies the text color for the channel names",
          "descriptionHTML": "Specifies the text color for the channel names"
        },
        "timeLabelColor": {
          "type": "color",
          "defaultValue": "0xffffff99",
          "accessPermission": "READ_WRITE",
          "name": "timeLabelColor",
          "description": "Specifies the text color for the time labels that are drawn along the top of the EPG",
          "descriptionHTML": "Specifies the text color for the time labels that are drawn along the top of the EPG"
        },
        "wrapDividerHeight": {
          "type": "float",
          "defaultValue": "36",
          "accessPermission": "READ_WRITE",
          "name": "wrapDividerHeight",
          "description": "If the vertFocusAnimationStyle field value is set to fixedFocusWrap, specifies the height of a bitmap used as a visual divider between the last and first list or grid items, when the list or grid wraps. Only set this field to use a value with a different appearance than the system default.",
          "descriptionHTML": "If the \u003ccode\u003evertFocusAnimationStyle\u003c/code\u003e field value is set to \u003ccode\u003efixedFocusWrap\u003c/code\u003e, specifies the height of a bitmap used as a visual divider between the last and first list or grid items, when the list or grid wraps. Only set this field to use a value with a different appearance than the system default."
        },
        "sectionDividerSpacing": {
          "type": "float",
          "defaultValue": "0.0",
          "accessPermission": "READ_WRITE",
          "name": "sectionDividerSpacing",
          "description": "If the ContentNode node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap.",
          "descriptionHTML": "If the \u003cstrong\u003eContentNode\u003c/strong\u003e node specifies sections for a list or grid, and the section dividers are specified to include an icon and/or a label, specifies the spacing between the icon, label, and section divider bitmap."
        },
        "translation": {
          "type": "vector2d",
          "defaultValue": "[0.0,0.0]",
          "accessPermission": "READ_WRITE",
          "name": "translation",
          "description": "Defines the origin of the node local coordinate system relative to its parent node.",
          "descriptionHTML": "Defines the origin of the node local coordinate system relative to its parent node."
        },
        "opacity": {
          "type": "float",
          "defaultValue": "1.0",
          "accessPermission": "READ_WRITE",
          "name": "opacity",
          "description": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch.",
          "descriptionHTML": "Sets the opacity of the node and its children. Opacity is the opposite of transparency. Opacity values range from 0.0 (fully transparent) to 1.0 (fully opaque). As the scene graph is traversed, the opacity values are combined by multiplying the current accumulated opacity with the node opacity, so that if the accumulated opacity of a node ancestors is 0.25 (75% transparent), the node will have opacity of 0.25 or less. This allows entire branches of the scene graph to fade in and out by animating the opacity of the node at the root of the branch."
        },
        "timeBarHeight": {
          "type": "float",
          "defaultValue": "50",
          "accessPermission": "READ_WRITE",
          "name": "timeBarHeight",
          "description": "Specifies the height of the region above the channel grid where the time labels are displayed.",
          "descriptionHTML": "Specifies the height of the region above the channel grid where the time labels are displayed."
        },
        "numColumns": {
          "type": "integer",
          "defaultValue": "0",
          "accessPermission": "READ_WRITE",
          "name": "numColumns",
          "description": "Specifies the number of columns in a grid. This field is not used for lists.",
          "descriptionHTML": "Specifies the number of columns in a grid. This field is not used for lists."
        }
      },
      "name": "EPGGrid",
      "description": "The EPGGrid node class implements an Electronic Program Guide (EPG) component. The channels are represented as horizontal rows, one for each channel. Each row has a channel name on the left, and an array of programs on that channel to the right. The size of each program depends on its duration. One of these programs has a remote control focus highlight indicator on it, and this highlight can be moved around using the remote control (as long as the EPGGrid node has remote control focus).",
      "descriptionHTML": "The \u003cstrong\u003eEPGGrid\u003c/strong\u003e node class implements an Electronic Program Guide (EPG) component. The channels are represented as horizontal rows, one for each channel. Each row has a channel name on the left, and an array of programs on that channel to the right. The size of each program depends on its duration. One of these programs has a remote control focus highlight indicator on it, and this highlight can be moved around using the remote control (as long as the \u003cstrong\u003eEPGGrid\u003c/strong\u003e node has remote control focus).",
      "documentationURL": "http://sdkdocs.roku.com/display/sdkdoc/EPGGrid",
      "attributeNames": [
        "id",
        "focusedChild",
        "focusable",
        "visible",
        "opacity",
        "translation",
        "rotation",
        "scale",
        "scaleRotateCenter",
        "childRenderOrder",
        "inheritParentTransform",
        "inheritParentOpacity",
        "renderPass",
        "itemSize",
        "itemSpacing",
        "numRows",
        "numColumns",
        "focusRow",
        "focusColumn",
        "horizFocusAnimationStyle",
        "vertFocusAnimationStyle",
        "drawFocusFeedbackOnTop",
        "drawFocusFeedback",
        "focusFootprintBitmapUri",
        "wrapDividerBitmapUri",
        "wrapDividerWidth",
        "wrapDividerHeight",
        "fixedLayout",
        "numRenderPasses",
        "rowHeights",
        "columnWidths",
        "rowSpacings",
        "columnSpacings",
        "sectionDividerBitmapUri",
        "sectionDividerFont",
        "sectionDividerTextColor",
        "sectionDividerSpacing",
        "sectionDividerWidth",
        "sectionDividerHeight",
        "sectionDividerMinWidth",
        "sectionDividerLeftOffset",
        "itemSelected",
        "itemFocused",
        "itemUnfocused",
        "jumpToItem",
        "animateToItem",
        "content",
        "leftEdgeTargetTime",
        "contentStartTime",
        "duration",
        "autoDismissTime",
        "minimumNowBarOffset",
        "nowNextMode",
        "useTunerTime",
        "maxDays",
        "homeChannel",
        "programFocused",
        "programUnfocused",
        "jumpToProgram",
        "focusBitmapUri",
        "nowBarBitmapUri",
        "channelInfoColumnLabel",
        "channelInfoBackgroundBitmapUri",
        "programBackgroundBitmapUri",
        "timeBarBitmapUri",
        "overlayBitmapUri",
        "overlayHeight",
        "channelInfoWidth",
        "infoGridGap",
        "channelInfoFont",
        "programTitleFont",
        "timeLabelFont",
        "channelInfoTextColor",
        "programTitleColor",
        "programTitleFocusedColor",
        "programNowNextTimeColor",
        "programNowNextTimeFocusedColor",
        "timeLabelColor",
        "timeLabelOffset",
        "timeBarHeight",
        "nowBarWidth",
        "nowBarHeight",
        "programHorizMargin",
        "programNowNextHorizMargin",
        "programNowNextTimeTitleGap"
      ],
      "documentationVersion": 33
    }
  }
}